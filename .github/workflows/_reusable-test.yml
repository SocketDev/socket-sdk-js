name: ðŸ§ª Reusable Test Workflow

# Comprehensive testing workflow that supports:
# - Multi-platform testing (Linux, Windows, macOS)
# - Multi-version Node.js matrix testing
# - Flexible test configuration
# - Artifact uploads for coverage and results
# - Configurable timeouts and concurrency

on:
  workflow_call:
    inputs:
      continue-on-error:
        description: 'Continue workflow even if job fails (e.g., true for experimental/nightly Node versions)'
        required: false
        type: boolean
        default: false
      debug:
        description: 'Enable debug output (e.g., "1" for verbose logging)'
        required: false
        type: string
        default: '0'
      fail-fast:
        description: 'Cancel all matrix jobs if one fails (e.g., false to run all combinations)'
        required: false
        type: boolean
        default: true
      matrix-exclude:
        description: 'Matrix combinations to exclude (e.g., ''[{"node-version": 20, "os": "windows-latest"}]'')'
        required: false
        type: string
        default: '[]'
      matrix-include:
        description: 'Additional matrix combinations (e.g., ''[{"node-version": "25-nightly", "os": "ubuntu-latest"}]'')'
        required: false
        type: string
        default: '[]'
      max-parallel:
        description: 'Maximum parallel jobs (e.g., 2 for rate-limited APIs, 0 for unlimited)'
        required: false
        type: number
        default: 4
      node-versions:
        description: 'Node.js versions to test (e.g., ''[18, 20, 22, "23.0.0-nightly"]'')'
        required: false
        type: string
        default: '[20, 22, 24]'
      os-versions:
        description: 'Operating systems (e.g., ''["ubuntu-latest", "windows-latest", "macos-latest"]'')'
        required: false
        type: string
        default: '["ubuntu-latest", "windows-latest"]'
      retention-days:
        description: 'Days to retain artifacts (e.g., 7 for one week, 30 for one month)'
        required: false
        type: number
        default: 7
      setup-script:
        description: 'Setup script before tests (e.g., "pnpm run build", "playwright install")'
        required: false
        type: string
        default: ''
      test-script:
        description: 'Test command (e.g., "pnpm test", "pnpm test -- --coverage")'
        required: false
        type: string
        default: 'pnpm run test-ci'
      timeout-minutes:
        description: 'Job timeout in minutes (e.g., 30 for large test suites)'
        required: false
        type: number
        default: 10
      upload-artifacts:
        description: 'Upload test artifacts like coverage (e.g., true for coverage reports)'
        required: false
        type: boolean
        default: false
      working-directory:
        description: 'Working directory (e.g., "packages/core" for monorepos)'
        required: false
        type: string
        default: '.'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test-matrix:
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      max-parallel: ${{ inputs.max-parallel }}
      matrix:
        node-version: ${{ fromJson(inputs.node-versions) }}
        os: ${{ fromJson(inputs.os-versions) }}
        exclude: ${{ fromJson(inputs.matrix-exclude) }}
        include: ${{ fromJson(inputs.matrix-include) }}
    name: Test Node ${{ matrix.node-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    continue-on-error: ${{ inputs.continue-on-error }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.16.0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run setup script
        if: inputs.setup-script != ''
        run: ${{ inputs.setup-script }}

      - name: Run tests
        run: ${{ inputs.test-script }}
        env:
          CI: true
          NODE_ENV: test
          DEBUG: ${{ inputs.debug }}

      - name: Upload test artifacts
        if: inputs.upload-artifacts && (success() || failure())
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-node-${{ matrix.node-version }}
          path: |
            ${{ inputs.working-directory }}/coverage/
            ${{ inputs.working-directory }}/test-results/
          retention-days: ${{ inputs.retention-days }}
          if-no-files-found: ignore

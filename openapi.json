{
  "openapi": "3.0.0",
  "info": {
    "description": "Specification of the Socket API endpoints",
    "title": "API Endpoints",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://api.socket.dev/v0"
    }
  ],
  "components": {
    "requestBodies": {},
    "responses": {
      "SocketBadRequest": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "error": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "details": {
                      "type": "object",
                      "description": "",
                      "default": null,
                      "nullable": true
                    }
                  },
                  "required": [
                    "details",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        },
        "description": "Bad request"
      },
      "SocketUnauthorized": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "error": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "details": {
                      "type": "object",
                      "description": "",
                      "default": null,
                      "nullable": true
                    }
                  },
                  "required": [
                    "details",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        },
        "description": "Unauthorized"
      },
      "SocketForbidden": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "error": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "details": {
                      "type": "object",
                      "description": "",
                      "default": null,
                      "nullable": true
                    }
                  },
                  "required": [
                    "details",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        },
        "description": "Insufficient max_quota for API method"
      },
      "SocketNotFoundResponse": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "error": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "details": {
                      "type": "object",
                      "description": "",
                      "default": null,
                      "nullable": true
                    }
                  },
                  "required": [
                    "details",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        },
        "description": "Resource not found"
      },
      "SocketTooManyRequestsResponse": {
        "description": "Insufficient quota for API route",
        "headers": {
          "Retry-After": {
            "description": "Retry contacting the endpoint *at least* after seconds.\nSee https://tools.ietf.org/html/rfc7231#section-7.1.3",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "error": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "details": {
                      "type": "object",
                      "description": "",
                      "default": null,
                      "nullable": true
                    }
                  },
                  "required": [
                    "details",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        }
      },
      "SocketInternalServerError": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "error": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "details": {
                      "type": "object",
                      "description": "",
                      "default": null,
                      "nullable": true
                    }
                  },
                  "required": [
                    "details",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        },
        "description": "Internal server error"
      },
      "SocketGone": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "error": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "details": {
                      "type": "object",
                      "description": "",
                      "default": null,
                      "nullable": true
                    }
                  },
                  "required": [
                    "details",
                    "message"
                  ]
                }
              },
              "required": [
                "error"
              ]
            }
          }
        },
        "description": "Gone"
      }
    },
    "schemas": {
      "SocketArtifact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SocketPURL"
          },
          {
            "$ref": "#/components/schemas/SocketArtifactLink"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/SocketId"
              },
              "author": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "description": "List of package authors or maintainers"
              },
              "size": {
                "type": "number",
                "description": "Total size of the package artifact in bytes",
                "default": 0
              },
              "repositoryType": {
                "type": "string",
                "description": "Hugging Face model, dataset, or space type",
                "default": ""
              },
              "alerts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SocketAlert"
                },
                "description": ""
              },
              "score": {
                "$ref": "#/components/schemas/SocketScore"
              },
              "inputPurl": {
                "type": "string",
                "description": "Original unmodified PURL input string before normalization",
                "default": ""
              },
              "batchIndex": {
                "type": "integer",
                "description": "Deprecated: Always 0. Previously used for batch ordering but replaced by inputPurl for better tracking.",
                "default": 0
              },
              "license": {
                "type": "string",
                "description": "",
                "default": ""
              },
              "licenseDetails": {
                "$ref": "#/components/schemas/LicenseDetails"
              },
              "licenseAttrib": {
                "$ref": "#/components/schemas/SAttrib1_N"
              }
            }
          }
        ]
      },
      "SocketBatchPURLFetch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocketBatchPURLRequest"
            },
            "description": ""
          }
        },
        "required": [
          "components"
        ]
      },
      "LicenseAllowListRequest": {
        "type": "object",
        "description": "",
        "default": null
      },
      "LicensePolicy": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "allow": {
            "$ref": "#/components/schemas/LicenseAllowListElabbed"
          },
          "warn": {
            "$ref": "#/components/schemas/LicenseAllowListElabbed"
          },
          "monitor": {
            "$ref": "#/components/schemas/LicenseAllowListElabbed"
          }
        },
        "required": [
          "allow",
          "monitor",
          "warn"
        ]
      },
      "LicenseAllowList": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "strings": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        },
        "required": [
          "strings"
        ]
      },
      "SLicenseMetaRes": {
        "type": "object",
        "description": "",
        "default": null
      },
      "SLicenseMetaReq": {
        "type": "object",
        "description": "",
        "default": null
      },
      "CDXManifestSchema": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bomFormat": {
            "type": "string",
            "description": "",
            "default": "CycloneDX"
          },
          "specVersion": {
            "type": "string",
            "description": "",
            "default": "1.5"
          },
          "serialNumber": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "version": {
            "type": "number",
            "description": "",
            "default": 0
          },
          "metadata": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "timestamp": {
                "type": "string",
                "description": "",
                "default": ""
              },
              "tools": {
                "type": "object",
                "additionalProperties": false,
                "description": "",
                "properties": {
                  "components": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/CDXComponentSchema"
                        },
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "author": {
                              "type": "string",
                              "description": "",
                              "default": "Socket"
                            },
                            "authors": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": "Socket"
                              },
                              "description": ""
                            },
                            "publisher": {
                              "type": "string",
                              "description": "",
                              "default": "Socket"
                            }
                          }
                        }
                      ]
                    },
                    "description": ""
                  }
                },
                "required": [
                  "components"
                ]
              },
              "authors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "",
                      "default": "Socket"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "description": ""
              },
              "supplier": {
                "type": "string",
                "description": "",
                "default": ""
              },
              "lifecycles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "phase": {
                      "type": "string",
                      "description": "",
                      "default": "build"
                    }
                  },
                  "required": [
                    "phase"
                  ]
                },
                "description": ""
              },
              "component": {
                "$ref": "#/components/schemas/CDXComponentSchema"
              },
              "properties": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "value": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                },
                "description": ""
              }
            },
            "required": [
              "authors",
              "component",
              "lifecycles",
              "timestamp",
              "tools"
            ]
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CDXComponentSchema"
            },
            "description": ""
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ref": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "dependsOn": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "",
                    "default": ""
                  },
                  "description": ""
                }
              },
              "required": [
                "ref"
              ]
            },
            "description": ""
          },
          "vulnerabilities": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "ref": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "id": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "source": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "url": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "description": ""
                },
                "ratings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "source": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "url": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "description": ""
                      },
                      "score": {
                        "type": "number",
                        "description": "",
                        "default": 0
                      },
                      "severity": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "method": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "vector": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      }
                    },
                    "description": ""
                  },
                  "description": ""
                },
                "cwes": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "description": "",
                    "default": 0
                  },
                  "description": ""
                },
                "description": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "detail": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "recommendation": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "advisories": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "title": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": [
                      "url"
                    ]
                  },
                  "description": ""
                },
                "created": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "published": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "updated": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "affects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "ref": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "versions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "version": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "status": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            }
                          },
                          "description": ""
                        },
                        "description": ""
                      }
                    },
                    "required": [
                      "ref"
                    ]
                  },
                  "description": ""
                },
                "analysis": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "justification": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "response": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "description": ""
                    },
                    "detail": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "firstIssued": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "lastUpdated": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "description": ""
                }
              },
              "required": [
                "id",
                "ref"
              ]
            },
            "description": ""
          }
        },
        "required": [
          "bomFormat",
          "components",
          "dependencies",
          "metadata",
          "serialNumber",
          "specVersion",
          "version"
        ]
      },
      "SPDXManifestSchema": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "spdxVersion": {
            "type": "string",
            "description": "",
            "default": "SPDX-2.3"
          },
          "dataLicense": {
            "type": "string",
            "description": "",
            "default": "CC0-1.0"
          },
          "SPDXID": {
            "type": "string",
            "description": "",
            "default": "SPDXRef-DOCUMENT"
          },
          "name": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "documentNamespace": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "creationInfo": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
              "created": {
                "type": "string",
                "description": "",
                "default": ""
              },
              "creators": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "description": ""
              }
            },
            "required": [
              "created",
              "creators"
            ]
          },
          "documentDescribes": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          "packages": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "name": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "SPDXID": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "versionInfo": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "packageFileName": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "description": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "primaryPackagePurpose": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "downloadLocation": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "filesAnalyzed": {
                  "type": "boolean",
                  "default": false,
                  "description": ""
                },
                "homepage": {
                  "type": "string",
                  "description": "",
                  "default": "NOASSERTION"
                },
                "licenseDeclared": {
                  "type": "string",
                  "description": "",
                  "default": "NOASSERTION"
                },
                "externalRefs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "referenceCategory": {
                        "type": "string",
                        "description": "",
                        "default": "PACKAGE-MANAGER"
                      },
                      "referenceType": {
                        "type": "string",
                        "description": "",
                        "default": "purl"
                      },
                      "referenceLocator": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": [
                      "referenceCategory",
                      "referenceLocator",
                      "referenceType"
                    ]
                  },
                  "description": ""
                },
                "checksums": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "algorithm": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "checksumValue": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": [
                      "algorithm",
                      "checksumValue"
                    ]
                  },
                  "description": ""
                }
              },
              "required": [
                "SPDXID",
                "externalRefs",
                "filesAnalyzed",
                "homepage",
                "licenseDeclared",
                "name",
                "packageFileName",
                "versionInfo"
              ]
            },
            "description": ""
          },
          "relationships": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "spdxElementId": {
                  "type": "string",
                  "description": "",
                  "default": "SPDXRef-DOCUMENT"
                },
                "relatedSpdxElement": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "relationshipType": {
                  "type": "string",
                  "description": "",
                  "default": "DESCRIBES"
                }
              },
              "required": [
                "relatedSpdxElement",
                "relationshipType",
                "spdxElementId"
              ]
            },
            "description": ""
          }
        },
        "required": [
          "SPDXID",
          "creationInfo",
          "dataLicense",
          "documentDescribes",
          "documentNamespace",
          "name",
          "packages",
          "relationships",
          "spdxVersion"
        ]
      },
      "SocketDiffArtifact": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SocketPURL"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "diffType": {
                "$ref": "#/components/schemas/SocketDiffArtifactType"
              },
              "id": {
                "$ref": "#/components/schemas/SocketId"
              },
              "author": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "description": "List of package authors or maintainers"
              },
              "base": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SocketArtifactLink"
                },
                "description": "Artifact links from the base/before state"
              },
              "capabilities": {
                "$ref": "#/components/schemas/Capabilities"
              },
              "head": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SocketArtifactLink"
                },
                "description": "Artifact links from the head/after state"
              },
              "qualifiers": {
                "$ref": "#/components/schemas/Qualifiers"
              },
              "size": {
                "type": "number",
                "description": "Total size of the package artifact in bytes",
                "default": 0
              },
              "license": {
                "type": "string",
                "description": "",
                "default": ""
              },
              "licenseDetails": {
                "$ref": "#/components/schemas/LicenseDetails"
              },
              "licenseAttrib": {
                "$ref": "#/components/schemas/SAttrib1_N"
              },
              "score": {
                "$ref": "#/components/schemas/SocketScore"
              },
              "alerts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SocketAlert"
                },
                "description": ""
              }
            },
            "required": [
              "diffType"
            ]
          }
        ]
      },
      "SStoredLicensePolicy": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "allow": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "description": "",
            "nullable": true
          },
          "warn": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "description": "",
            "nullable": true
          },
          "monitor": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "description": "",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "description": "",
            "nullable": true
          }
        },
        "required": [
          "allow",
          "monitor",
          "options",
          "warn"
        ]
      },
      "Capabilities": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "env": {
            "type": "boolean",
            "default": false,
            "description": "Package can read or modify environment variables"
          },
          "eval": {
            "type": "boolean",
            "default": false,
            "description": "Package uses dynamic code evaluation (eval, Function constructor, etc.)"
          },
          "fs": {
            "type": "boolean",
            "default": false,
            "description": "Package can read or write to the file system"
          },
          "net": {
            "type": "boolean",
            "default": false,
            "description": "Package can make network requests or create servers"
          },
          "shell": {
            "type": "boolean",
            "default": false,
            "description": "Package can execute shell commands or spawn processes"
          },
          "unsafe": {
            "type": "boolean",
            "default": false,
            "description": "Package uses unsafe or dangerous operations that could compromise security"
          }
        },
        "required": [
          "env",
          "eval",
          "fs",
          "net",
          "shell",
          "unsafe"
        ]
      },
      "Qualifiers": {},
      "SocketScore": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "license": {
            "type": "number",
            "description": "Score from 0.0 to 1.0 evaluating license permissiveness and compatibility",
            "default": 0
          },
          "maintenance": {
            "type": "number",
            "description": "Score from 0.0 to 1.0 evaluating project maintenance health and activity",
            "default": 0
          },
          "overall": {
            "type": "number",
            "description": "Combined score from 0.0 to 1.0 representing overall package health and safety",
            "default": 0
          },
          "quality": {
            "type": "number",
            "description": "Score from 0.0 to 1.0 evaluating code quality, testing, and documentation",
            "default": 0
          },
          "supplyChain": {
            "type": "number",
            "description": "Score from 0.0 to 1.0 evaluating supply chain security and provenance",
            "default": 0
          },
          "vulnerability": {
            "type": "number",
            "description": "Score from 0.0 to 1.0 based on known vulnerabilities and their severity",
            "default": 0
          }
        },
        "required": [
          "license",
          "maintenance",
          "overall",
          "quality",
          "supplyChain",
          "vulnerability"
        ]
      },
      "SocketManifestReference": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "file": {
            "type": "string",
            "description": "Path to the manifest file (e.g., package.json, pom.xml)",
            "default": ""
          },
          "start": {
            "type": "integer",
            "description": "Starting line or position in the manifest file",
            "default": 0
          },
          "end": {
            "type": "integer",
            "description": "Ending line or position in the manifest file",
            "default": 0
          }
        },
        "required": [
          "file"
        ]
      },
      "SocketId": {
        "type": "string",
        "description": "",
        "default": ""
      },
      "SocketReport": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "id": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "healthy": {
            "type": "boolean",
            "default": false,
            "description": ""
          },
          "issues": {
            "$ref": "#/components/schemas/SocketIssueList"
          },
          "score": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
              "avgSupplyChainRisk": {
                "type": "number",
                "description": "",
                "default": 0
              },
              "avgQuality": {
                "type": "number",
                "description": "",
                "default": 0
              },
              "avgMaintenance": {
                "type": "number",
                "description": "",
                "default": 0
              },
              "avgVulnerability": {
                "type": "number",
                "description": "",
                "default": 0
              },
              "avgLicense": {
                "type": "number",
                "description": "",
                "default": 0
              }
            },
            "required": [
              "avgLicense",
              "avgMaintenance",
              "avgQuality",
              "avgSupplyChainRisk",
              "avgVulnerability"
            ]
          },
          "url": {
            "type": "string",
            "description": "",
            "default": ""
          }
        },
        "required": [
          "healthy",
          "id",
          "issues",
          "score",
          "url"
        ]
      },
      "SocketIssueList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SocketIssue"
        },
        "description": ""
      },
      "SocketPackageScore": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "supplyChainRisk": {
            "$ref": "#/components/schemas/SocketMetricSchema"
          },
          "quality": {
            "$ref": "#/components/schemas/SocketMetricSchema"
          },
          "maintenance": {
            "$ref": "#/components/schemas/SocketMetricSchema"
          },
          "vulnerability": {
            "$ref": "#/components/schemas/SocketMetricSchema"
          },
          "license": {
            "$ref": "#/components/schemas/SocketMetricSchema"
          },
          "miscellaneous": {
            "$ref": "#/components/schemas/SocketMetricSchema"
          },
          "depscore": {
            "type": "number",
            "description": "",
            "default": 0
          }
        },
        "required": [
          "depscore",
          "license",
          "maintenance",
          "miscellaneous",
          "quality",
          "supplyChainRisk",
          "vulnerability"
        ]
      },
      "SocketPURL": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SocketPURL_Type"
          },
          "namespace": {
            "type": "string",
            "description": "Package namespace or scope, such as npm organizations (@angular), Maven groupIds, or Docker image owners",
            "default": ""
          },
          "name": {
            "type": "string",
            "description": "Package name within its ecosystem",
            "default": ""
          },
          "version": {
            "type": "string",
            "description": "Package version string",
            "default": ""
          },
          "subpath": {
            "type": "string",
            "description": "Path within the package to a specific file or directory, used to reference nested components",
            "default": ""
          },
          "release": {
            "type": "string",
            "description": "Package-specific release identifier, such as PyPI's artifact ID or the specific build/release version",
            "default": ""
          }
        },
        "required": [
          "type"
        ]
      },
      "SocketAlert": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string",
            "description": "Unique identifier for this alert instance, used for deduplication and tracking across scans",
            "default": ""
          },
          "type": {
            "type": "string",
            "description": "Alert type identifier referencing the alert type definition",
            "default": ""
          },
          "severity": {
            "$ref": "#/components/schemas/SocketIssueSeverity"
          },
          "category": {
            "$ref": "#/components/schemas/SocketCategory"
          },
          "file": {
            "type": "string",
            "description": "File path where this alert was detected",
            "default": ""
          },
          "start": {
            "type": "integer",
            "description": "Starting position of the alert in the file",
            "default": 0
          },
          "end": {
            "type": "integer",
            "description": "Ending position of the alert in the file",
            "default": 0
          },
          "props": {
            "type": "object",
            "description": "Additional alert-specific properties and metadata that vary by alert type",
            "default": null
          },
          "action": {
            "type": "string",
            "description": "Action to take for this alert (e.g., error, warn, ignore)",
            "default": ""
          },
          "actionSource": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of action source (e.g., policy, override)",
                "default": ""
              },
              "candidates": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Type of action candidate",
                      "default": ""
                    },
                    "action": {
                      "type": "string",
                      "description": "Proposed action for this candidate",
                      "default": ""
                    },
                    "actionPolicyIndex": {
                      "type": "integer",
                      "description": "Index of the policy rule for this candidate",
                      "default": 0
                    },
                    "repoLabelId": {
                      "type": "string",
                      "description": "Repository label ID associated with this candidate",
                      "default": ""
                    }
                  },
                  "required": [
                    "action",
                    "actionPolicyIndex",
                    "repoLabelId",
                    "type"
                  ]
                },
                "description": ""
              }
            },
            "required": [
              "candidates",
              "type"
            ]
          },
          "actionPolicyIndex": {
            "type": "integer",
            "description": "Index of the policy rule that triggered this action, for traceability to security policies",
            "default": 0
          },
          "fix": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of fix available (e.g., upgrade, remove, cve)",
                "default": ""
              },
              "description": {
                "type": "string",
                "description": "Human-readable description of how to fix this issue",
                "default": ""
              }
            },
            "required": [
              "description",
              "type"
            ]
          },
          "reachability": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "head": {
                "$ref": "#/components/schemas/ReachabilityResult"
              },
              "base": {
                "$ref": "#/components/schemas/ReachabilityResult"
              }
            },
            "description": ""
          }
        },
        "required": [
          "key",
          "type"
        ]
      },
      "LicenseDetails": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "spdxDisj": {
              "type": "string",
              "description": "SPDX license expression in disjunctive normal form (e.g., '(MIT OR Apache-2.0)')",
              "default": ""
            },
            "authors": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "",
                "default": ""
              },
              "description": "List of authors found in the license text"
            },
            "errorData": {
              "type": "string",
              "description": "Error details if license parsing failed",
              "default": ""
            },
            "provenance": {
              "type": "string",
              "description": "Source where this license information was detected (e.g., 'package.json', 'LICENSE file', 'README')",
              "default": ""
            },
            "filepath": {
              "type": "string",
              "description": "Path to the file containing this license information",
              "default": ""
            },
            "match_strength": {
              "type": "number",
              "description": "Confidence score from 0.0 to 1.0 indicating how well the detected license matches the source text",
              "default": 0
            }
          },
          "required": [
            "authors",
            "errorData",
            "filepath",
            "match_strength",
            "provenance",
            "spdxDisj"
          ]
        },
        "description": ""
      },
      "SAttrib1_N": {
        "type": "array",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "description": "",
          "properties": {
            "attribText": {
              "type": "string",
              "description": "Full text of the license attribution or copyright notice found in the package",
              "default": ""
            },
            "attribData": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "description": "",
                "properties": {
                  "purl": {
                    "type": "string",
                    "description": "Package URL this attribution applies to",
                    "default": ""
                  },
                  "foundInFilepath": {
                    "type": "string",
                    "description": "File path where this attribution was found",
                    "default": ""
                  },
                  "spdxExpr": {
                    "type": "string",
                    "description": "SPDX license expression parsed from the attribution text",
                    "default": ""
                  },
                  "foundAuthors": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "description": "Authors mentioned in this attribution"
                  }
                },
                "required": [
                  "foundAuthors",
                  "foundInFilepath",
                  "purl",
                  "spdxExpr"
                ]
              },
              "description": ""
            }
          },
          "required": [
            "attribData",
            "attribText"
          ]
        },
        "description": ""
      },
      "SocketArtifactLink": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "direct": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if this is a direct dependency (not transitive)"
          },
          "dev": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if this is a development-only dependency not used in production"
          },
          "dead": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if this package is deprecated, abandoned, or no longer maintained"
          },
          "manifestFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocketManifestReference"
            },
            "description": ""
          },
          "topLevelAncestors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocketId"
            },
            "description": "IDs of the root-level packages in the dependency tree that depend on this package"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SocketId"
            },
            "description": "IDs of packages that this package directly depends on"
          },
          "alertPriorities": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "result": {
                  "type": "integer",
                  "description": "Computed priority score for this alert",
                  "default": 0
                },
                "components": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "isFixable": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "result": {
                          "type": "number",
                          "description": "Contribution of fixability to the priority score",
                          "default": 0
                        },
                        "value": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether a fix is available for this alert"
                        }
                      },
                      "required": [
                        "result",
                        "value"
                      ]
                    },
                    "isReachable": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "result": {
                          "type": "number",
                          "description": "Contribution of reachability to the priority score",
                          "default": 0
                        },
                        "value": {
                          "type": "boolean",
                          "default": false,
                          "description": "Whether the vulnerable code is reachable"
                        },
                        "specificValue": {
                          "type": "string",
                          "description": "Specific reachability type value such as 'unreachable', 'maybe_reachable', or 'reachable'",
                          "default": ""
                        }
                      },
                      "required": [
                        "result",
                        "specificValue",
                        "value"
                      ]
                    },
                    "severity": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "result": {
                          "type": "number",
                          "description": "Contribution of severity to the priority score",
                          "default": 0
                        },
                        "value": {
                          "type": "integer",
                          "description": "Numeric severity level",
                          "default": 0
                        }
                      },
                      "required": [
                        "result",
                        "value"
                      ]
                    }
                  },
                  "required": [
                    "isFixable",
                    "isReachable",
                    "severity"
                  ]
                },
                "formula": {
                  "type": "string",
                  "description": "Formula used to calculate the priority score",
                  "default": ""
                }
              },
              "required": [
                "result"
              ]
            },
            "properties": {},
            "description": "Computed priority scores for each alert type based on severity, reachability, and fixability factors"
          },
          "artifact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SocketPURL"
              },
              {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/SocketId"
                  }
                },
                "required": [
                  "id"
                ]
              }
            ]
          },
          "alertKeysToReachabilityTypes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "",
                "default": ""
              },
              "description": ""
            },
            "properties": {},
            "description": "Deprecated: mapping of alert keys to arrays of reachability types found across different manifest files or code locations. This field is derived from alertKeysToReachabilitySummaries for backward compatibility; use that property instead."
          },
          "alertKeysToReachabilitySummaries": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": false,
                "description": "",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "",
                    "default": ""
                  },
                  "hash": {
                    "type": "string",
                    "description": "",
                    "default": ""
                  }
                },
                "required": [
                  "hash",
                  "type"
                ]
              },
              "description": ""
            },
            "properties": {},
            "description": "Mapping of alert keys to arrays of reachability summaries. Each summary contains a reachability type and a hash pointing to detailed analysis data (call stacks, file locations, confidence scores). Used for efficient storage and retrieval of comprehensive reachability analysis results without duplicating large analysis payloads."
          }
        },
        "description": ""
      },
      "SocketBatchPURLRequest": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "purl": {
            "type": "string",
            "description": "",
            "default": ""
          }
        },
        "required": [
          "purl"
        ]
      },
      "LicenseAllowListElabbed": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "strings": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          "classes": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          "packageURLs": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          "disjs": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        },
        "required": [
          "classes",
          "disjs",
          "packageURLs",
          "strings"
        ]
      },
      "CDXComponentSchema": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "author": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "publisher": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "group": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "name": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "version": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "description": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "scope": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "hashes": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "alg": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "content": {
                  "type": "string",
                  "description": "",
                  "default": ""
                }
              },
              "required": [
                "alg",
                "content"
              ]
            },
            "description": ""
          },
          "licenses": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "expression": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "license": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "name": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "url": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "description": ""
                }
              },
              "description": ""
            },
            "description": ""
          },
          "purl": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "externalReferences": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "url": {
                  "type": "string",
                  "description": "",
                  "default": ""
                }
              },
              "required": [
                "type",
                "url"
              ]
            },
            "description": ""
          },
          "type": {
            "type": "string",
            "description": "",
            "default": "application"
          },
          "bom-ref": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "evidence": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "identity": {
                "type": "object",
                "additionalProperties": false,
                "description": "",
                "properties": {
                  "field": {
                    "type": "string",
                    "description": "",
                    "default": ""
                  },
                  "confidence": {
                    "type": "number",
                    "description": "",
                    "default": 0
                  },
                  "methods": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "technique": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "confidence": {
                          "type": "number",
                          "description": "",
                          "default": 0
                        },
                        "value": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        }
                      },
                      "required": [
                        "confidence",
                        "technique",
                        "value"
                      ]
                    },
                    "description": ""
                  }
                },
                "required": [
                  "confidence",
                  "field",
                  "methods"
                ]
              },
              "occurrences": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "location": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "required": [
                    "location"
                  ]
                },
                "description": ""
              }
            },
            "required": [
              "identity"
            ]
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "value": {
                  "type": "string",
                  "description": "",
                  "default": ""
                }
              },
              "required": [
                "name",
                "value"
              ]
            },
            "description": ""
          },
          "cryptoProperties": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "description": "",
              "properties": {
                "assetType": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "algorithmProperties": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "executionEnvironment": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "implementationPlatform": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "required": [
                    "executionEnvironment",
                    "implementationPlatform"
                  ]
                }
              },
              "required": [
                "algorithmProperties",
                "assetType"
              ]
            },
            "description": ""
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CDXComponentSchema"
            },
            "description": ""
          }
        },
        "required": [
          "bom-ref",
          "group",
          "name",
          "purl",
          "type",
          "version"
        ]
      },
      "SocketDiffArtifactType": {
        "type": "string",
        "enum": [
          "added",
          "removed",
          "updated",
          "replaced",
          "unchanged"
        ],
        "description": "Type of change detected for this artifact in the diff",
        "default": "unchanged"
      },
      "SocketIssue": {
        "anyOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gptSecurity"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "notes": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "confidence": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          },
                          "severity": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          }
                        },
                        "required": [
                          "confidence",
                          "notes",
                          "severity"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gptAnomaly"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "notes": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "confidence": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          },
                          "severity": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          },
                          "risk": {
                            "type": "string",
                            "enum": [
                              "low",
                              "medium",
                              "high"
                            ],
                            "description": "",
                            "default": "medium"
                          }
                        },
                        "required": [
                          "confidence",
                          "notes",
                          "risk",
                          "severity"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gptMalware"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "notes": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "confidence": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          },
                          "severity": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          }
                        },
                        "required": [
                          "confidence",
                          "notes",
                          "severity"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "filesystemAccess"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "module": {
                            "type": "string",
                            "description": "",
                            "default": "fs"
                          }
                        },
                        "required": [
                          "module"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "networkAccess"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "module": {
                            "type": "string",
                            "description": "",
                            "default": "net"
                          }
                        },
                        "required": [
                          "module"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "shellAccess"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "module": {
                            "type": "string",
                            "description": "",
                            "default": "child_process"
                          }
                        },
                        "required": [
                          "module"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "debugAccess"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "module": {
                            "type": "string",
                            "description": "",
                            "default": "vm"
                          }
                        },
                        "required": [
                          "module"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "chromePermission"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "permission": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "permissionType": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "permission",
                          "permissionType"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "chromeHostPermission"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "permissionType": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "host",
                          "permissionType"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "chromeWildcardHostPermission"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "permissionType": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "host",
                          "permissionType"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "chromeContentScript"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "scriptFile": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "matches": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "runAt": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "matches",
                          "runAt",
                          "scriptFile"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "criticalCVE"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "cveId": {
                            "type": "string",
                            "description": "Common Vulnerabilities and Exposures identifier (e.g., CVE-2021-44228)",
                            "default": ""
                          },
                          "cwes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "",
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "id": {
                                  "type": "string",
                                  "description": "Common Weakness Enumeration identifier (e.g., CWE-79)",
                                  "default": ""
                                },
                                "name": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                }
                              },
                              "required": [
                                "description",
                                "id",
                                "name"
                              ]
                            },
                            "description": ""
                          },
                          "cvss": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Common Vulnerability Scoring System metrics",
                            "properties": {
                              "score": {
                                "type": "number",
                                "description": "CVSS base score ranging from 0.0 to 10.0",
                                "default": 0
                              },
                              "vectorString": {
                                "type": "string",
                                "description": "CVSS vector string (e.g., CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)",
                                "default": ""
                              }
                            },
                            "required": [
                              "score",
                              "vectorString"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "firstPatchedVersionIdentifier": {
                            "type": "string",
                            "description": "The first version that includes a patch for this vulnerability",
                            "default": ""
                          },
                          "ghsaId": {
                            "type": "string",
                            "description": "GitHub Security Advisory identifier (e.g., GHSA-1234-5678-9abc)",
                            "default": ""
                          },
                          "severity": {
                            "type": "string",
                            "description": "",
                            "default": "critical"
                          },
                          "title": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "url": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "vulnerableVersionRange": {
                            "type": "string",
                            "description": "Version range affected by this vulnerability (e.g., >= 2.0.0, < 2.17.1)",
                            "default": ""
                          },
                          "kevs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "",
                              "properties": {
                                "vulnerabilityName": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "shortDescription": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "requiredAction": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "dateAdded": {
                                  "type": "string",
                                  "description": "Date when added to CISA KEV catalog (ISO 8601 format)",
                                  "default": ""
                                },
                                "dueDate": {
                                  "type": "string",
                                  "description": "Remediation deadline for federal agencies (ISO 8601 format)",
                                  "default": "",
                                  "nullable": true
                                },
                                "knownRansomwareCampaignUse": {
                                  "type": "string",
                                  "description": "Known, Unknown, or specific ransomware campaign names",
                                  "default": "",
                                  "nullable": true
                                },
                                "notes": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "vendorProject": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "product": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                }
                              },
                              "required": [
                                "dateAdded",
                                "dueDate",
                                "knownRansomwareCampaignUse",
                                "notes",
                                "product",
                                "requiredAction",
                                "shortDescription",
                                "vendorProject",
                                "vulnerabilityName"
                              ]
                            },
                            "description": "",
                            "nullable": true
                          },
                          "epss": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Exploit Prediction Scoring System https://www.first.org/epss/",
                            "properties": {
                              "score": {
                                "type": "number",
                                "description": "",
                                "default": 0
                              },
                              "percentile": {
                                "type": "number",
                                "description": "",
                                "default": 0
                              }
                            },
                            "required": [
                              "percentile",
                              "score"
                            ],
                            "nullable": true
                          }
                        },
                        "required": [
                          "cveId",
                          "cvss",
                          "cwes",
                          "description",
                          "epss",
                          "firstPatchedVersionIdentifier",
                          "ghsaId",
                          "kevs",
                          "severity",
                          "title",
                          "url",
                          "vulnerableVersionRange"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "cve"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "cveId": {
                            "type": "string",
                            "description": "Common Vulnerabilities and Exposures identifier (e.g., CVE-2021-44228)",
                            "default": ""
                          },
                          "cwes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "",
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "id": {
                                  "type": "string",
                                  "description": "Common Weakness Enumeration identifier (e.g., CWE-79)",
                                  "default": ""
                                },
                                "name": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                }
                              },
                              "required": [
                                "description",
                                "id",
                                "name"
                              ]
                            },
                            "description": ""
                          },
                          "cvss": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Common Vulnerability Scoring System metrics",
                            "properties": {
                              "score": {
                                "type": "number",
                                "description": "CVSS base score ranging from 0.0 to 10.0",
                                "default": 0
                              },
                              "vectorString": {
                                "type": "string",
                                "description": "CVSS vector string (e.g., CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)",
                                "default": ""
                              }
                            },
                            "required": [
                              "score",
                              "vectorString"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "firstPatchedVersionIdentifier": {
                            "type": "string",
                            "description": "The first version that includes a patch for this vulnerability",
                            "default": ""
                          },
                          "ghsaId": {
                            "type": "string",
                            "description": "GitHub Security Advisory identifier (e.g., GHSA-1234-5678-9abc)",
                            "default": ""
                          },
                          "severity": {
                            "type": "string",
                            "description": "",
                            "default": "critical"
                          },
                          "title": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "url": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "vulnerableVersionRange": {
                            "type": "string",
                            "description": "Version range affected by this vulnerability (e.g., >= 2.0.0, < 2.17.1)",
                            "default": ""
                          },
                          "kevs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "",
                              "properties": {
                                "vulnerabilityName": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "shortDescription": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "requiredAction": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "dateAdded": {
                                  "type": "string",
                                  "description": "Date when added to CISA KEV catalog (ISO 8601 format)",
                                  "default": ""
                                },
                                "dueDate": {
                                  "type": "string",
                                  "description": "Remediation deadline for federal agencies (ISO 8601 format)",
                                  "default": "",
                                  "nullable": true
                                },
                                "knownRansomwareCampaignUse": {
                                  "type": "string",
                                  "description": "Known, Unknown, or specific ransomware campaign names",
                                  "default": "",
                                  "nullable": true
                                },
                                "notes": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "vendorProject": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "product": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                }
                              },
                              "required": [
                                "dateAdded",
                                "dueDate",
                                "knownRansomwareCampaignUse",
                                "notes",
                                "product",
                                "requiredAction",
                                "shortDescription",
                                "vendorProject",
                                "vulnerabilityName"
                              ]
                            },
                            "description": "",
                            "nullable": true
                          },
                          "epss": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Exploit Prediction Scoring System https://www.first.org/epss/",
                            "properties": {
                              "score": {
                                "type": "number",
                                "description": "",
                                "default": 0
                              },
                              "percentile": {
                                "type": "number",
                                "description": "",
                                "default": 0
                              }
                            },
                            "required": [
                              "percentile",
                              "score"
                            ],
                            "nullable": true
                          }
                        },
                        "required": [
                          "cveId",
                          "cvss",
                          "cwes",
                          "description",
                          "epss",
                          "firstPatchedVersionIdentifier",
                          "ghsaId",
                          "kevs",
                          "severity",
                          "title",
                          "url",
                          "vulnerableVersionRange"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "mediumCVE"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "cveId": {
                            "type": "string",
                            "description": "Common Vulnerabilities and Exposures identifier (e.g., CVE-2021-44228)",
                            "default": ""
                          },
                          "cwes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "",
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "id": {
                                  "type": "string",
                                  "description": "Common Weakness Enumeration identifier (e.g., CWE-79)",
                                  "default": ""
                                },
                                "name": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                }
                              },
                              "required": [
                                "description",
                                "id",
                                "name"
                              ]
                            },
                            "description": ""
                          },
                          "cvss": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Common Vulnerability Scoring System metrics",
                            "properties": {
                              "score": {
                                "type": "number",
                                "description": "CVSS base score ranging from 0.0 to 10.0",
                                "default": 0
                              },
                              "vectorString": {
                                "type": "string",
                                "description": "CVSS vector string (e.g., CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)",
                                "default": ""
                              }
                            },
                            "required": [
                              "score",
                              "vectorString"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "firstPatchedVersionIdentifier": {
                            "type": "string",
                            "description": "The first version that includes a patch for this vulnerability",
                            "default": ""
                          },
                          "ghsaId": {
                            "type": "string",
                            "description": "GitHub Security Advisory identifier (e.g., GHSA-1234-5678-9abc)",
                            "default": ""
                          },
                          "severity": {
                            "type": "string",
                            "description": "",
                            "default": "critical"
                          },
                          "title": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "url": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "vulnerableVersionRange": {
                            "type": "string",
                            "description": "Version range affected by this vulnerability (e.g., >= 2.0.0, < 2.17.1)",
                            "default": ""
                          },
                          "kevs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "",
                              "properties": {
                                "vulnerabilityName": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "shortDescription": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "requiredAction": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "dateAdded": {
                                  "type": "string",
                                  "description": "Date when added to CISA KEV catalog (ISO 8601 format)",
                                  "default": ""
                                },
                                "dueDate": {
                                  "type": "string",
                                  "description": "Remediation deadline for federal agencies (ISO 8601 format)",
                                  "default": "",
                                  "nullable": true
                                },
                                "knownRansomwareCampaignUse": {
                                  "type": "string",
                                  "description": "Known, Unknown, or specific ransomware campaign names",
                                  "default": "",
                                  "nullable": true
                                },
                                "notes": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "vendorProject": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "product": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                }
                              },
                              "required": [
                                "dateAdded",
                                "dueDate",
                                "knownRansomwareCampaignUse",
                                "notes",
                                "product",
                                "requiredAction",
                                "shortDescription",
                                "vendorProject",
                                "vulnerabilityName"
                              ]
                            },
                            "description": "",
                            "nullable": true
                          },
                          "epss": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Exploit Prediction Scoring System https://www.first.org/epss/",
                            "properties": {
                              "score": {
                                "type": "number",
                                "description": "",
                                "default": 0
                              },
                              "percentile": {
                                "type": "number",
                                "description": "",
                                "default": 0
                              }
                            },
                            "required": [
                              "percentile",
                              "score"
                            ],
                            "nullable": true
                          }
                        },
                        "required": [
                          "cveId",
                          "cvss",
                          "cwes",
                          "description",
                          "epss",
                          "firstPatchedVersionIdentifier",
                          "ghsaId",
                          "kevs",
                          "severity",
                          "title",
                          "url",
                          "vulnerableVersionRange"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "mildCVE"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "cveId": {
                            "type": "string",
                            "description": "Common Vulnerabilities and Exposures identifier (e.g., CVE-2021-44228)",
                            "default": ""
                          },
                          "cwes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "",
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "id": {
                                  "type": "string",
                                  "description": "Common Weakness Enumeration identifier (e.g., CWE-79)",
                                  "default": ""
                                },
                                "name": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                }
                              },
                              "required": [
                                "description",
                                "id",
                                "name"
                              ]
                            },
                            "description": ""
                          },
                          "cvss": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Common Vulnerability Scoring System metrics",
                            "properties": {
                              "score": {
                                "type": "number",
                                "description": "CVSS base score ranging from 0.0 to 10.0",
                                "default": 0
                              },
                              "vectorString": {
                                "type": "string",
                                "description": "CVSS vector string (e.g., CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)",
                                "default": ""
                              }
                            },
                            "required": [
                              "score",
                              "vectorString"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "firstPatchedVersionIdentifier": {
                            "type": "string",
                            "description": "The first version that includes a patch for this vulnerability",
                            "default": ""
                          },
                          "ghsaId": {
                            "type": "string",
                            "description": "GitHub Security Advisory identifier (e.g., GHSA-1234-5678-9abc)",
                            "default": ""
                          },
                          "severity": {
                            "type": "string",
                            "description": "",
                            "default": "critical"
                          },
                          "title": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "url": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "vulnerableVersionRange": {
                            "type": "string",
                            "description": "Version range affected by this vulnerability (e.g., >= 2.0.0, < 2.17.1)",
                            "default": ""
                          },
                          "kevs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "",
                              "properties": {
                                "vulnerabilityName": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "shortDescription": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "requiredAction": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "dateAdded": {
                                  "type": "string",
                                  "description": "Date when added to CISA KEV catalog (ISO 8601 format)",
                                  "default": ""
                                },
                                "dueDate": {
                                  "type": "string",
                                  "description": "Remediation deadline for federal agencies (ISO 8601 format)",
                                  "default": "",
                                  "nullable": true
                                },
                                "knownRansomwareCampaignUse": {
                                  "type": "string",
                                  "description": "Known, Unknown, or specific ransomware campaign names",
                                  "default": "",
                                  "nullable": true
                                },
                                "notes": {
                                  "type": "string",
                                  "description": "",
                                  "default": "",
                                  "nullable": true
                                },
                                "vendorProject": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "product": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                }
                              },
                              "required": [
                                "dateAdded",
                                "dueDate",
                                "knownRansomwareCampaignUse",
                                "notes",
                                "product",
                                "requiredAction",
                                "shortDescription",
                                "vendorProject",
                                "vulnerabilityName"
                              ]
                            },
                            "description": "",
                            "nullable": true
                          },
                          "epss": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Exploit Prediction Scoring System https://www.first.org/epss/",
                            "properties": {
                              "score": {
                                "type": "number",
                                "description": "",
                                "default": 0
                              },
                              "percentile": {
                                "type": "number",
                                "description": "",
                                "default": 0
                              }
                            },
                            "required": [
                              "percentile",
                              "score"
                            ],
                            "nullable": true
                          }
                        },
                        "required": [
                          "cveId",
                          "cvss",
                          "cwes",
                          "description",
                          "epss",
                          "firstPatchedVersionIdentifier",
                          "ghsaId",
                          "kevs",
                          "severity",
                          "title",
                          "url",
                          "vulnerableVersionRange"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "emptyPackage"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "trivialPackage"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "linesOfCode": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          }
                        },
                        "required": [
                          "linesOfCode"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "noREADME"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "shrinkwrap"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "licenseSpdxDisj"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "spdxDisj": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "licenseScanResult": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "violationData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "",
                              "default": null
                            },
                            "description": ""
                          },
                          "warnData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "",
                              "default": null
                            },
                            "description": ""
                          },
                          "monitorData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "",
                              "default": null
                            },
                            "description": ""
                          }
                        },
                        "required": [
                          "licenseScanResult",
                          "monitorData",
                          "spdxDisj",
                          "violationData",
                          "warnData"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unsafeCopyright"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "licenseChange"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "prevLicenseId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "newLicenseId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "newLicenseId",
                          "prevLicenseId"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "nonOSILicense"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "licenseId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "licenseId"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "deprecatedLicense"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "licenseId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "licenseId"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "missingLicense"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "nonSPDXLicense"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unclearLicense"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "possibleLicenseId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "possibleLicenseId"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "mixedLicense"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "licenseId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "licenseId"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "notice"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "modifiedLicense"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "licenseId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "similarity": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          }
                        },
                        "required": [
                          "licenseId",
                          "similarity"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "modifiedException"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "exceptionId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "similarity": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          },
                          "comments": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "comments",
                          "exceptionId",
                          "similarity"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "licenseException"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "exceptionId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "comments": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "comments",
                          "exceptionId"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "deprecatedException"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "exceptionId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "comments": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "comments",
                          "exceptionId"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "miscLicenseIssues"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "location": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "description",
                          "location"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unidentifiedLicense"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "location": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "maybeByteSpan": {
                            "type": "object",
                            "description": "",
                            "default": {}
                          },
                          "maybeTruncatedSource": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "match_strength": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          }
                        },
                        "required": [
                          "location",
                          "match_strength",
                          "maybeByteSpan",
                          "maybeTruncatedSource"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "noLicenseFound"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "explicitlyUnlicensedItem"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "location": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "maybeByteSpan": {
                            "type": "object",
                            "description": "",
                            "default": {}
                          },
                          "maybeTruncatedSource": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "location",
                          "maybeByteSpan",
                          "maybeTruncatedSource"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "copyleftLicense"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "licenseId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "licenseId"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "nonpermissiveLicense"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "licenseId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "licenseId"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "ambiguousClassifier"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "classifier": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "filepathOrProvenance": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "maybeByteSpan": {
                            "type": "object",
                            "description": "",
                            "default": {}
                          }
                        },
                        "required": [
                          "classifier",
                          "filepathOrProvenance",
                          "maybeByteSpan"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "invalidPackageJSON"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "httpDependency"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "packageName": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "url": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "packageName",
                          "url"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gitDependency"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "packageName": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "url": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "packageName",
                          "url"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gitHubDependency"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "packageName": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "githubUser": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "githubRepo": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "commitsh": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "commitsh",
                          "githubRepo",
                          "githubUser",
                          "packageName"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "fileDependency"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "packageName": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "filePath": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "filePath",
                          "packageName"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "noTests"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "noRepository"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "badSemver"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "badSemverDependency"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "packageName": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "packageVersion": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "packageName",
                          "packageVersion"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "noV1"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "noWebsite"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "noBugTracker"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "noAuthorData"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "typeModuleCompatibility"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "floatingDependency"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "dependency": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "dependency"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "manifestConfusion"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "description": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "description",
                          "key"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "malware"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "note": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "id",
                          "note"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "telemetry"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "note": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "id",
                          "note"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "troll"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "note": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "id",
                          "note"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "deprecated"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "reason": {
                            "type": "string",
                            "description": "",
                            "default": "This package is deprecated"
                          }
                        },
                        "required": [
                          "reason"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "chronoAnomaly"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "prevChronoDate": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "prevChronoVersion": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "prevSemverDate": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "prevSemverVersion": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "prevChronoDate",
                          "prevChronoVersion",
                          "prevSemverDate",
                          "prevSemverVersion"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "compromisedSSHKey"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "fingerprint": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "sshKey": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "username": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "fingerprint",
                          "sshKey",
                          "username"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "semverAnomaly"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "prevVersion": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "newVersion": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "newVersion",
                          "prevVersion"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "newAuthor"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "prevAuthor": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "newAuthor": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "newAuthor",
                          "prevAuthor"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unstableOwnership"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "author": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "author"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "missingAuthor"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unmaintained"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "lastPublish": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "lastPublish"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unpublished"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "version": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "version"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "majorRefactor"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "linesChanged": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "prevSize": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "curSize": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "changedPercent": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          }
                        },
                        "required": [
                          "changedPercent",
                          "curSize",
                          "linesChanged",
                          "prevSize"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "missingTarball"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "suspiciousStarActivity"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "percentageSuspiciousStars": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          },
                          "repository": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "percentageSuspiciousStars",
                          "repository"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unpopularPackage"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "socketUpgradeAvailable"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "categories": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "description": ""
                          },
                          "deprecated": {
                            "type": "boolean",
                            "default": false,
                            "description": ""
                          },
                          "interop": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "description": ""
                          },
                          "replacementPURL": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "version": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "categories",
                          "deprecated",
                          "interop",
                          "replacementPURL",
                          "version"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "longStrings"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "highEntropyStrings"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "urlStrings"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "urls": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "description": ""
                          }
                        },
                        "required": [
                          "urls"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "usesEval"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "evalType": {
                            "type": "string",
                            "description": "",
                            "default": "eval"
                          }
                        },
                        "required": [
                          "evalType"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "dynamicRequire"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "envVars"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "envVars": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "envVars"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "missingDependency"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unusedDependency"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "version": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "name",
                          "version"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "peerDependency"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "uncaughtOptionalDependency"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unresolvedRequire"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "extraneousDependency"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "obfuscatedRequire"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "obfuscatedFile"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "confidence": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          },
                          "notes": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "confidence",
                          "notes"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "minifiedFile"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "confidence": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          }
                        },
                        "required": [
                          "confidence"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "installScripts"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "script": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "source": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "script",
                          "source"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "hasNativeCode"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "binScriptConfusion"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "binScript": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "binScript"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "shellScriptOverride"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "binScript": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "binScript"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "didYouMean"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "alternatePackage": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "alternatePackage"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "gptDidYouMean"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "alternatePackage": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "alternatePackage"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "bidi"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "zeroWidth"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "badEncoding"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "encoding": {
                            "type": "string",
                            "description": "",
                            "default": "utf8"
                          }
                        },
                        "required": [
                          "encoding"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "homoglyphs"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "invisibleChars"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "suspiciousString"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "pattern": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "explanation": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "explanation",
                          "pattern"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "potentialVulnerability"
                ]
              },
              "value": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SocketIssueBasics"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "note": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "risk": {
                            "type": "string",
                            "enum": [
                              "low",
                              "medium",
                              "high"
                            ],
                            "description": "",
                            "default": "medium"
                          }
                        },
                        "required": [
                          "note",
                          "risk"
                        ]
                      },
                      "usage": {
                        "$ref": "#/components/schemas/SocketUsageRef"
                      }
                    },
                    "required": [
                      "description",
                      "props"
                    ]
                  }
                ]
              }
            }
          }
        ]
      },
      "SocketMetricSchema": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "score": {
            "type": "number",
            "description": "",
            "default": 0
          },
          "components": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SocketMetricComponent"
            },
            "properties": {},
            "description": ""
          },
          "limit": {
            "type": "number",
            "description": "",
            "default": 0
          },
          "limitingMetric": {
            "type": "string",
            "description": "",
            "default": ""
          }
        },
        "required": [
          "components",
          "score"
        ]
      },
      "SocketPURL_Type": {
        "type": "string",
        "enum": [
          "apk",
          "bitbucket",
          "cocoapods",
          "cargo",
          "chrome",
          "composer",
          "conan",
          "conda",
          "cran",
          "deb",
          "docker",
          "gem",
          "generic",
          "github",
          "golang",
          "hackage",
          "hex",
          "huggingface",
          "maven",
          "mlflow",
          "npm",
          "nuget",
          "qpkg",
          "oci",
          "pub",
          "pypi",
          "rpm",
          "swid",
          "swift",
          "unknown"
        ],
        "description": "Package ecosystem type identifier based on the PURL specification",
        "default": "unknown"
      },
      "SocketIssueSeverity": {
        "type": "string",
        "enum": [
          "low",
          "middle",
          "high",
          "critical"
        ],
        "description": "",
        "default": "low"
      },
      "SocketCategory": {
        "type": "string",
        "enum": [
          "supplyChainRisk",
          "quality",
          "maintenance",
          "vulnerability",
          "license",
          "miscellaneous"
        ],
        "description": "",
        "default": "miscellaneous"
      },
      "ReachabilityResult": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "precomputed",
              "full-scan"
            ],
            "description": "Type of reachability analysis performed",
            "default": "precomputed"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReachabilityResultItem"
            },
            "description": "Reachability analysis results for each vulnerability"
          }
        },
        "required": [
          "results",
          "type"
        ]
      },
      "SocketIssueBasics": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/SocketIssueSeverity"
          },
          "category": {
            "$ref": "#/components/schemas/SocketCategory"
          },
          "locations": {
            "$ref": "#/components/schemas/SocketRefList"
          },
          "label": {
            "type": "string",
            "description": "",
            "default": ""
          }
        },
        "required": [
          "category",
          "label",
          "locations",
          "severity"
        ]
      },
      "SocketUsageRef": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "file": {
            "$ref": "#/components/schemas/SocketRefFile"
          },
          "dependencies": {
            "$ref": "#/components/schemas/SocketRefList"
          }
        },
        "required": [
          "dependencies",
          "file"
        ]
      },
      "SocketMetricComponent": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "score": {
            "type": "number",
            "description": "",
            "default": 0
          },
          "maxScore": {
            "type": "number",
            "description": "",
            "default": 0
          },
          "limit": {
            "type": "number",
            "description": "",
            "default": 0
          },
          "value": {
            "type": "object",
            "description": "",
            "default": null
          }
        },
        "required": [
          "limit",
          "maxScore",
          "score",
          "value"
        ]
      },
      "ReachabilityResultItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/ReachabilityType"
          },
          "truncated": {
            "type": "boolean",
            "default": false,
            "description": "Indicates if the reachability analysis was stopped early due to depth or complexity limits"
          },
          "error": {
            "type": "string",
            "description": "Error message if reachability analysis failed",
            "default": ""
          },
          "matches": {
            "anyOf": [
              {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "function-level"
                    ]
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CallStackItem"
                      },
                      "description": ""
                    },
                    "description": ""
                  }
                }
              },
              {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "class-level"
                    ]
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ClassStackItem"
                      },
                      "description": ""
                    },
                    "description": ""
                  }
                }
              }
            ]
          },
          "workspacePath": {
            "type": "string",
            "description": "Path to the workspace root for multi-workspace projects",
            "default": ""
          },
          "subprojectPath": {
            "type": "string",
            "description": "Path to the subproject within the workspace",
            "default": ""
          }
        },
        "required": [
          "type"
        ]
      },
      "SocketRefList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SocketRef"
        },
        "description": ""
      },
      "SocketRefFile": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "path": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "range": {
            "$ref": "#/components/schemas/SocketRefTextRange"
          },
          "bytes": {
            "$ref": "#/components/schemas/SocketRefByteRange"
          }
        },
        "required": [
          "path"
        ]
      },
      "ReachabilityType": {
        "type": "string",
        "enum": [
          "missing_support",
          "undeterminable_reachability",
          "pending",
          "unreachable",
          "unknown",
          "direct_dependency",
          "error",
          "maybe_reachable",
          "reachable"
        ],
        "description": "Status of reachability analysis for vulnerable code paths",
        "default": "unknown"
      },
      "CallStackItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "purl": {
            "type": "string",
            "description": "Package URL (PURL) of the dependency containing this code",
            "default": ""
          },
          "sourceLocation": {
            "$ref": "#/components/schemas/SourceLocation"
          },
          "confidence": {
            "type": "number",
            "description": "Confidence score from 0.0 to 1.0 indicating how certain the reachability analysis is about this result",
            "default": 0
          }
        },
        "description": ""
      },
      "ClassStackItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "purl": {
            "type": "string",
            "description": "Package URL (PURL) of the dependency containing this class",
            "default": ""
          },
          "class": {
            "type": "string",
            "description": "Name of the class in the dependency",
            "default": ""
          },
          "confidence": {
            "type": "number",
            "description": "Confidence score from 0.0 to 1.0 indicating how certain the reachability analysis is about this result",
            "default": 0
          }
        },
        "description": ""
      },
      "SocketRef": {
        "anyOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "unknown"
                ]
              },
              "value": {
                "type": "object",
                "additionalProperties": false,
                "description": "",
                "properties": {}
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "npm"
                ]
              },
              "value": {
                "$ref": "#/components/schemas/SocketRefNPM"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "git"
                ]
              },
              "value": {
                "$ref": "#/components/schemas/SocketRefGit"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "web"
                ]
              },
              "value": {
                "$ref": "#/components/schemas/SocketRefWeb"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "pypi"
                ]
              },
              "value": {
                "$ref": "#/components/schemas/SocketRefPyPI"
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "go"
                ]
              },
              "value": {
                "$ref": "#/components/schemas/SocketRefGo"
              }
            }
          }
        ]
      },
      "SocketRefTextRange": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "startLine": {
            "type": "integer",
            "description": "",
            "default": 0
          },
          "startColumn": {
            "type": "integer",
            "description": "",
            "default": 0
          },
          "endLine": {
            "type": "integer",
            "description": "",
            "default": 0
          },
          "endColumn": {
            "type": "integer",
            "description": "",
            "default": 0
          }
        },
        "required": [
          "endColumn",
          "endLine",
          "startColumn",
          "startLine"
        ]
      },
      "SocketRefByteRange": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "start": {
            "type": "integer",
            "description": "",
            "default": 0
          },
          "end": {
            "type": "integer",
            "description": "",
            "default": 0
          }
        },
        "required": [
          "end",
          "start"
        ]
      },
      "SourceLocation": {
        "type": "object",
        "additionalProperties": false,
        "description": "",
        "properties": {
          "start": {
            "type": "object",
            "additionalProperties": false,
            "description": "",
            "properties": {
              "line": {
                "type": "integer",
                "description": "Line number in the source file",
                "default": 0
              },
              "column": {
                "type": "integer",
                "description": "Column number in the source file",
                "default": 0
              },
              "byteOffset": {
                "type": "integer",
                "description": "Absolute byte position from the beginning of the file, used for precise location tracking",
                "default": 0
              }
            },
            "required": [
              "byteOffset",
              "column",
              "line"
            ]
          },
          "end": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "line": {
                "type": "integer",
                "description": "Line number in the source file",
                "default": 0
              },
              "column": {
                "type": "integer",
                "description": "Column number in the source file",
                "default": 0
              },
              "byteOffset": {
                "type": "integer",
                "description": "Absolute byte position from the beginning of the file, used for precise location tracking",
                "default": 0
              }
            },
            "description": ""
          },
          "filename": {
            "type": "string",
            "description": "Path to the source file",
            "default": ""
          },
          "fileHash": {
            "type": "string",
            "description": "Hash of the source file for integrity verification",
            "default": ""
          }
        },
        "required": [
          "end",
          "fileHash",
          "filename",
          "start"
        ]
      },
      "SocketRefNPM": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "package": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "version": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "file": {
            "$ref": "#/components/schemas/SocketRefFile"
          }
        },
        "required": [
          "package"
        ]
      },
      "SocketRefGit": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "commit": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "tag": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "file": {
            "$ref": "#/components/schemas/SocketRefFile"
          }
        },
        "required": [
          "url"
        ]
      },
      "SocketRefWeb": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "file": {
            "$ref": "#/components/schemas/SocketRefFile"
          }
        },
        "required": [
          "url"
        ]
      },
      "SocketRefPyPI": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "package": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "version": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "artifact": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "file": {
            "$ref": "#/components/schemas/SocketRefFile"
          }
        },
        "required": [
          "package"
        ]
      },
      "SocketRefGo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "package": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "version": {
            "type": "string",
            "description": "",
            "default": ""
          },
          "file": {
            "$ref": "#/components/schemas/SocketRefFile"
          }
        },
        "required": [
          "package"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Organization Tokens can be passed as a Bearer token"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "Organization Tokens can be passed as the user field in basic auth"
      }
    }
  },
  "paths": {
    "/purl": {
      "post": {
        "tags": [
          "Packages"
        ],
        "summary": "Get Packages by PURL",
        "externalDocs": {
          "description": "Socket Package URLs (purl)",
          "url": "https://docs.socket.dev/reference/socket-package-urls-purl"
        },
        "operationId": "batchPackageFetch",
        "parameters": [
          {
            "name": "alerts",
            "in": "query",
            "required": false,
            "description": "Include alert metadata.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "actions",
            "in": "query",
            "required": false,
            "description": "Include only alerts with comma separated actions defined by security policy.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "error",
                  "monitor",
                  "warn",
                  "ignore"
                ]
              }
            },
            "explode": false,
            "style": "form"
          },
          {
            "name": "compact",
            "in": "query",
            "required": false,
            "description": "Compact metadata.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fixable",
            "in": "query",
            "required": false,
            "description": "Include only fixable alerts.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "licenseattrib",
            "in": "query",
            "required": false,
            "description": "Include license attribution data, including license text and author information. Maps attribution/license text to a list of data objects to which that attribution info applies.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "licensedetails",
            "in": "query",
            "required": false,
            "description": "Include detailed license information, including location and match strength, for each license datum.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SocketBatchPURLFetch"
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "packages:list"
            ]
          },
          {
            "basicAuth": [
              "packages:list"
            ]
          }
        ],
        "description": "Batch retrieval of package metadata and alerts by PURL strings. Compatible witch CycloneDX reports.\n\nPackage URLs (PURLs) are an ecosystem agnostic way to identify packages.\nCycloneDX SBOMs use the purl format to identify components.\nThis endpoint supports fetching metadata and alerts for multiple packages at once by passing an array of purl strings, or by passing an entire CycloneDX report.\n\nMore information on purl and CycloneDX:\n\n- [`purl` Spec](https://github.com/package-url/purl-spec)\n- [CycloneDX Spec](https://cyclonedx.org/specification/overview/#components)\n\nThis endpoint returns the latest available alert data for artifacts in the batch (stale while revalidate).\nActively running analysis will be returned when available on subsequent runs.\n\n## Examples:\n\n### Looking up an npm package:\n\n```json\n{\n  \"components\": [\n    {\n      \"purl\": \"pkg:npm/express@4.19.2\"\n    }\n  ]\n}\n```\n\n### Looking up an PyPi package:\n\n```json\n{\n  \"components\": [\n    {\n      \"purl\": \"pkg:pypi/django@5.0.6\"\n    }\n  ]\n}\n```\n\n### Looking up a Maven package:\n\n```json\n{\n  \"components\": [\n    {\n      \"purl\": \"pkg:maven/log4j/log4j@1.2.17\"\n    }\n  ]\n}\n```\n\n### Batch lookup\n\n```json\n{\n  \"components\": [\n    {\n      \"purl\": \"pkg:npm/express@4.19.2\"\n    },\n    {\n      \"purl\": \"pkg:pypi/django@5.0.6\"\n    },\n    {\n      \"purl\": \"pkg:maven/log4j/log4j@1.2.17\"\n    }\n  ]\n}\n```\n\nThis endpoint consumes 100 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- packages:list",
        "responses": {
          "200": {
            "content": {
              "application/x-ndjson": {
                "schema": {
                  "$ref": "#/components/schemas/SocketArtifact"
                }
              }
            },
            "description": "Socket issue lists and scores for all packages"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/license-policy": {
      "post": {
        "tags": [
          "Packages"
        ],
        "summary": "License Policy (Beta)",
        "operationId": "licensePolicy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseAllowListRequest"
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "packages:list",
              "license-policy:read"
            ]
          },
          {
            "basicAuth": [
              "packages:list",
              "license-policy:read"
            ]
          }
        ],
        "description": "Compare the license data found for a list of packages (given as PURL strings) with the contents of a configurable license policy,\nreturning information about license data which does not comply with the license allow list.\n\n## Example request body:\n\n```json\n{\n  \"components\": [\n    {\n      \"purl\": \"pkg:npm/lodash@4.17.21\"\n    },\n    {\n      \"purl\": \"pkg:npm/lodash@4.14.1\"\n    }\n  ],\n  \"allow\": [\n    \"permissive\",\n    \"pkg:npm/lodash?file_name=foo/test/*&version_glob=4.17.*\"\n  ],\n  \"warn\": [\n    \"copyleft\",\n    \"pkg:npm/lodash?file_name=foo/prod/*&version_glob=4.14.*\"\n  ],\n  \"options\": [\"toplevelOnly\"]\n}\n```\n\n\n## Return value\n\nFor each requested PURL, an array is returned. Each array contains a list of license policy violations\ndetected for the requested PURL.\n\nViolations are accompanied by a string identifying the offending license data as `spdxAtomOrExtraData`,\na message describing why the license data is believed to be incompatible with the license policy, and a list\nof locations (by filepath or other provenance information) where the offending license data may be found.\n\n```json\nArray<\n  Array<{\n    filepathOrProvenance: Array<string>,\n    level: \"warning\" | \"violation\",\n    purl: string,\n    spdxAtomOrExtraData: string,\n    violationExplanation: string\n  }>\n>\n```\n\n\n## License policy schema\n\n```json\n{\n  allow?: Array<string>\n  warn?: Array<string>\n  options?: Array<string>\n}\n```\n\nElements of the `allow` and `warn` arrays strings representing items which should be allowed, or which should trigger a warning; license data found in pacakge which not present in either array will produce a license violation (effectively a \"hard\" error). For example, to allow Apache-2.0 and MIT to the allow list, simply add the strings \"Apache-2.0\" and \"MIT\" to the `allow` array. Strings appearing in these arrays are generally \"what you see is what you get\", with two important exceptions: strings which are recognized as license classes and strings which are recognized as PURLs are handled differently to allow for more flexible license policy creation.\n  \n## License Classes\n  \nStrings which are license classes will expand to a list of licenses known to be in that particular license class. Recognized license classes are: \n  'permissive',\n  'permissive (model)',\n  'permissive (gold)',\n  'permissive (silver)',\n  'permissive (bronze)',\n  'permissive (lead)',\n  'copyleft',\n  'maximal copyleft',\n  'network copyleft',\n  'strong copyleft',\n  'weak copyleft',\n  'contributor license agreement',\n  'public domain',\n  'proprietary free',\n  'source available',\n  'proprietary',\n  'commercial',\n  'patent'\n\nUsers can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.\n \n\n## PURLs\n\nUsers may also modify their license policy's allow and warn lists by using [package URLs](https://github.com/package-url/purl-spec) (aka PURLs), which support glob patterns to allow a range of versions, files and directories, etc.\n\npurl qualifiers which support globs are `filename`, `version_glob`, `artifact_id` and `license_provenance` (primarily used for allowing data from registry metadata).\n\n### Examples:\nAllow all license data found in a specific version of a package 4.14.1: `pkg:npm/lodash@4.14.1`\nAllow all license data found in a version range of a package: `pkg:npm/lodash?version_glob=15.*`\nAllow all license data in the test directory of a given package for certain version ranges: `pkg:npm/lodash@15.*.*?file_name=lodash/test/*`\nAllow all license data taken from the package registry for a package and version range: `pkg:npm/lodash?version_glob=*&license_provenance=registry_metadata`\n    \n## Available options\n\n`toplevelOnly`: only apply the license policy to \"top level\" license data in a package, which includes registry metadata, LICENSE files, and manifest files which are closest to the root of the package.\n\n`applyToUnidentified`: Apply license policy to found but unidentified license data. If enabled, the license policy will be applied to license data which could not be affirmatively identified as a known license (this will effectively merge the license policy violation and unidentified license alerts). If disabled, license policy alerts will only be shown for license data which is positively identified as something not allowed or set to warn by the license policy.\n\nThis endpoint consumes 100 units of your quota.\n\nThis endpoint requires the following org token scopes:\n      - packages:list\n- license-policy:read",
        "responses": {
          "200": {
            "content": {
              "application/x-ndjson": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "filepathOrProvenance": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "description": ""
                      },
                      "level": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "purl": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "spdxAtomOrExtraData": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "violationExplanation": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": [
                      "filepathOrProvenance",
                      "level",
                      "purl",
                      "spdxAtomOrExtraData",
                      "violationExplanation"
                    ]
                  },
                  "description": ""
                }
              }
            },
            "description": "Data about license policy violations, if any exist"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          },
          "500": {
            "$ref": "#/components/responses/SocketInternalServerError"
          }
        },
        "x-readme": {}
      }
    },
    "/saturate-license-policy": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Saturate License Policy (Legacy)",
        "deprecated": true,
        "operationId": "saturateLicensePolicy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "description": "",
                "properties": {
                  "allow": {
                    "$ref": "#/components/schemas/LicenseAllowList"
                  },
                  "warn": {
                    "$ref": "#/components/schemas/LicenseAllowList"
                  },
                  "monitor": {
                    "$ref": "#/components/schemas/LicenseAllowList"
                  },
                  "allowedApprovalSources": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "description": "",
                    "nullable": true
                  },
                  "allowedFamilies": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "description": "",
                    "nullable": true
                  },
                  "allowedTiers": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "description": "",
                    "nullable": true
                  },
                  "allowedStrings": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "description": "",
                    "nullable": true
                  },
                  "allowedPURLs": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "description": "",
                    "nullable": true
                  },
                  "focusAlertsHere": {
                    "type": "boolean",
                    "default": false,
                    "description": "",
                    "nullable": true
                  }
                },
                "required": [
                  "allow",
                  "allowedApprovalSources",
                  "allowedFamilies",
                  "allowedPURLs",
                  "allowedStrings",
                  "allowedTiers",
                  "focusAlertsHere",
                  "monitor",
                  "warn"
                ]
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "packages:list"
            ]
          },
          {
            "basicAuth": [
              "packages:list"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference/updateorglicensepolicy) for more information. Use the [successor version](/v0/orgs/{org_slug}/settings/license-policy) instead.\n\nGet the \"saturated\" version of a license policy's allow list, filling in the entire set of allowed\nlicense data. For example, the saturated form of a license allow list which only specifies that\nlicenses in the tier \"maximal copyleft\" are allowed is shown below (note the expanded `allowedStrings` property):\n\n```json\n{\n  \"allowedApprovalSources\": [],\n  \"allowedFamilies\": [],\n  \"allowedTiers\": [\n    \"maximal copyleft\"\n  ],\n  \"allowedStrings\": [\n    \"Parity-6.0.0\",\n    \"QPL-1.0-INRIA-2004\",\n    \"QPL-1.0\",\n    \"RPL-1.1\",\n    \"RPL-1.5\"\n  ],\n  \"allowedPURLs\": [],\n  \"focusAlertsHere\": false\n}\n```\n\nThis may be helpful for users who want to compose more complex sets of allowed license data via\nthe \"allowedStrings\" property, or for users who want to know more about the contents of a particular\nlicense group (family, tier, or approval source).\n\n## Allow List Schema\n\n```json\n```\n\nwhere\n\nPermissiveTier ::= \"model permissive\" | \"gold\" | \"silver\" | \"bronze\" | \"lead\"\nCopyleftTier ::= \"maximal copyleft\" | \"network copyleft\" | \"strong copyleft\" | \"weak copyleft\"\n\n## Return Value\n\nThe returned value has the same shape as a license allow list:\n\n```json\n{\n  allowedApprovalSources?: Array<\"fsf\" | \"osi\">,\n  allowedFamilies?: Array<\"copyleft\" | \"permissive\">,\n  allowedTiers?: Array<PermissiveTier | CopyleftTier>,\n  allowedStrings?: Array<string>\n  allowedPURLs?: Array<string>\n  focusAlertsHere?: boolean\n}\n```\n\nwhere\n\nPermissiveTier ::= \"model permissive\" | \"gold\" | \"silver\" | \"bronze\" | \"lead\"\nCopyleftTier ::= \"maximal copyleft\" | \"network copyleft\" | \"strong copyleft\" | \"weak copyleft\"\n\nreaders can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.\n\n### Example request bodies:\n```json\n{\n  \"allowedApprovalSources\": [\"fsf\"],\n  \"allowedPURLs\": [],\n  \"allowedFamilies\": [\"copyleft\"],\n  \"allowedTiers\": [\"model permissive\"],\n  \"allowedStrings\": [\"License :: OSI Approved :: BSD License\"],\n  \"focusAlertsHere\": false\n}\n```\n\nThis endpoint consumes 100 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- packages:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicensePolicy"
                }
              }
            },
            "description": "Saturated License Allow List"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          },
          "500": {
            "$ref": "#/components/responses/SocketInternalServerError"
          }
        },
        "x-readme": {}
      }
    },
    "/license-metadata": {
      "post": {
        "tags": [
          "License"
        ],
        "summary": "License Metadata",
        "operationId": "licenseMetadata",
        "parameters": [
          {
            "name": "includetext",
            "in": "query",
            "required": false,
            "description": "If `true`, the response will include the full text of the requested licenses",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SLicenseMetaReq"
              }
            }
          },
          "required": false
        },
        "security": [],
        "description": "For an array of license identifiers or names (short form SPDX identifiers, or long form license names),\nreturns an array of metadata for the corresponding license, if the license is recognized. If the query \nparameter `includetext=true` is set, the returned metadata will also include the license text.\n\n  \n## Example request body:\n\n```json\n[\n  \"Apache-2.0\",\n  \"BSD Zero Clause License\"\n]\n```\n \n\n## Return value\n\n```json\n// Response schema:\nArray<{\n  licenseId: string,\n  name?: string,\n  deprecated?: string,\n  crossref?: string\n  classes: Array<string>\n  text?: string\n}>\n\n// Example response:\n[\n  {\n    \"licenseId\": \"Apache-2.0\",\n    \"name\": \"Apache License 2.0\",\n    \"deprecated\": false,\n    \"crossref\": \"https://spdx.org/licenses/Apache-2.0.html\",\n    \"classes\": [\n      \"fsf libre\",\n      \"osi approved\",\n      \"permissive (silver)\"\n    ]\n  },\n  {\n    \"licenseId\": \"0BSD\",\n    \"name\": \"BSD Zero Clause License\",\n    \"deprecated\": false,\n    \"crossref\": \"https://spdx.org/licenses/0BSD.html\",\n    \"classes\": [\n      \"osi approved\",\n      \"permissive (bronze)\"\n    ]\n  }\n] \n```\n\n\n## License policy schema\n\n```json\n{\n  allow?: Array<string>\n  warn?: Array<string>\n  options?: Array<string>\n}\n```\n\nElements of the `allow` and `warn` arrays strings representing items which should be allowed, or which should trigger a warning; license data found in pacakge which not present in either array will produce a license violation (effectively a \"hard\" error). For example, to allow Apache-2.0 and MIT to the allow list, simply add the strings \"Apache-2.0\" and \"MIT\" to the `allow` array. Strings appearing in these arrays are generally \"what you see is what you get\", with two important exceptions: strings which are recognized as license classes and strings which are recognized as PURLs are handled differently to allow for more flexible license policy creation.\n  \n## License Classes\n  \nStrings which are license classes will expand to a list of licenses known to be in that particular license class. Recognized license classes are: \n  'permissive',\n  'permissive (model)',\n  'permissive (gold)',\n  'permissive (silver)',\n  'permissive (bronze)',\n  'permissive (lead)',\n  'copyleft',\n  'maximal copyleft',\n  'network copyleft',\n  'strong copyleft',\n  'weak copyleft',\n  'contributor license agreement',\n  'public domain',\n  'proprietary free',\n  'source available',\n  'proprietary',\n  'commercial',\n  'patent'\n\nUsers can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.\n \n\n## PURLs\n\nUsers may also modify their license policy's allow and warn lists by using [package URLs](https://github.com/package-url/purl-spec) (aka PURLs), which support glob patterns to allow a range of versions, files and directories, etc.\n\npurl qualifiers which support globs are `filename`, `version_glob`, `artifact_id` and `license_provenance` (primarily used for allowing data from registry metadata).\n\n### Examples:\nAllow all license data found in a specific version of a package 4.14.1: `pkg:npm/lodash@4.14.1`\nAllow all license data found in a version range of a package: `pkg:npm/lodash?version_glob=15.*`\nAllow all license data in the test directory of a given package for certain version ranges: `pkg:npm/lodash@15.*.*?file_name=lodash/test/*`\nAllow all license data taken from the package registry for a package and version range: `pkg:npm/lodash?version_glob=*&license_provenance=registry_metadata`\n    \n## Available options\n\n`toplevelOnly`: only apply the license policy to \"top level\" license data in a package, which includes registry metadata, LICENSE files, and manifest files which are closest to the root of the package.\n\n`applyToUnidentified`: Apply license policy to found but unidentified license data. If enabled, the license policy will be applied to license data which could not be affirmatively identified as a known license (this will effectively merge the license policy violation and unidentified license alerts). If disabled, license policy alerts will only be shown for license data which is positively identified as something not allowed or set to warn by the license policy.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SLicenseMetaRes"
                }
              }
            },
            "description": "Metadata for the requested licenses"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          }
        },
        "x-readme": {}
      }
    },
    "/alert-types": {
      "post": {
        "tags": [
          "Alert Types"
        ],
        "summary": "Alert Types Metadata",
        "operationId": "alertTypes",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": false,
            "description": "Language for alert metadata",
            "schema": {
              "type": "string",
              "enum": [
                "ach-UG",
                "de-DE",
                "en-US",
                "es-ES",
                "fr-FR",
                "it-IT"
              ],
              "default": "en-US"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "",
                  "default": ""
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "security": [],
        "description": "For an array of alert type identifiers, returns metadata for each alert type. Optionally, specify a language via the 'language' query parameter.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "title": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "description": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "suggestion": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "emoji": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "nextStepTitle": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "props": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "properties": {},
                        "description": "",
                        "nullable": true
                      }
                    },
                    "required": [
                      "description",
                      "emoji",
                      "nextStepTitle",
                      "props",
                      "suggestion",
                      "title",
                      "type"
                    ]
                  },
                  "description": ""
                }
              }
            },
            "description": "Metadata for the requested alert types"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/audit-log": {
      "get": {
        "tags": [
          "Audit Log"
        ],
        "summary": "Get Audit Log Events",
        "operationId": "getAuditLogEvents",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Filter audit log events by type. Omit for all types.",
            "schema": {
              "type": "string",
              "enum": [
                "AddLicenseOverlayNote",
                "AssociateLabel",
                "CancelInvitation",
                "ChangeMemberRole",
                "ChangePlanSubscriptionSeats",
                "CreateApiToken",
                "CreateLabel",
                "DeleteLabel",
                "DeleteLabelSetting",
                "DeleteReport",
                "DeleteRepository",
                "DisassociateLabel",
                "JoinOrganization",
                "RemoveLicenseOverlay",
                "RemoveMember",
                "ResetInvitationLink",
                "ResetOrganizationSettingToDefault",
                "RevokeApiToken",
                "RotateApiToken",
                "SendInvitation",
                "SetLabelSettingToDefault",
                "SyncOrganization",
                "TransferOwnership",
                "UpdateAlertTriage",
                "UpdateApiTokenCommitter",
                "UpdateApiTokenMaxQuota",
                "UpdateApiTokenName",
                "UpdateApiTokenScopes",
                "UpdateApiTokenVisibility",
                "UpdateAutopatchCurated",
                "UpdateLabel",
                "UpdateLabelSetting",
                "UpdateOrganizationSetting",
                "UpgradeOrganizationPlan"
              ]
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "Number of events per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 30
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page token",
            "schema": {
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "description": "A Unix timestamp in seconds to filter results prior to this date.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "audit-log:list"
            ]
          },
          {
            "basicAuth": [
              "audit-log:list"
            ]
          }
        ],
        "description": "Paginated list of audit log events.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- audit-log:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "event_id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "created_at": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "country_code": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "organization_id": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "ip_address": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "payload": {
                            "type": "object",
                            "description": "",
                            "default": null,
                            "nullable": true
                          },
                          "status_code": {
                            "type": "integer",
                            "description": "",
                            "default": 0,
                            "nullable": true
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "user_agent": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "user_id": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "user_email": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "user_image": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "organization_name": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "description": ""
                      },
                      "description": ""
                    },
                    "nextPage": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    }
                  },
                  "required": [
                    "nextPage",
                    "results"
                  ]
                }
              }
            },
            "description": "The paginated list of events in an organizations audit log and the next page querystring token."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/export/cdx/{id}": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Export CycloneDX SBOM (Beta)",
        "operationId": "exportCDX",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The full scan OR sbom report ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "author",
            "in": "query",
            "required": false,
            "description": "The person(s) who created the BOM.\nSet this value if you're intending the modify the BOM and claim authorship.",
            "schema": {
              "type": "string",
              "default": "OWASP Foundation"
            }
          },
          {
            "name": "project_group",
            "in": "query",
            "required": false,
            "description": "Dependency track project group",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "project_name",
            "in": "query",
            "required": false,
            "description": "Dependency track project name. Default use the directory name",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "project_version",
            "in": "query",
            "required": false,
            "description": "Dependency track project version",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "description": "Dependency track project id. Either provide the id or the project name and version together",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "include_vulnerabilities",
            "in": "query",
            "required": false,
            "description": "Include vulnerability information in the SBOM. Also includes reachability/VEX if available",
            "schema": {
              "type": "string",
              "default": "false"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "report:read"
            ]
          },
          {
            "basicAuth": [
              "report:read"
            ]
          }
        ],
        "description": "Export a Socket SBOM as a CycloneDX SBOM\n\nSupported ecosystems:\n\n- crates\n- go\n- maven\n- npm\n- nuget\n- pypi\n- rubygems\n- spdx\n- cdx\n\nUnsupported ecosystems are filtered from the export.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- report:read",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CDXManifestSchema"
                }
              }
            },
            "description": "CycloneDX SBOM"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/export/spdx/{id}": {
      "get": {
        "tags": [
          "Export"
        ],
        "summary": "Export SPDX SBOM (Beta)",
        "operationId": "exportSPDX",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The full scan OR sbom report ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "author",
            "in": "query",
            "required": false,
            "description": "The person(s) who created the BOM.\nSet this value if you're intending the modify the BOM and claim authorship.",
            "schema": {
              "type": "string",
              "default": "OWASP Foundation"
            }
          },
          {
            "name": "project_group",
            "in": "query",
            "required": false,
            "description": "Dependency track project group",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "project_name",
            "in": "query",
            "required": false,
            "description": "Dependency track project name. Default use the directory name",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "project_version",
            "in": "query",
            "required": false,
            "description": "Dependency track project version",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": false,
            "description": "Dependency track project id. Either provide the id or the project name and version together",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "include_vulnerabilities",
            "in": "query",
            "required": false,
            "description": "Include vulnerability information in the SBOM. Also includes reachability/VEX if available",
            "schema": {
              "type": "string",
              "default": "false"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "report:read"
            ]
          },
          {
            "basicAuth": [
              "report:read"
            ]
          }
        ],
        "description": "Export a Socket SBOM as a SPDX SBOM\n\nSupported ecosystems:\n\n- crates\n- go\n- maven\n- npm\n- nuget\n- pypi\n- rubygems\n- spdx\n- cdx\n\nUnsupported ecosystems are filtered from the export.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- report:read",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPDXManifestSchema"
                }
              }
            },
            "description": "SPDX SBOM"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/full-scans": {
      "get": {
        "tags": [
          "Full Scans"
        ],
        "summary": "List full scans",
        "operationId": "getOrgFullScanList",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Specify Sort order.",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "created_at"
              ],
              "default": "created_at"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "description": "Specify sort direction.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "Specify the maximum number of results to return per page.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 30
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The token specifying which page to return.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "description": "A Unix timestamp in seconds that filters full-scans prior to the date.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo",
            "in": "query",
            "required": false,
            "description": "A repository slug to filter full-scans by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "description": "A branch name to filter full-scans by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pull_request",
            "in": "query",
            "required": false,
            "description": "A PR number to filter full-scans by.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commit_hash",
            "in": "query",
            "required": false,
            "description": "A commit hash to filter full-scans by.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "full-scans:list"
            ]
          },
          {
            "basicAuth": [
              "full-scans:list"
            ]
          }
        ],
        "description": "Returns a paginated list of all full scans in an org, excluding SBOM artifacts.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- full-scans:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "created_at": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "organization_id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "organization_slug": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "repository_id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "repository_slug": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "branch": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "commit_message": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "commit_hash": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "pull_request": {
                            "type": "integer",
                            "description": "",
                            "default": 0,
                            "nullable": true
                          },
                          "committers": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "description": ""
                          },
                          "html_url": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "api_url": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "repo": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "html_report_url": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "integration_type": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "integration_repo_url": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "integration_branch_url": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "integration_commit_url": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "integration_pull_request_url": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "scan_state": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "precrawl",
                              "resolve",
                              "scan"
                            ],
                            "description": "The current processing status of the SBOM",
                            "default": "pending",
                            "nullable": true
                          }
                        },
                        "description": ""
                      },
                      "description": ""
                    },
                    "nextPage": {
                      "type": "integer",
                      "description": "",
                      "default": 0,
                      "nullable": true
                    }
                  },
                  "required": [
                    "nextPage",
                    "results"
                  ]
                }
              }
            },
            "description": "Lists repositories for the specified organization. The authenticated user must be a member of the organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "post": {
        "tags": [
          "Full Scans"
        ],
        "summary": "Create full scan",
        "operationId": "CreateOrgFullScan",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo",
            "in": "query",
            "required": true,
            "description": "The slug of the repository to associate the full-scan with.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "description": "The branch name to associate the full-scan with. Branch names must follow Git branch name rules: be 1–255 characters long; cannot be exactly @;  cannot begin or end with /, ., or .lock; cannot contain \"//\", \"..\", or \"@{\"; and cannot include control characters, spaces, or any of ~^:?*[.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commit_message",
            "in": "query",
            "required": false,
            "description": "The commit message to associate the full-scan with.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commit_hash",
            "in": "query",
            "required": false,
            "description": "The commit hash to associate the full-scan with.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pull_request",
            "in": "query",
            "required": false,
            "description": "The pull request number to associate the full-scan with.",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "committers",
            "in": "query",
            "required": false,
            "description": "The committers to associate the full-scan with. Set query more than once to set multiple.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integration_type",
            "in": "query",
            "required": false,
            "description": "The integration type to associate the full-scan with. Defaults to \"Api\" if omitted.",
            "schema": {
              "type": "string",
              "enum": [
                "api",
                "github",
                "gitlab",
                "bitbucket",
                "azure"
              ]
            }
          },
          {
            "name": "integration_org_slug",
            "in": "query",
            "required": false,
            "description": "The integration org slug to associate the full-scan with. If omitted, the Socket org name will be used. This is used to generate links and badges.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "make_default_branch",
            "in": "query",
            "required": false,
            "description": "Set the default branch of the repository to the branch of this full-scan. A branch name is required with this option.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "set_as_pending_head",
            "in": "query",
            "required": false,
            "description": "Designate this full-scan as the latest scan of a given branch. Default branch head scans are included in org alerts. This is only supported on the default branch. A branch name is required with this option.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "tmp",
            "in": "query",
            "required": false,
            "description": "Create a temporary full-scan that is not listed in the reports dashboard. Cannot be used when set_as_pending_head=true.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "default": {
                    "type": "Buffer",
                    "data": []
                  },
                  "format": "binary",
                  "description": ""
                },
                "properties": {},
                "description": ""
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "full-scans:create"
            ]
          },
          {
            "basicAuth": [
              "full-scans:create"
            ]
          }
        ],
        "description": "Create a full scan from a set of package manifest files. Returns a full scan including all SBOM artifacts.\n\nTo get a list of supported filetypes that can be uploaded in a full-scan, see the [Get supported file types](/reference/getsupportedfiles) endpoint.\n\nThe maximum number of files you can upload at a time is 5000 and each file can be no bigger than 16.8 MB.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- full-scans:create",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "created_at": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "organization_id": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "organization_slug": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "repository_id": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "repository_slug": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "branch": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "commit_message": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "commit_hash": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "pull_request": {
                      "type": "integer",
                      "description": "",
                      "default": 0,
                      "nullable": true
                    },
                    "committers": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "description": ""
                    },
                    "html_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "api_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "repo": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "html_report_url": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "integration_type": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "integration_repo_url": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "integration_branch_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "integration_commit_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "integration_pull_request_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "scan_state": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "precrawl",
                        "resolve",
                        "scan"
                      ],
                      "description": "The current processing status of the SBOM",
                      "default": "pending",
                      "nullable": true
                    },
                    "unmatchedFiles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "description": ""
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "The details of the created full scan."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/full-scans/{full_scan_id}": {
      "get": {
        "tags": [
          "Full Scans"
        ],
        "summary": "Stream full scan",
        "operationId": "getOrgFullScan",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "full_scan_id",
            "in": "path",
            "required": true,
            "description": "The ID of the full scan",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_alert_priority_details",
            "in": "query",
            "required": false,
            "description": "Control which alert priority fields to include in the response. Set to \"true\" to include all fields, \"false\" to exclude all fields, or specify individual fields like \"components,formula\" to include only those fields.",
            "schema": {
              "oneOf": [
                {
                  "type": "boolean",
                  "default": false
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "component",
                      "formula"
                    ]
                  }
                }
              ],
              "default": false
            }
          },
          {
            "name": "include_license_details",
            "in": "query",
            "required": true,
            "description": "Include license details in the response. This can increase the response size significantly.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "full-scans:list"
            ]
          },
          {
            "basicAuth": [
              "full-scans:list"
            ]
          }
        ],
        "description": "Stream all SBOM artifacts for a full scan.\n\nThis endpoint returns the latest, available alert data for artifacts in the full scan (stale while revalidate).\nActively running analysis will be returned when available on subsequent runs.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- full-scans:list",
        "responses": {
          "200": {
            "content": {
              "application/x-ndjson": {
                "schema": {
                  "$ref": "#/components/schemas/SocketArtifact"
                }
              }
            },
            "description": "Socket issue lists and scores for all packages"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "delete": {
        "tags": [
          "Full Scans"
        ],
        "summary": "Delete full scan",
        "operationId": "deleteOrgFullScan",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "full_scan_id",
            "in": "path",
            "required": true,
            "description": "The ID of the full scan",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "full-scans:delete"
            ]
          },
          {
            "basicAuth": [
              "full-scans:delete"
            ]
          }
        ],
        "description": "Delete an existing full scan.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- full-scans:delete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "",
                      "default": "ok"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/full-scans/{full_scan_id}/metadata": {
      "get": {
        "tags": [
          "Full Scans"
        ],
        "summary": "Get full scan metadata",
        "operationId": "getOrgFullScanMetadata",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "full_scan_id",
            "in": "path",
            "required": true,
            "description": "The ID of the full scan",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "full-scans:list"
            ]
          },
          {
            "basicAuth": [
              "full-scans:list"
            ]
          }
        ],
        "description": "Get metadata for a single full scan\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- full-scans:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "created_at": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "organization_id": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "organization_slug": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "repository_id": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "repository_slug": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "branch": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "commit_message": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "commit_hash": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "pull_request": {
                      "type": "integer",
                      "description": "",
                      "default": 0,
                      "nullable": true
                    },
                    "committers": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "description": ""
                    },
                    "html_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "api_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "repo": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "html_report_url": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "integration_type": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "integration_repo_url": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "integration_branch_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "integration_commit_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "integration_pull_request_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "scan_state": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "precrawl",
                        "resolve",
                        "scan"
                      ],
                      "description": "The current processing status of the SBOM",
                      "default": "pending",
                      "nullable": true
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "The data from the full scan"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/full-scans/diff": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Diff Full Scans",
        "deprecated": true,
        "operationId": "GetOrgDiffScan",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "required": true,
            "description": "The full scan ID of the base/target of the diff (older)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "required": true,
            "description": "The full scan ID of the head/changed side of the diff (newer)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_license_details",
            "in": "query",
            "required": false,
            "description": "Include license details in the response. This can increase the response size significantly.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "full-scans:list"
            ]
          },
          {
            "basicAuth": [
              "full-scans:list"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.**\n\nGet the difference between two existing Full Scans. The results are not persisted.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- full-scans:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "before": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "created_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_slug": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_slug": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "branch": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "commit_message": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "commit_hash": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "pull_request": {
                          "type": "integer",
                          "description": "",
                          "default": 0,
                          "nullable": true
                        },
                        "committers": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "description": ""
                        },
                        "html_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "api_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        }
                      },
                      "required": [
                        "api_url",
                        "branch",
                        "commit_hash",
                        "commit_message",
                        "committers",
                        "created_at",
                        "html_url",
                        "id",
                        "organization_id",
                        "organization_slug",
                        "pull_request",
                        "repository_id",
                        "repository_slug",
                        "updated_at"
                      ]
                    },
                    "after": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "created_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_slug": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_slug": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "branch": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "commit_message": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "commit_hash": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "pull_request": {
                          "type": "integer",
                          "description": "",
                          "default": 0,
                          "nullable": true
                        },
                        "committers": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "description": ""
                        },
                        "html_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "api_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        }
                      },
                      "required": [
                        "api_url",
                        "branch",
                        "commit_hash",
                        "commit_message",
                        "committers",
                        "created_at",
                        "html_url",
                        "id",
                        "organization_id",
                        "organization_slug",
                        "pull_request",
                        "repository_id",
                        "repository_slug",
                        "updated_at"
                      ]
                    },
                    "artifacts": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "added": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SocketDiffArtifact"
                          },
                          "description": ""
                        },
                        "removed": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SocketDiffArtifact"
                          },
                          "description": ""
                        },
                        "unchanged": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SocketDiffArtifact"
                          },
                          "description": ""
                        },
                        "replaced": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SocketDiffArtifact"
                          },
                          "description": ""
                        },
                        "updated": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SocketDiffArtifact"
                          },
                          "description": ""
                        }
                      },
                      "required": [
                        "added",
                        "removed",
                        "replaced",
                        "unchanged",
                        "updated"
                      ]
                    },
                    "directDependenciesChanged": {
                      "type": "boolean",
                      "default": false,
                      "description": ""
                    },
                    "diff_report_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    }
                  },
                  "required": [
                    "after",
                    "artifacts",
                    "before",
                    "diff_report_url",
                    "directDependenciesChanged"
                  ]
                }
              }
            },
            "description": "The difference between the two provided Full Scans."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/full-scans/diff/gfm": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "SCM Comment for Scan Diff",
        "deprecated": true,
        "operationId": "GetOrgFullScanDiffGfm",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "required": true,
            "description": "The head full scan ID (newer)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "required": true,
            "description": "The base full scan ID (older)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "full-scans:list"
            ]
          },
          {
            "basicAuth": [
              "full-scans:list"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.**\n\nGet the dependency overview and dependency alert comments in GitHub flavored markdown between the diff between two existing full scans.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- full-scans:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "before": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "created_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_slug": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_slug": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "branch": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "commit_message": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "commit_hash": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "pull_request": {
                          "type": "integer",
                          "description": "",
                          "default": 0,
                          "nullable": true
                        },
                        "committers": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "description": ""
                        },
                        "html_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "api_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        }
                      },
                      "required": [
                        "api_url",
                        "branch",
                        "commit_hash",
                        "commit_message",
                        "committers",
                        "created_at",
                        "html_url",
                        "id",
                        "organization_id",
                        "organization_slug",
                        "pull_request",
                        "repository_id",
                        "repository_slug",
                        "updated_at"
                      ]
                    },
                    "after": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "created_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_slug": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_slug": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "branch": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "commit_message": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "commit_hash": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "pull_request": {
                          "type": "integer",
                          "description": "",
                          "default": 0,
                          "nullable": true
                        },
                        "committers": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "description": ""
                        },
                        "html_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "api_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        }
                      },
                      "required": [
                        "api_url",
                        "branch",
                        "commit_hash",
                        "commit_message",
                        "committers",
                        "created_at",
                        "html_url",
                        "id",
                        "organization_id",
                        "organization_slug",
                        "pull_request",
                        "repository_id",
                        "repository_slug",
                        "updated_at"
                      ]
                    },
                    "comments": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "overview": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "alerts": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        }
                      },
                      "required": [
                        "alerts",
                        "overview"
                      ]
                    },
                    "directDependenciesChanged": {
                      "type": "boolean",
                      "default": false,
                      "description": ""
                    },
                    "diff_report_url": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    }
                  },
                  "required": [
                    "after",
                    "before",
                    "comments",
                    "diff_report_url",
                    "directDependenciesChanged"
                  ]
                }
              }
            },
            "description": "Metadata about the full scans and the dependency overview and dependency alert comment. Can be used in a pull request context."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/diff-scans": {
      "get": {
        "tags": [
          "Diff Scans"
        ],
        "summary": "List diff scans",
        "operationId": "listOrgDiffScans",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Specify sort field.",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "updated_at"
              ],
              "default": "created_at"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "description": "Specify sort direction.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "Specify the maximum number of results to return per page.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor for pagination. Use the next_cursor or prev_cursor from previous responses.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repository_id",
            "in": "query",
            "required": false,
            "description": "Filter by repository ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before_full_scan_id",
            "in": "query",
            "required": false,
            "description": "Filter by before full scan ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after_full_scan_id",
            "in": "query",
            "required": false,
            "description": "Filter by after full scan ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "diff-scans:list"
            ]
          },
          {
            "basicAuth": [
              "diff-scans:list"
            ]
          }
        ],
        "description": "Returns a paginated list of all diff scans in an organization.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- diff-scans:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "organization_id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "repository_id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "created_at": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "before_full_scan_id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "after_full_scan_id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "description": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "external_href": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "merge": {
                            "type": "boolean",
                            "default": false,
                            "description": ""
                          },
                          "html_url": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "api_url": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          }
                        },
                        "required": [
                          "after_full_scan_id",
                          "api_url",
                          "before_full_scan_id",
                          "created_at",
                          "description",
                          "external_href",
                          "html_url",
                          "id",
                          "merge",
                          "organization_id",
                          "repository_id",
                          "updated_at"
                        ]
                      },
                      "description": ""
                    },
                    "next_page_href": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "next_cursor": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    }
                  },
                  "required": [
                    "next_cursor",
                    "next_page_href",
                    "results"
                  ]
                }
              }
            },
            "description": "Lists diff scans for the specified organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/diff-scans/{diff_scan_id}": {
      "get": {
        "tags": [
          "Diff Scans"
        ],
        "summary": "Get diff scan",
        "operationId": "getDiffScanById",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diff_scan_id",
            "in": "path",
            "required": true,
            "description": "The ID of the diff scan",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "omit_license_details",
            "in": "query",
            "required": false,
            "description": "Omit license details in the response. This can reduce the size of the response significantly, but will not include license information for the artifacts.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "diff-scans:list"
            ]
          },
          {
            "basicAuth": [
              "diff-scans:list"
            ]
          }
        ],
        "description": "Get the difference between two full scans from an existing diff scan resource.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- diff-scans:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "diff_scan": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "created_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "before_full_scan": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "created_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "updated_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "branch": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_message": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_hash": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "pull_request": {
                              "type": "integer",
                              "description": "",
                              "default": 0,
                              "nullable": true
                            },
                            "committers": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            },
                            "html_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "api_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            }
                          },
                          "required": [
                            "api_url",
                            "branch",
                            "commit_hash",
                            "commit_message",
                            "committers",
                            "created_at",
                            "html_url",
                            "id",
                            "organization_id",
                            "organization_slug",
                            "pull_request",
                            "repository_id",
                            "repository_slug",
                            "updated_at"
                          ]
                        },
                        "after_full_scan": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "created_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "updated_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "branch": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_message": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_hash": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "pull_request": {
                              "type": "integer",
                              "description": "",
                              "default": 0,
                              "nullable": true
                            },
                            "committers": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            },
                            "html_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "api_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            }
                          },
                          "required": [
                            "api_url",
                            "branch",
                            "commit_hash",
                            "commit_message",
                            "committers",
                            "created_at",
                            "html_url",
                            "id",
                            "organization_id",
                            "organization_slug",
                            "pull_request",
                            "repository_id",
                            "repository_slug",
                            "updated_at"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "external_href": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "merge": {
                          "type": "boolean",
                          "default": false,
                          "description": ""
                        },
                        "html_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "api_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "artifacts": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "added": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SocketDiffArtifact"
                              },
                              "description": ""
                            },
                            "removed": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SocketDiffArtifact"
                              },
                              "description": ""
                            },
                            "unchanged": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SocketDiffArtifact"
                              },
                              "description": ""
                            },
                            "replaced": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SocketDiffArtifact"
                              },
                              "description": ""
                            },
                            "updated": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/SocketDiffArtifact"
                              },
                              "description": ""
                            }
                          },
                          "required": [
                            "added",
                            "removed",
                            "replaced",
                            "unchanged",
                            "updated"
                          ]
                        }
                      },
                      "required": [
                        "after_full_scan",
                        "api_url",
                        "artifacts",
                        "before_full_scan",
                        "created_at",
                        "description",
                        "external_href",
                        "html_url",
                        "id",
                        "merge",
                        "organization_id",
                        "repository_id",
                        "updated_at"
                      ]
                    }
                  },
                  "required": [
                    "diff_scan"
                  ]
                }
              }
            },
            "description": "The difference between the two Full Scans in the diff scan."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "delete": {
        "tags": [
          "Diff Scans"
        ],
        "summary": "Delete diff scan",
        "operationId": "deleteOrgDiffScan",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diff_scan_id",
            "in": "path",
            "required": true,
            "description": "The ID of the diff scan",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "diff-scans:delete"
            ]
          },
          {
            "basicAuth": [
              "diff-scans:delete"
            ]
          }
        ],
        "description": "Delete an existing diff scan.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- diff-scans:delete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "",
                      "default": "ok"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/diff-scans/{diff_scan_id}/gfm": {
      "get": {
        "tags": [
          "Diff Scans"
        ],
        "summary": "SCM Comment for Diff Scan",
        "operationId": "GetDiffScanGfm",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "diff_scan_id",
            "in": "path",
            "required": true,
            "description": "The ID of the diff scan",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "diff-scans:list"
            ]
          },
          {
            "basicAuth": [
              "diff-scans:list"
            ]
          }
        ],
        "description": "Get the dependency overview and dependency alert comments in GitHub flavored markdown for an existing diff scan.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- diff-scans:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "diff_scan": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "created_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "before_full_scan": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "created_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "updated_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "branch": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_message": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_hash": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "pull_request": {
                              "type": "integer",
                              "description": "",
                              "default": 0,
                              "nullable": true
                            },
                            "committers": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            },
                            "html_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "api_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            }
                          },
                          "required": [
                            "api_url",
                            "branch",
                            "commit_hash",
                            "commit_message",
                            "committers",
                            "created_at",
                            "html_url",
                            "id",
                            "organization_id",
                            "organization_slug",
                            "pull_request",
                            "repository_id",
                            "repository_slug",
                            "updated_at"
                          ]
                        },
                        "after_full_scan": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "created_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "updated_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "branch": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_message": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_hash": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "pull_request": {
                              "type": "integer",
                              "description": "",
                              "default": 0,
                              "nullable": true
                            },
                            "committers": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            },
                            "html_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "api_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            }
                          },
                          "required": [
                            "api_url",
                            "branch",
                            "commit_hash",
                            "commit_message",
                            "committers",
                            "created_at",
                            "html_url",
                            "id",
                            "organization_id",
                            "organization_slug",
                            "pull_request",
                            "repository_id",
                            "repository_slug",
                            "updated_at"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "external_href": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "merge": {
                          "type": "boolean",
                          "default": false,
                          "description": ""
                        },
                        "html_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "api_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "gfm": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "overview": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "alerts": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            }
                          },
                          "required": [
                            "alerts",
                            "overview"
                          ]
                        }
                      },
                      "required": [
                        "after_full_scan",
                        "api_url",
                        "before_full_scan",
                        "created_at",
                        "description",
                        "external_href",
                        "gfm",
                        "html_url",
                        "id",
                        "merge",
                        "organization_id",
                        "repository_id",
                        "updated_at"
                      ]
                    }
                  },
                  "required": [
                    "diff_scan"
                  ]
                }
              }
            },
            "description": "Metadata about the full scans and the dependency overview and dependency alert comment. Can be used in a pull request context."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/diff-scans/from-repo/{repo_slug}": {
      "post": {
        "tags": [
          "Diff Scans"
        ],
        "summary": "Create diff scan from repository HEAD full-scan",
        "operationId": "createOrgRepoDiff",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the repository",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "A description of the diff scan. This will be used in the diff report and can be used to provide context for the changes made.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_href",
            "in": "query",
            "required": false,
            "description": "An external URL to associate with the diff scan. This can be a link to a pull request, issue, or any other relevant resource.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "description": "The branch name to associate the new full-scan with. Branch names must follow Git branch name rules: be 1–255 characters long; cannot be exactly @;  cannot begin or end with /, ., or .lock; cannot contain \"//\", \"..\", or \"@{\"; and cannot include control characters, spaces, or any of ~^:?*[.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commit_message",
            "in": "query",
            "required": false,
            "description": "The commit message to associate the new full-scan with.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commit_hash",
            "in": "query",
            "required": false,
            "description": "The commit hash to associate the full-scan with.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pull_request",
            "in": "query",
            "required": false,
            "description": "The pull request number to associate the new full-scan with.",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "committers",
            "in": "query",
            "required": false,
            "description": "The committers to associate the new full-scan with. Set query more than once to set multiple committers.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integration_type",
            "in": "query",
            "required": false,
            "description": "The integration type to associate the new full-scan with. Defaults to \"api\" if omitted.",
            "schema": {
              "type": "string",
              "enum": [
                "api",
                "github",
                "gitlab",
                "bitbucket",
                "azure"
              ]
            }
          },
          {
            "name": "integration_org_slug",
            "in": "query",
            "required": false,
            "description": "The integration org slug to associate the new full-scan with. If omitted, the Socket org name will be used. This is used to generate links and badges.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge",
            "in": "query",
            "required": false,
            "description": "Set to true when running a diff between a merged commit and its parent commit in the same branch. Set to false when running diffs in an open PR between unmerged commits.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "default": {
                    "type": "Buffer",
                    "data": []
                  },
                  "format": "binary",
                  "description": ""
                },
                "properties": {},
                "description": ""
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "repo:list",
              "diff-scans:create",
              "full-scans:create"
            ]
          },
          {
            "basicAuth": [
              "repo:list",
              "diff-scans:create",
              "full-scans:create"
            ]
          }
        ],
        "description": "Create a diff scan between the repository's current HEAD full scan and a new full scan from uploaded manifest files.\nReturns metadata about the diff scan. Once the diff scan is created, fetch the diff scan from\nthe [api_url](/reference/getDiffScanById) URL to get the contents of the diff.\n\nThe maximum number of files you can upload at a time is 5000 and each file can be no bigger than 16.8 MB.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n      - repo:list\n- diff-scans:create\n- full-scans:create",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "diff_scan": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "created_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "before_full_scan": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "created_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "updated_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "branch": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_message": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_hash": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "pull_request": {
                              "type": "integer",
                              "description": "",
                              "default": 0,
                              "nullable": true
                            },
                            "committers": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            },
                            "html_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "api_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            }
                          },
                          "required": [
                            "api_url",
                            "branch",
                            "commit_hash",
                            "commit_message",
                            "committers",
                            "created_at",
                            "html_url",
                            "id",
                            "organization_id",
                            "organization_slug",
                            "pull_request",
                            "repository_id",
                            "repository_slug",
                            "updated_at"
                          ]
                        },
                        "after_full_scan": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "created_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "updated_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "branch": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_message": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_hash": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "pull_request": {
                              "type": "integer",
                              "description": "",
                              "default": 0,
                              "nullable": true
                            },
                            "committers": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            },
                            "html_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "api_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            }
                          },
                          "required": [
                            "api_url",
                            "branch",
                            "commit_hash",
                            "commit_message",
                            "committers",
                            "created_at",
                            "html_url",
                            "id",
                            "organization_id",
                            "organization_slug",
                            "pull_request",
                            "repository_id",
                            "repository_slug",
                            "updated_at"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "external_href": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "merge": {
                          "type": "boolean",
                          "default": false,
                          "description": ""
                        },
                        "html_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "api_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        }
                      },
                      "required": [
                        "after_full_scan",
                        "api_url",
                        "before_full_scan",
                        "created_at",
                        "description",
                        "external_href",
                        "html_url",
                        "id",
                        "merge",
                        "organization_id",
                        "repository_id",
                        "updated_at"
                      ]
                    },
                    "unmatchedAfterFiles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "description": ""
                    }
                  },
                  "required": [
                    "diff_scan",
                    "unmatchedAfterFiles"
                  ]
                }
              }
            },
            "description": "The details of the new full scan and diff scan between the two scans."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/diff-scans/from-ids": {
      "post": {
        "tags": [
          "Diff Scans"
        ],
        "summary": "Create diff scan from full scan IDs",
        "operationId": "createOrgDiffScanFromIds",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "before",
            "in": "query",
            "required": true,
            "description": "The ID of the before/base full scan (older)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "after",
            "in": "query",
            "required": true,
            "description": "The ID of the after/head full scan (newer)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "A description of the diff scan. This will be used in the diff report and can be used to provide context for the changes made.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "external_href",
            "in": "query",
            "required": false,
            "description": "An external URL to associate with the diff scan. This can be a link to a pull request, issue, or any other relevant resource.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge",
            "in": "query",
            "required": false,
            "description": "Set to true when running a diff between a merged commit and its parent commit in the same branch. Set to false when running diffs in an open PR between unmerged commits.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "diff-scans:create",
              "full-scans:list"
            ]
          },
          {
            "basicAuth": [
              "diff-scans:create",
              "full-scans:list"
            ]
          }
        ],
        "description": "Create a diff scan from two existing full scan IDs. The full scans must be in the same repository.\nReturns metadata about the diff scan. Once the diff scan is created, fetch the diff scan from\nthe [api_url](/reference/getDiffScanById) URL to get the contents of the diff.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n      - diff-scans:create\n- full-scans:list",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "diff_scan": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "organization_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "repository_id": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "created_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "before_full_scan": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "created_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "updated_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "branch": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_message": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_hash": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "pull_request": {
                              "type": "integer",
                              "description": "",
                              "default": 0,
                              "nullable": true
                            },
                            "committers": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            },
                            "html_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "api_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            }
                          },
                          "required": [
                            "api_url",
                            "branch",
                            "commit_hash",
                            "commit_message",
                            "committers",
                            "created_at",
                            "html_url",
                            "id",
                            "organization_id",
                            "organization_slug",
                            "pull_request",
                            "repository_id",
                            "repository_slug",
                            "updated_at"
                          ]
                        },
                        "after_full_scan": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "created_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "updated_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "organization_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_id": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "repository_slug": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "branch": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_message": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "commit_hash": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "pull_request": {
                              "type": "integer",
                              "description": "",
                              "default": 0,
                              "nullable": true
                            },
                            "committers": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            },
                            "html_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            },
                            "api_url": {
                              "type": "string",
                              "description": "",
                              "default": "",
                              "nullable": true
                            }
                          },
                          "required": [
                            "api_url",
                            "branch",
                            "commit_hash",
                            "commit_message",
                            "committers",
                            "created_at",
                            "html_url",
                            "id",
                            "organization_id",
                            "organization_slug",
                            "pull_request",
                            "repository_id",
                            "repository_slug",
                            "updated_at"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "external_href": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "merge": {
                          "type": "boolean",
                          "default": false,
                          "description": ""
                        },
                        "html_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        },
                        "api_url": {
                          "type": "string",
                          "description": "",
                          "default": "",
                          "nullable": true
                        }
                      },
                      "required": [
                        "after_full_scan",
                        "api_url",
                        "before_full_scan",
                        "created_at",
                        "description",
                        "external_href",
                        "html_url",
                        "id",
                        "merge",
                        "organization_id",
                        "repository_id",
                        "updated_at"
                      ]
                    }
                  },
                  "required": [
                    "diff_scan"
                  ]
                }
              }
            },
            "description": "The details of the created diff scan."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/repos": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "summary": "List repositories",
        "operationId": "getOrgRepoList",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "default": "created_at"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "default": "desc"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 30
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "repo:list"
            ]
          },
          {
            "basicAuth": [
              "repo:list"
            ]
          }
        ],
        "description": "Lists repositories for the specified organization.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the repository",
                            "default": ""
                          },
                          "created_at": {
                            "type": "string",
                            "description": "The creation date of the repository",
                            "default": ""
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "The last update date of the repository",
                            "default": ""
                          },
                          "slug": {
                            "type": "string",
                            "description": "The slug of the repository",
                            "default": ""
                          },
                          "head_full_scan_id": {
                            "type": "string",
                            "description": "The ID of the head full scan of the repository",
                            "default": "",
                            "nullable": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the repository",
                            "default": ""
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the repository",
                            "default": "",
                            "nullable": true
                          },
                          "homepage": {
                            "type": "string",
                            "description": "The homepage URL of the repository",
                            "default": "",
                            "nullable": true
                          },
                          "visibility": {
                            "type": "string",
                            "enum": [
                              "public",
                              "private"
                            ],
                            "description": "The visibility of the repository",
                            "default": "private"
                          },
                          "archived": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether the repository is archived or not"
                          },
                          "default_branch": {
                            "type": "string",
                            "description": "The default branch of the repository",
                            "default": "main",
                            "nullable": true
                          }
                        },
                        "description": ""
                      },
                      "description": ""
                    },
                    "nextPage": {
                      "type": "integer",
                      "description": "",
                      "default": 0,
                      "nullable": true
                    }
                  },
                  "required": [
                    "nextPage",
                    "results"
                  ]
                }
              }
            },
            "description": "Lists repositories for the specified organization. The authenticated user must be a member of the organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "post": {
        "tags": [
          "Repositories"
        ],
        "summary": "Create repository",
        "operationId": "createOrgRepo",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the repository",
                    "default": ""
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the repository",
                    "default": "",
                    "nullable": true
                  },
                  "homepage": {
                    "type": "string",
                    "description": "The homepage URL of the repository",
                    "default": "",
                    "nullable": true
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "public",
                      "private"
                    ],
                    "description": "The visibility of the repository",
                    "default": "private"
                  },
                  "archived": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether the repository is archived or not"
                  },
                  "default_branch": {
                    "type": "string",
                    "description": "The default branch of the repository",
                    "default": "main",
                    "nullable": true
                  }
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "repo:create"
            ]
          },
          {
            "basicAuth": [
              "repo:create"
            ]
          }
        ],
        "description": "Create a repository.\n\nRepos collect Full scans and Diff scans and are typically associated with a git repo.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo:create",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the repository",
                      "default": ""
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The creation date of the repository",
                      "default": ""
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The last update date of the repository",
                      "default": ""
                    },
                    "slug": {
                      "type": "string",
                      "description": "The slug of the repository",
                      "default": ""
                    },
                    "head_full_scan_id": {
                      "type": "string",
                      "description": "The ID of the head full scan of the repository",
                      "default": "",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the repository",
                      "default": ""
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the repository",
                      "default": "",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "description": "The homepage URL of the repository",
                      "default": "",
                      "nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        "public",
                        "private"
                      ],
                      "description": "The visibility of the repository",
                      "default": "private"
                    },
                    "archived": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether the repository is archived or not"
                    },
                    "default_branch": {
                      "type": "string",
                      "description": "The default branch of the repository",
                      "default": "main",
                      "nullable": true
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "Lists repositories for the specified organization. The authenticated user must be a member of the organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/repos/{repo_slug}": {
      "get": {
        "tags": [
          "Repositories"
        ],
        "summary": "Get repository",
        "operationId": "getOrgRepo",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "repo:list"
            ]
          },
          {
            "basicAuth": [
              "repo:list"
            ]
          }
        ],
        "description": "Retrieve a repository associated with an organization.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the repository",
                      "default": ""
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The creation date of the repository",
                      "default": ""
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The last update date of the repository",
                      "default": ""
                    },
                    "slug": {
                      "type": "string",
                      "description": "The slug of the repository",
                      "default": ""
                    },
                    "head_full_scan_id": {
                      "type": "string",
                      "description": "The ID of the head full scan of the repository",
                      "default": "",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the repository",
                      "default": ""
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the repository",
                      "default": "",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "description": "The homepage URL of the repository",
                      "default": "",
                      "nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        "public",
                        "private"
                      ],
                      "description": "The visibility of the repository",
                      "default": "private"
                    },
                    "archived": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether the repository is archived or not"
                    },
                    "default_branch": {
                      "type": "string",
                      "description": "The default branch of the repository",
                      "default": "main",
                      "nullable": true
                    },
                    "slig": {
                      "type": "string",
                      "description": "The slug of the repository. This typo is intentionally preserved for backwards compatibility reasons.",
                      "default": ""
                    }
                  },
                  "required": [
                    "archived",
                    "created_at",
                    "default_branch",
                    "description",
                    "head_full_scan_id",
                    "homepage",
                    "id",
                    "name",
                    "slig",
                    "slug",
                    "updated_at",
                    "visibility"
                  ]
                }
              }
            },
            "description": "Lists repositories for the specified organization. The authenticated user must be a member of the organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "post": {
        "tags": [
          "Repositories"
        ],
        "summary": "Update repository",
        "operationId": "updateOrgRepo",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the repository",
                    "default": ""
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the repository",
                    "default": "",
                    "nullable": true
                  },
                  "homepage": {
                    "type": "string",
                    "description": "The homepage URL of the repository",
                    "default": "",
                    "nullable": true
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "public",
                      "private"
                    ],
                    "description": "The visibility of the repository",
                    "default": "private"
                  },
                  "archived": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether the repository is archived or not"
                  },
                  "default_branch": {
                    "type": "string",
                    "description": "The default branch of the repository",
                    "default": "main",
                    "nullable": true
                  }
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "repo:update"
            ]
          },
          {
            "basicAuth": [
              "repo:update"
            ]
          }
        ],
        "description": "Update details of an existing repository.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo:update",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the repository",
                      "default": ""
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The creation date of the repository",
                      "default": ""
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The last update date of the repository",
                      "default": ""
                    },
                    "slug": {
                      "type": "string",
                      "description": "The slug of the repository",
                      "default": ""
                    },
                    "head_full_scan_id": {
                      "type": "string",
                      "description": "The ID of the head full scan of the repository",
                      "default": "",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the repository",
                      "default": ""
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the repository",
                      "default": "",
                      "nullable": true
                    },
                    "homepage": {
                      "type": "string",
                      "description": "The homepage URL of the repository",
                      "default": "",
                      "nullable": true
                    },
                    "visibility": {
                      "type": "string",
                      "enum": [
                        "public",
                        "private"
                      ],
                      "description": "The visibility of the repository",
                      "default": "private"
                    },
                    "archived": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether the repository is archived or not"
                    },
                    "default_branch": {
                      "type": "string",
                      "description": "The default branch of the repository",
                      "default": "main",
                      "nullable": true
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "Updated repository details"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "delete": {
        "tags": [
          "Repositories"
        ],
        "summary": "Delete repository",
        "operationId": "deleteOrgRepo",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the repository",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "repo:delete"
            ]
          },
          {
            "basicAuth": [
              "repo:delete"
            ]
          }
        ],
        "description": "Delete a single repository and all of its associated Full scans and Diff scans.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo:delete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "",
                      "default": "ok"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/repos/labels/{label_id}/associate": {
      "post": {
        "tags": [
          "Repositories",
          "Labels"
        ],
        "summary": "Associate repository label (beta)",
        "operationId": "associateOrgRepoLabel",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "description": "The ID of the label",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "repository_id": {
                    "type": "string",
                    "description": "The ID of the repository to associate with the label",
                    "default": ""
                  }
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "repo-label:update"
            ]
          },
          {
            "basicAuth": [
              "repo-label:update"
            ]
          }
        ],
        "description": "Associate a repository label with a repository.\n\nLabels can be used to group and organize repositories and to apply security/license policies.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo-label:update",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the operation",
                      "default": ""
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "Associates a repository label with the specified repository. The authenticated user must be a member of the organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/repos/labels": {
      "post": {
        "tags": [
          "Repositories",
          "Labels"
        ],
        "summary": "Create repository label (beta)",
        "operationId": "createOrgRepoLabel",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "description": "",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the label",
                    "default": ""
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "bearerAuth": [
              "repo-label:create"
            ]
          },
          {
            "basicAuth": [
              "repo-label:create"
            ]
          }
        ],
        "description": "Create a repository label.\n\nLabels can be used to group and organize repositories and to apply security/license policies.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo-label:create",
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the label",
                      "default": ""
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the label",
                      "default": ""
                    },
                    "repository_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Repository ID",
                        "default": ""
                      },
                      "description": "The IDs of repositories this label is associated with"
                    },
                    "has_security_policy": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether the label has a security policy"
                    },
                    "has_license_policy": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether the label has a license policy"
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "Creates a new repository label for the specified organization. The authenticated user must be a member of the organization. Label names must be non-empty and less than 1000 characters."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "error": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "details": {
                          "type": "object",
                          "description": "",
                          "default": null,
                          "nullable": true
                        }
                      },
                      "required": [
                        "details",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            },
            "description": "Conflict"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "get": {
        "tags": [
          "Repositories",
          "Labels"
        ],
        "summary": "List repository labels (beta)",
        "operationId": "getOrgRepoLabelList",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 30
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "repo-label:list"
            ]
          },
          {
            "basicAuth": [
              "repo-label:list"
            ]
          }
        ],
        "description": "Lists repository labels for the specified organization.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo-label:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the label",
                            "default": ""
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the label",
                            "default": ""
                          },
                          "repository_ids": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Repository ID",
                              "default": ""
                            },
                            "description": "The IDs of repositories this label is associated with"
                          },
                          "has_security_policy": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether the label has a security policy"
                          },
                          "has_license_policy": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether the label has a license policy"
                          }
                        },
                        "description": ""
                      },
                      "description": ""
                    },
                    "nextPage": {
                      "type": "integer",
                      "description": "",
                      "default": 0,
                      "nullable": true
                    }
                  },
                  "required": [
                    "nextPage",
                    "results"
                  ]
                }
              }
            },
            "description": "Lists repository labels for the specified organization. The authenticated user must be a member of the organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/repos/labels/{label_id}": {
      "delete": {
        "tags": [
          "Repositories",
          "Labels"
        ],
        "summary": "Delete repository label (beta)",
        "operationId": "deleteOrgRepoLabel",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "description": "The ID of the label",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "repo-label:delete"
            ]
          },
          {
            "basicAuth": [
              "repo-label:delete"
            ]
          }
        ],
        "description": "Delete a repository label and all of its associations (repositories, security policy, license policy, etc.).\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo-label:delete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "",
                      "default": "ok"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "get": {
        "tags": [
          "Repositories",
          "Labels"
        ],
        "summary": "Get repository label (beta)",
        "operationId": "getOrgRepoLabel",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "description": "The ID of the label",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "repo-label:list"
            ]
          },
          {
            "basicAuth": [
              "repo-label:list"
            ]
          }
        ],
        "description": "Retrieve a repository label associated with an organization and label ID.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo-label:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the label",
                      "default": ""
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the label",
                      "default": ""
                    },
                    "repository_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Repository ID",
                        "default": ""
                      },
                      "description": "The IDs of repositories this label is associated with"
                    },
                    "has_security_policy": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether the label has a security policy"
                    },
                    "has_license_policy": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether the label has a license policy"
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "Returns a specific repository label for the specified organization. The authenticated user must be a member of the organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "put": {
        "tags": [
          "Repositories",
          "Labels"
        ],
        "summary": "Update repository label (beta)",
        "operationId": "updateOrgRepoLabel",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "description": "The ID of the label",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "description": "",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the label",
                    "default": ""
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "bearerAuth": [
              "repo-label:update"
            ]
          },
          {
            "basicAuth": [
              "repo-label:update"
            ]
          }
        ],
        "description": "Update a repository label name.\n\nLabels can be used to group and organize repositories and to apply security/license policies.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo-label:update",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the label",
                      "default": ""
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the label",
                      "default": ""
                    },
                    "repository_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Repository ID",
                        "default": ""
                      },
                      "description": "The IDs of repositories this label is associated with"
                    },
                    "has_security_policy": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether the label has a security policy"
                    },
                    "has_license_policy": {
                      "type": "boolean",
                      "default": false,
                      "description": "Whether the label has a license policy"
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "Updates an existing repository label for the specified organization. The authenticated user must be a member of the organization. Label names must be non-empty and less than 1000 characters."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "error": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "details": {
                          "type": "object",
                          "description": "",
                          "default": null,
                          "nullable": true
                        }
                      },
                      "required": [
                        "details",
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            },
            "description": "Conflict"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/repos/labels/{label_id}/label-setting": {
      "delete": {
        "tags": [
          "Repositories",
          "Labels"
        ],
        "summary": "Delete repository label setting (beta)",
        "operationId": "deleteOrgRepoLabelSetting",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "description": "The ID of the label",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "setting_key",
            "in": "query",
            "required": true,
            "description": "Setting key to delete from the repository label. Valid values include issueRules, issueRulesPolicyDefault, and licensePolicy",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "repo-label:update"
            ]
          },
          {
            "basicAuth": [
              "repo-label:update"
            ]
          }
        ],
        "description": "Delete the setting (e.g. security/license policy) for a repository label.\n\n\nNote that repository label settings currently only support `issueRules`\nand `issueRulesPolicyDefault`. A policy is considered \"active\" for\na given repository label if the `issueRulesPolicyDefault` is set,\nand inactive when not set. `issueRules` can be used to further\nrefine the alert triage strategy.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo-label:update",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "",
                      "default": "ok"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "get": {
        "tags": [
          "Repositories",
          "Labels"
        ],
        "summary": "Get repository label setting (beta)",
        "operationId": "getOrgRepoLabelSetting",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "description": "The ID of the label",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "setting_key",
            "in": "query",
            "required": true,
            "description": "Setting key to query for in the repository label. Valid values include issueRules, issueRulesPolicyDefault, and licensePolicy",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "repo-label:list"
            ]
          },
          {
            "basicAuth": [
              "repo-label:list"
            ]
          }
        ],
        "description": "Retrieve the setting (e.g. security/license policy) for a repository label.\n\n\nNote that repository label settings currently only support `issueRules`\nand `issueRulesPolicyDefault`. A policy is considered \"active\" for\na given repository label if the `issueRulesPolicyDefault` is set,\nand inactive when not set. `issueRules` can be used to further\nrefine the alert triage strategy.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo-label:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "issueRules": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "gptSecurity": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptSecurity issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gptAnomaly": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptAnomaly issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gptMalware": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptMalware issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "filesystemAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for filesystemAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "networkAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for networkAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "shellAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for shellAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "debugAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for debugAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromePermission": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromePermission issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromeHostPermission": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromeHostPermission issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromeWildcardHostPermission": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromeWildcardHostPermission issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromeContentScript": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromeContentScript issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "criticalCVE": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for criticalCVE issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "cve": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for cve issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "mediumCVE": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for mediumCVE issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "mildCVE": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for mildCVE issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "emptyPackage": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for emptyPackage issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "trivialPackage": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for trivialPackage issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noREADME": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noREADME issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "shrinkwrap": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for shrinkwrap issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "licenseSpdxDisj": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for licenseSpdxDisj issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unsafeCopyright": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unsafeCopyright issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "licenseChange": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for licenseChange issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "nonOSILicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for nonOSILicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "deprecatedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for deprecatedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "nonSPDXLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for nonSPDXLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unclearLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unclearLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "mixedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for mixedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "notice": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for notice issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "modifiedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for modifiedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "modifiedException": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for modifiedException issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "licenseException": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for licenseException issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "deprecatedException": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for deprecatedException issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "miscLicenseIssues": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for miscLicenseIssues issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unidentifiedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unidentifiedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noLicenseFound": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noLicenseFound issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "explicitlyUnlicensedItem": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for explicitlyUnlicensedItem issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "copyleftLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for copyleftLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "nonpermissiveLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for nonpermissiveLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "ambiguousClassifier": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for ambiguousClassifier issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "invalidPackageJSON": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for invalidPackageJSON issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "httpDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for httpDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gitDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gitDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gitHubDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gitHubDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "fileDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for fileDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noTests": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noTests issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noRepository": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noRepository issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "badSemver": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for badSemver issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "badSemverDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for badSemverDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noV1": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noV1 issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noWebsite": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noWebsite issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noBugTracker": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noBugTracker issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noAuthorData": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noAuthorData issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "typeModuleCompatibility": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for typeModuleCompatibility issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "floatingDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for floatingDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "manifestConfusion": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for manifestConfusion issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "malware": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for malware issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "telemetry": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for telemetry issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "troll": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for troll issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "deprecated": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for deprecated issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chronoAnomaly": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chronoAnomaly issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "compromisedSSHKey": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for compromisedSSHKey issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "semverAnomaly": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for semverAnomaly issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "newAuthor": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for newAuthor issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unstableOwnership": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unstableOwnership issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingAuthor": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingAuthor issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unmaintained": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unmaintained issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unpublished": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unpublished issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "majorRefactor": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for majorRefactor issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingTarball": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingTarball issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "suspiciousStarActivity": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for suspiciousStarActivity issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unpopularPackage": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unpopularPackage issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "socketUpgradeAvailable": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for socketUpgradeAvailable issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "longStrings": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for longStrings issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "highEntropyStrings": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for highEntropyStrings issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "urlStrings": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for urlStrings issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "usesEval": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for usesEval issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "dynamicRequire": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for dynamicRequire issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "envVars": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for envVars issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unusedDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unusedDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "peerDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for peerDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "uncaughtOptionalDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for uncaughtOptionalDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unresolvedRequire": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unresolvedRequire issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "extraneousDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for extraneousDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "obfuscatedRequire": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for obfuscatedRequire issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "obfuscatedFile": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for obfuscatedFile issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "minifiedFile": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for minifiedFile issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "installScripts": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for installScripts issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "hasNativeCode": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for hasNativeCode issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "binScriptConfusion": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for binScriptConfusion issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "shellScriptOverride": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for shellScriptOverride issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "didYouMean": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for didYouMean issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gptDidYouMean": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptDidYouMean issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "bidi": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for bidi issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "zeroWidth": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for zeroWidth issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "badEncoding": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for badEncoding issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "homoglyphs": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for homoglyphs issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "invisibleChars": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for invisibleChars issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "suspiciousString": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for suspiciousString issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "potentialVulnerability": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for potentialVulnerability issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        }
                      },
                      "description": "",
                      "nullable": true
                    },
                    "issueRulesPolicyDefault": {
                      "type": "string",
                      "enum": [
                        "default",
                        "low",
                        "medium",
                        "high"
                      ],
                      "description": "The default security policy for the repository label",
                      "default": "medium",
                      "nullable": true
                    },
                    "licensePolicy": {
                      "type": "object",
                      "description": "",
                      "default": null,
                      "nullable": true
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "Returns the setting for the specified repository label. The authenticated user must be a member of the organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "put": {
        "tags": [
          "Repositories",
          "Labels"
        ],
        "summary": "Update repository label setting (beta)",
        "operationId": "updateOrgRepoLabelSetting",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "description": "The ID of the label",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "issueRules": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "gptSecurity": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gptSecurity issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "gptAnomaly": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gptAnomaly issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "gptMalware": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gptMalware issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "filesystemAccess": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for filesystemAccess issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "networkAccess": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for networkAccess issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "shellAccess": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for shellAccess issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "debugAccess": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for debugAccess issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "chromePermission": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for chromePermission issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "chromeHostPermission": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for chromeHostPermission issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "chromeWildcardHostPermission": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for chromeWildcardHostPermission issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "chromeContentScript": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for chromeContentScript issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "criticalCVE": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for criticalCVE issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "cve": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for cve issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "mediumCVE": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for mediumCVE issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "mildCVE": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for mildCVE issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "emptyPackage": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for emptyPackage issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "trivialPackage": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for trivialPackage issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noREADME": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noREADME issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "shrinkwrap": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for shrinkwrap issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "licenseSpdxDisj": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for licenseSpdxDisj issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unsafeCopyright": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unsafeCopyright issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "licenseChange": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for licenseChange issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "nonOSILicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for nonOSILicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "deprecatedLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for deprecatedLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "missingLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for missingLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "nonSPDXLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for nonSPDXLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unclearLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unclearLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "mixedLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for mixedLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "notice": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for notice issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "modifiedLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for modifiedLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "modifiedException": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for modifiedException issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "licenseException": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for licenseException issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "deprecatedException": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for deprecatedException issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "miscLicenseIssues": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for miscLicenseIssues issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unidentifiedLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unidentifiedLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noLicenseFound": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noLicenseFound issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "explicitlyUnlicensedItem": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for explicitlyUnlicensedItem issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "copyleftLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for copyleftLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "nonpermissiveLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for nonpermissiveLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "ambiguousClassifier": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for ambiguousClassifier issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "invalidPackageJSON": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for invalidPackageJSON issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "httpDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for httpDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "gitDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gitDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "gitHubDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gitHubDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "fileDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for fileDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noTests": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noTests issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noRepository": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noRepository issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "badSemver": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for badSemver issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "badSemverDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for badSemverDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noV1": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noV1 issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noWebsite": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noWebsite issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noBugTracker": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noBugTracker issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noAuthorData": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noAuthorData issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "typeModuleCompatibility": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for typeModuleCompatibility issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "floatingDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for floatingDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "manifestConfusion": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for manifestConfusion issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "malware": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for malware issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "telemetry": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for telemetry issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "troll": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for troll issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "deprecated": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for deprecated issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "chronoAnomaly": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for chronoAnomaly issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "compromisedSSHKey": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for compromisedSSHKey issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "semverAnomaly": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for semverAnomaly issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "newAuthor": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for newAuthor issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unstableOwnership": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unstableOwnership issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "missingAuthor": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for missingAuthor issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unmaintained": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unmaintained issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unpublished": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unpublished issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "majorRefactor": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for majorRefactor issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "missingTarball": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for missingTarball issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "suspiciousStarActivity": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for suspiciousStarActivity issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unpopularPackage": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unpopularPackage issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "socketUpgradeAvailable": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for socketUpgradeAvailable issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "longStrings": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for longStrings issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "highEntropyStrings": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for highEntropyStrings issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "urlStrings": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for urlStrings issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "usesEval": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for usesEval issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "dynamicRequire": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for dynamicRequire issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "envVars": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for envVars issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "missingDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for missingDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unusedDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unusedDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "peerDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for peerDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "uncaughtOptionalDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for uncaughtOptionalDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unresolvedRequire": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unresolvedRequire issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "extraneousDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for extraneousDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "obfuscatedRequire": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for obfuscatedRequire issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "obfuscatedFile": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for obfuscatedFile issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "minifiedFile": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for minifiedFile issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "installScripts": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for installScripts issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "hasNativeCode": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for hasNativeCode issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "binScriptConfusion": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for binScriptConfusion issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "shellScriptOverride": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for shellScriptOverride issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "didYouMean": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for didYouMean issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "gptDidYouMean": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gptDidYouMean issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "bidi": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for bidi issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "zeroWidth": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for zeroWidth issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "badEncoding": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for badEncoding issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "homoglyphs": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for homoglyphs issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "invisibleChars": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for invisibleChars issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "suspiciousString": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for suspiciousString issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "potentialVulnerability": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for potentialVulnerability issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      }
                    },
                    "description": ""
                  },
                  "issueRulesPolicyDefault": {
                    "type": "string",
                    "enum": [
                      "default",
                      "low",
                      "medium",
                      "high"
                    ],
                    "description": "The default security policy for the repository label",
                    "default": "medium"
                  },
                  "licensePolicy": {
                    "$ref": "#/components/schemas/LicenseAllowListRequest"
                  }
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "repo-label:update"
            ]
          },
          {
            "basicAuth": [
              "repo-label:update"
            ]
          }
        ],
        "description": "Update the setting (e.g. security/license policy) for a repository label.\n\n\nNote that repository label settings currently only support `issueRules`\nand `issueRulesPolicyDefault`. A policy is considered \"active\" for\na given repository label if the `issueRulesPolicyDefault` is set,\nand inactive when not set. `issueRules` can be used to further\nrefine the alert triage strategy.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo-label:update",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "",
                      "default": "ok"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/repos/labels/{label_id}/disassociate": {
      "post": {
        "tags": [
          "Repositories",
          "Labels"
        ],
        "summary": "Disassociate repository label (beta)",
        "operationId": "disassociateOrgRepoLabel",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "label_id",
            "in": "path",
            "required": true,
            "description": "The ID of the label",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "repository_id": {
                    "type": "string",
                    "description": "The ID of the repository to disassociate from the label",
                    "default": ""
                  }
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "repo-label:update"
            ]
          },
          {
            "basicAuth": [
              "repo-label:update"
            ]
          }
        ],
        "description": "Disassociate a repository label from a repository.\n\nLabels can be used to group and organize repositories and to apply security/license policies.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo-label:update",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of the operation",
                      "default": ""
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "Disassociates a repository label from the specified repository. The authenticated user must be a member of the organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/triage/alerts": {
      "get": {
        "tags": [
          "Triage"
        ],
        "summary": "List Org Alert Triage",
        "operationId": "getOrgTriage",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "default": "created_at"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "default": "desc"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 30
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "triage:alerts-list"
            ]
          },
          {
            "basicAuth": [
              "triage:alerts-list"
            ]
          }
        ],
        "description": "Get alert triage actions for an organization.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- triage:alerts-list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "alert_key": {
                            "type": "string",
                            "description": "The alert_key associated with the triage state",
                            "default": ""
                          },
                          "created_at": {
                            "type": "string",
                            "description": "The creation date of the triage action",
                            "default": ""
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "The last update date of the triage action",
                            "default": ""
                          },
                          "note": {
                            "type": "string",
                            "description": "The note associated with the triage action",
                            "default": ""
                          },
                          "organization_id": {
                            "type": "string",
                            "description": "The organization id associated with the triage action",
                            "default": ""
                          },
                          "state": {
                            "type": "string",
                            "enum": [
                              "block",
                              "ignore",
                              "inherit",
                              "monitor",
                              "warn"
                            ],
                            "description": "The triage state of the alert",
                            "default": "inherit"
                          }
                        },
                        "description": ""
                      },
                      "description": ""
                    },
                    "nextPage": {
                      "type": "integer",
                      "description": "",
                      "default": 0,
                      "nullable": true
                    }
                  },
                  "required": [
                    "nextPage",
                    "results"
                  ]
                }
              }
            },
            "description": "Lists triage actions for the specified organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "post": {
        "tags": [
          "Triage"
        ],
        "summary": "Update Org Alert Triage",
        "operationId": "updateOrgAlertTriage",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "description": "",
                "properties": {
                  "alertTriage": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "alertKey": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "note": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "state": {
                          "type": "string",
                          "enum": [
                            "block",
                            "ignore",
                            "inherit",
                            "monitor",
                            "warn"
                          ],
                          "description": "The triage state of the alert"
                        }
                      },
                      "description": ""
                    },
                    "description": ""
                  }
                },
                "required": [
                  "alertTriage"
                ]
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "triage:alerts-update"
            ]
          },
          {
            "basicAuth": [
              "triage:alerts-update"
            ]
          }
        ],
        "description": "Update triage actions on organizaton alerts.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- triage:alerts-update",
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            },
            "description": "Updated Alert Triage"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/api-tokens": {
      "post": {
        "tags": [
          "API Tokens"
        ],
        "summary": "Create API Token",
        "operationId": "postAPIToken",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "max_quota": {
                    "type": "integer",
                    "description": "",
                    "default": 1000
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "alerts",
                        "alerts:list",
                        "alerts:trend",
                        "api-tokens",
                        "api-tokens:create",
                        "api-tokens:update",
                        "api-tokens:revoke",
                        "api-tokens:rotate",
                        "api-tokens:list",
                        "audit-log",
                        "audit-log:list",
                        "dependencies",
                        "dependencies:list",
                        "dependencies:trend",
                        "full-scans",
                        "full-scans:list",
                        "full-scans:create",
                        "full-scans:delete",
                        "diff-scans",
                        "diff-scans:list",
                        "diff-scans:create",
                        "diff-scans:delete",
                        "historical",
                        "historical:snapshots-list",
                        "historical:snapshots-start",
                        "historical:alerts-list",
                        "historical:alerts-trend",
                        "historical:dependencies-list",
                        "historical:dependencies-trend",
                        "integration",
                        "integration:list",
                        "integration:create",
                        "integration:update",
                        "integration:delete",
                        "license-policy",
                        "license-policy:update",
                        "license-policy:read",
                        "packages",
                        "packages:list",
                        "report",
                        "report:list",
                        "report:read",
                        "report:write",
                        "repo",
                        "repo:list",
                        "repo:create",
                        "repo:update",
                        "repo:delete",
                        "repo-label",
                        "repo-label:list",
                        "repo-label:create",
                        "repo-label:update",
                        "repo-label:delete",
                        "security-policy",
                        "security-policy:update",
                        "security-policy:read",
                        "threat-feed",
                        "threat-feed:list",
                        "triage",
                        "triage:alerts-list",
                        "triage:alerts-update"
                      ],
                      "description": "",
                      "default": "repo:list"
                    },
                    "description": ""
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "organization"
                    ],
                    "description": "The visibility of the API Token. Warning: this field is deprecated and will be removed in the future.",
                    "default": "organization"
                  },
                  "committer": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "provider": {
                        "type": "string",
                        "enum": [
                          "api",
                          "azure",
                          "bitbucket",
                          "github",
                          "gitlab"
                        ],
                        "description": "",
                        "default": "api"
                      },
                      "providerLoginName": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "providerUserId": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      }
                    },
                    "description": ""
                  },
                  "name": {
                    "type": "string",
                    "description": "Name for the API Token",
                    "default": "api token"
                  }
                },
                "required": [
                  "committer",
                  "max_quota",
                  "scopes",
                  "visibility"
                ]
              }
            }
          },
          "description": "The settings to create the api token with.",
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "api-tokens:create"
            ]
          },
          {
            "basicAuth": [
              "api-tokens:create"
            ]
          }
        ],
        "description": "Create an API Token. The API Token created must use a subset of permissions the API token creating them.\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- api-tokens:create",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "required": [
                    "token"
                  ]
                }
              }
            },
            "description": "The newly created api token."
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "get": {
        "tags": [
          "API Tokens"
        ],
        "summary": "List API Tokens",
        "operationId": "getAPITokens",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Specify Sort order.",
            "schema": {
              "type": "string",
              "enum": [
                "created_at"
              ],
              "default": "created_at"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "description": "Specify sort direction.",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "Specify the maximum number of results to return per page.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 30
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The token specifying which page to return.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "api-tokens:list"
            ]
          },
          {
            "basicAuth": [
              "api-tokens:list"
            ]
          }
        ],
        "description": "List all API Tokens.\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- api-tokens:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "tokens": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "committers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "email": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "provider": {
                                  "type": "string",
                                  "enum": [
                                    "api",
                                    "azure",
                                    "bitbucket",
                                    "github",
                                    "gitlab"
                                  ],
                                  "description": "",
                                  "default": "api"
                                },
                                "providerLoginName": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "providerUserId": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                }
                              },
                              "description": ""
                            },
                            "description": ""
                          },
                          "created_at": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "format": "date"
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the API Token",
                            "default": ""
                          },
                          "last_used_at": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "format": "date"
                          },
                          "max_quota": {
                            "type": "integer",
                            "description": "",
                            "default": 1000
                          },
                          "name": {
                            "type": "string",
                            "description": "Name for the API Token",
                            "default": "api token",
                            "nullable": true
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "alerts",
                                "alerts:list",
                                "alerts:trend",
                                "api-tokens",
                                "api-tokens:create",
                                "api-tokens:update",
                                "api-tokens:revoke",
                                "api-tokens:rotate",
                                "api-tokens:list",
                                "audit-log",
                                "audit-log:list",
                                "dependencies",
                                "dependencies:list",
                                "dependencies:trend",
                                "full-scans",
                                "full-scans:list",
                                "full-scans:create",
                                "full-scans:delete",
                                "diff-scans",
                                "diff-scans:list",
                                "diff-scans:create",
                                "diff-scans:delete",
                                "historical",
                                "historical:snapshots-list",
                                "historical:snapshots-start",
                                "historical:alerts-list",
                                "historical:alerts-trend",
                                "historical:dependencies-list",
                                "historical:dependencies-trend",
                                "integration",
                                "integration:list",
                                "integration:create",
                                "integration:update",
                                "integration:delete",
                                "license-policy",
                                "license-policy:update",
                                "license-policy:read",
                                "packages",
                                "packages:list",
                                "report",
                                "report:list",
                                "report:read",
                                "report:write",
                                "repo",
                                "repo:list",
                                "repo:create",
                                "repo:update",
                                "repo:delete",
                                "repo-label",
                                "repo-label:list",
                                "repo-label:create",
                                "repo-label:update",
                                "repo-label:delete",
                                "security-policy",
                                "security-policy:update",
                                "security-policy:read",
                                "threat-feed",
                                "threat-feed:list",
                                "triage",
                                "triage:alerts-list",
                                "triage:alerts-update"
                              ],
                              "description": "",
                              "default": "repo:list"
                            },
                            "description": ""
                          },
                          "token": {
                            "type": "string",
                            "description": "The obfuscated token of the API Token",
                            "default": ""
                          },
                          "visibility": {
                            "type": "string",
                            "enum": [
                              "admin",
                              "organization"
                            ],
                            "description": "The visibility of the API Token. Warning: this field is deprecated and will be removed in the future.",
                            "default": "organization"
                          }
                        },
                        "required": [
                          "committers",
                          "created_at",
                          "id",
                          "last_used_at",
                          "max_quota",
                          "name",
                          "scopes",
                          "token",
                          "visibility"
                        ]
                      },
                      "description": ""
                    },
                    "nextPage": {
                      "type": "integer",
                      "description": "",
                      "default": 0,
                      "nullable": true
                    }
                  },
                  "required": [
                    "nextPage",
                    "tokens"
                  ]
                }
              }
            },
            "description": "The paginated array of API tokens for the organization, and related metadata."
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/api-tokens/update": {
      "post": {
        "tags": [
          "API Tokens"
        ],
        "summary": "Update API Token",
        "operationId": "postAPITokenUpdate",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "max_quota": {
                    "type": "integer",
                    "description": "",
                    "default": 1000
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "alerts",
                        "alerts:list",
                        "alerts:trend",
                        "api-tokens",
                        "api-tokens:create",
                        "api-tokens:update",
                        "api-tokens:revoke",
                        "api-tokens:rotate",
                        "api-tokens:list",
                        "audit-log",
                        "audit-log:list",
                        "dependencies",
                        "dependencies:list",
                        "dependencies:trend",
                        "full-scans",
                        "full-scans:list",
                        "full-scans:create",
                        "full-scans:delete",
                        "diff-scans",
                        "diff-scans:list",
                        "diff-scans:create",
                        "diff-scans:delete",
                        "historical",
                        "historical:snapshots-list",
                        "historical:snapshots-start",
                        "historical:alerts-list",
                        "historical:alerts-trend",
                        "historical:dependencies-list",
                        "historical:dependencies-trend",
                        "integration",
                        "integration:list",
                        "integration:create",
                        "integration:update",
                        "integration:delete",
                        "license-policy",
                        "license-policy:update",
                        "license-policy:read",
                        "packages",
                        "packages:list",
                        "report",
                        "report:list",
                        "report:read",
                        "report:write",
                        "repo",
                        "repo:list",
                        "repo:create",
                        "repo:update",
                        "repo:delete",
                        "repo-label",
                        "repo-label:list",
                        "repo-label:create",
                        "repo-label:update",
                        "repo-label:delete",
                        "security-policy",
                        "security-policy:update",
                        "security-policy:read",
                        "threat-feed",
                        "threat-feed:list",
                        "triage",
                        "triage:alerts-list",
                        "triage:alerts-update"
                      ],
                      "description": "",
                      "default": "repo:list"
                    },
                    "description": ""
                  },
                  "token": {
                    "type": "string",
                    "description": "",
                    "default": ""
                  },
                  "visibility": {
                    "type": "string",
                    "enum": [
                      "admin",
                      "organization"
                    ],
                    "description": "The visibility of the API Token. Warning: this field is deprecated and will be removed in the future.",
                    "default": "organization"
                  },
                  "committer": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "provider": {
                        "type": "string",
                        "enum": [
                          "api",
                          "azure",
                          "bitbucket",
                          "github",
                          "gitlab"
                        ],
                        "description": "",
                        "default": "api"
                      },
                      "providerLoginName": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "providerUserId": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      }
                    },
                    "description": ""
                  },
                  "name": {
                    "type": "string",
                    "description": "Name for the API Token",
                    "default": "api token"
                  }
                },
                "required": [
                  "committer",
                  "max_quota",
                  "scopes",
                  "token",
                  "visibility"
                ]
              }
            }
          },
          "description": "The token and properties to update on the token.",
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "api-tokens:create"
            ]
          },
          {
            "basicAuth": [
              "api-tokens:create"
            ]
          }
        ],
        "description": "Update an API Token. The API Token created must use a subset of permissions the API token creating them.\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- api-tokens:create",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "required": [
                    "token"
                  ]
                }
              }
            },
            "description": "The updated token."
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/api-tokens/rotate": {
      "post": {
        "tags": [
          "API Tokens"
        ],
        "summary": "Rotate API Token",
        "operationId": "postAPITokensRotate",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "description": "",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "",
                    "default": ""
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          },
          "description": "The API Token to rotate",
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "api-tokens:rotate"
            ]
          },
          {
            "basicAuth": [
              "api-tokens:rotate"
            ]
          }
        ],
        "description": "Rotate an API Token\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- api-tokens:rotate",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "required": [
                    "token"
                  ]
                }
              }
            },
            "description": "The replacement API Token"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/api-tokens/revoke": {
      "post": {
        "tags": [
          "API Tokens"
        ],
        "summary": "Revoke API Token",
        "operationId": "postAPITokensRevoke",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "description": "",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "",
                    "default": ""
                  }
                },
                "required": [
                  "token"
                ]
              }
            }
          },
          "description": "The token to revoke.",
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "api-tokens:revoke"
            ]
          },
          {
            "basicAuth": [
              "api-tokens:revoke"
            ]
          }
        ],
        "description": "Revoke an API Token\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- api-tokens:revoke",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "",
                      "default": "revoked",
                      "format": "The status of the token"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            },
            "description": "Response body"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/settings/integrations/{integration_id}/events": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get integration events",
        "operationId": "getIntegrationEvents",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integration_id",
            "in": "path",
            "required": true,
            "description": "The id of the integration",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "integration:list"
            ]
          },
          {
            "basicAuth": [
              "integration:list"
            ]
          }
        ],
        "description": "This endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- integration:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "integration_id": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "type": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "payload": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {}
                      },
                      "status_code": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "error": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "sent_at": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "retry_info": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "status_code": {
                              "type": "integer",
                              "description": "",
                              "default": 0
                            },
                            "error": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "sent_at": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            }
                          },
                          "required": [
                            "error",
                            "sent_at",
                            "status_code"
                          ]
                        },
                        "description": ""
                      },
                      "created_at": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "updated_at": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": [
                      "created_at",
                      "error",
                      "id",
                      "integration_id",
                      "payload",
                      "retry_info",
                      "sent_at",
                      "status_code",
                      "type",
                      "updated_at"
                    ]
                  },
                  "description": ""
                }
              }
            },
            "description": "Lists events for the specified integration. The authenticated user must be a member of the organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/settings/security-policy": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get Organization Security Policy",
        "operationId": "getOrgSecurityPolicy",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_rules_only",
            "in": "query",
            "required": false,
            "description": "Return only customized security policy rules.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "security-policy:read"
            ]
          },
          {
            "basicAuth": [
              "security-policy:read"
            ]
          }
        ],
        "description": "Retrieve the security policy of an organization.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- security-policy:read",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "securityPolicyRules": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "gptSecurity": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptSecurity issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gptAnomaly": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptAnomaly issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gptMalware": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptMalware issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "filesystemAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for filesystemAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "networkAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for networkAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "shellAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for shellAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "debugAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for debugAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromePermission": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromePermission issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromeHostPermission": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromeHostPermission issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromeWildcardHostPermission": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromeWildcardHostPermission issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromeContentScript": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromeContentScript issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "criticalCVE": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for criticalCVE issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "cve": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for cve issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "mediumCVE": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for mediumCVE issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "mildCVE": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for mildCVE issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "emptyPackage": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for emptyPackage issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "trivialPackage": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for trivialPackage issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noREADME": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noREADME issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "shrinkwrap": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for shrinkwrap issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "licenseSpdxDisj": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for licenseSpdxDisj issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unsafeCopyright": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unsafeCopyright issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "licenseChange": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for licenseChange issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "nonOSILicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for nonOSILicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "deprecatedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for deprecatedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "nonSPDXLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for nonSPDXLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unclearLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unclearLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "mixedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for mixedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "notice": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for notice issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "modifiedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for modifiedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "modifiedException": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for modifiedException issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "licenseException": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for licenseException issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "deprecatedException": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for deprecatedException issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "miscLicenseIssues": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for miscLicenseIssues issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unidentifiedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unidentifiedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noLicenseFound": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noLicenseFound issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "explicitlyUnlicensedItem": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for explicitlyUnlicensedItem issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "copyleftLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for copyleftLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "nonpermissiveLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for nonpermissiveLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "ambiguousClassifier": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for ambiguousClassifier issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "invalidPackageJSON": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for invalidPackageJSON issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "httpDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for httpDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gitDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gitDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gitHubDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gitHubDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "fileDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for fileDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noTests": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noTests issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noRepository": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noRepository issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "badSemver": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for badSemver issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "badSemverDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for badSemverDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noV1": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noV1 issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noWebsite": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noWebsite issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noBugTracker": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noBugTracker issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noAuthorData": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noAuthorData issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "typeModuleCompatibility": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for typeModuleCompatibility issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "floatingDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for floatingDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "manifestConfusion": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for manifestConfusion issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "malware": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for malware issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "telemetry": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for telemetry issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "troll": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for troll issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "deprecated": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for deprecated issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chronoAnomaly": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chronoAnomaly issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "compromisedSSHKey": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for compromisedSSHKey issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "semverAnomaly": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for semverAnomaly issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "newAuthor": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for newAuthor issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unstableOwnership": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unstableOwnership issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingAuthor": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingAuthor issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unmaintained": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unmaintained issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unpublished": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unpublished issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "majorRefactor": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for majorRefactor issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingTarball": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingTarball issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "suspiciousStarActivity": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for suspiciousStarActivity issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unpopularPackage": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unpopularPackage issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "socketUpgradeAvailable": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for socketUpgradeAvailable issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "longStrings": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for longStrings issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "highEntropyStrings": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for highEntropyStrings issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "urlStrings": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for urlStrings issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "usesEval": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for usesEval issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "dynamicRequire": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for dynamicRequire issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "envVars": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for envVars issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unusedDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unusedDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "peerDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for peerDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "uncaughtOptionalDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for uncaughtOptionalDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unresolvedRequire": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unresolvedRequire issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "extraneousDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for extraneousDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "obfuscatedRequire": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for obfuscatedRequire issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "obfuscatedFile": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for obfuscatedFile issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "minifiedFile": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for minifiedFile issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "installScripts": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for installScripts issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "hasNativeCode": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for hasNativeCode issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "binScriptConfusion": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for binScriptConfusion issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "shellScriptOverride": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for shellScriptOverride issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "didYouMean": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for didYouMean issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gptDidYouMean": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptDidYouMean issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "bidi": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for bidi issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "zeroWidth": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for zeroWidth issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "badEncoding": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for badEncoding issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "homoglyphs": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for homoglyphs issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "invisibleChars": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for invisibleChars issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "suspiciousString": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for suspiciousString issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "potentialVulnerability": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for potentialVulnerability issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        }
                      },
                      "description": ""
                    },
                    "securityPolicyDefault": {
                      "type": "string",
                      "enum": [
                        "default",
                        "low",
                        "medium",
                        "high"
                      ],
                      "description": "The default security policy for the organization",
                      "default": "default"
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "Retrieved security policy details"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Update Security Policy",
        "operationId": "updateOrgSecurityPolicy",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "custom_rules_only",
            "in": "query",
            "required": false,
            "description": "Return only customized security policy rules in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "policyDefault": {
                    "type": "string",
                    "enum": [
                      "default",
                      "low",
                      "medium",
                      "high"
                    ],
                    "description": "The default security policy for the organization"
                  },
                  "policyRules": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "gptSecurity": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gptSecurity issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "gptAnomaly": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gptAnomaly issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "gptMalware": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gptMalware issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "filesystemAccess": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for filesystemAccess issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "networkAccess": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for networkAccess issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "shellAccess": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for shellAccess issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "debugAccess": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for debugAccess issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "chromePermission": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for chromePermission issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "chromeHostPermission": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for chromeHostPermission issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "chromeWildcardHostPermission": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for chromeWildcardHostPermission issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "chromeContentScript": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for chromeContentScript issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "criticalCVE": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for criticalCVE issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "cve": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for cve issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "mediumCVE": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for mediumCVE issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "mildCVE": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for mildCVE issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "emptyPackage": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for emptyPackage issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "trivialPackage": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for trivialPackage issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noREADME": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noREADME issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "shrinkwrap": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for shrinkwrap issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "licenseSpdxDisj": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for licenseSpdxDisj issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unsafeCopyright": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unsafeCopyright issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "licenseChange": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for licenseChange issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "nonOSILicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for nonOSILicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "deprecatedLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for deprecatedLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "missingLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for missingLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "nonSPDXLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for nonSPDXLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unclearLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unclearLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "mixedLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for mixedLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "notice": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for notice issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "modifiedLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for modifiedLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "modifiedException": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for modifiedException issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "licenseException": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for licenseException issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "deprecatedException": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for deprecatedException issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "miscLicenseIssues": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for miscLicenseIssues issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unidentifiedLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unidentifiedLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noLicenseFound": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noLicenseFound issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "explicitlyUnlicensedItem": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for explicitlyUnlicensedItem issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "copyleftLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for copyleftLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "nonpermissiveLicense": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for nonpermissiveLicense issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "ambiguousClassifier": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for ambiguousClassifier issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "invalidPackageJSON": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for invalidPackageJSON issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "httpDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for httpDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "gitDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gitDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "gitHubDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gitHubDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "fileDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for fileDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noTests": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noTests issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noRepository": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noRepository issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "badSemver": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for badSemver issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "badSemverDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for badSemverDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noV1": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noV1 issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noWebsite": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noWebsite issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noBugTracker": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noBugTracker issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "noAuthorData": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for noAuthorData issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "typeModuleCompatibility": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for typeModuleCompatibility issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "floatingDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for floatingDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "manifestConfusion": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for manifestConfusion issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "malware": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for malware issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "telemetry": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for telemetry issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "troll": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for troll issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "deprecated": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for deprecated issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "chronoAnomaly": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for chronoAnomaly issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "compromisedSSHKey": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for compromisedSSHKey issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "semverAnomaly": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for semverAnomaly issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "newAuthor": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for newAuthor issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unstableOwnership": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unstableOwnership issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "missingAuthor": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for missingAuthor issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unmaintained": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unmaintained issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unpublished": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unpublished issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "majorRefactor": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for majorRefactor issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "missingTarball": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for missingTarball issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "suspiciousStarActivity": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for suspiciousStarActivity issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unpopularPackage": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unpopularPackage issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "socketUpgradeAvailable": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for socketUpgradeAvailable issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "longStrings": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for longStrings issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "highEntropyStrings": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for highEntropyStrings issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "urlStrings": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for urlStrings issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "usesEval": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for usesEval issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "dynamicRequire": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for dynamicRequire issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "envVars": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for envVars issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "missingDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for missingDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unusedDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unusedDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "peerDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for peerDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "uncaughtOptionalDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for uncaughtOptionalDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "unresolvedRequire": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for unresolvedRequire issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "extraneousDependency": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for extraneousDependency issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "obfuscatedRequire": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for obfuscatedRequire issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "obfuscatedFile": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for obfuscatedFile issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "minifiedFile": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for minifiedFile issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "installScripts": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for installScripts issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "hasNativeCode": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for hasNativeCode issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "binScriptConfusion": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for binScriptConfusion issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "shellScriptOverride": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for shellScriptOverride issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "didYouMean": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for didYouMean issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "gptDidYouMean": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for gptDidYouMean issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "bidi": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for bidi issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "zeroWidth": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for zeroWidth issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "badEncoding": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for badEncoding issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "homoglyphs": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for homoglyphs issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "invisibleChars": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for invisibleChars issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "suspiciousString": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for suspiciousString issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      },
                      "potentialVulnerability": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "action": {
                            "type": "string",
                            "enum": [
                              "defer",
                              "error",
                              "warn",
                              "monitor",
                              "ignore"
                            ],
                            "description": "The action to take for potentialVulnerability issues."
                          }
                        },
                        "required": [
                          "action"
                        ]
                      }
                    },
                    "description": ""
                  },
                  "resetPolicyRules": {
                    "type": "boolean",
                    "default": false,
                    "description": "Reset the policy rules to the default. When set to true, do not include any policyRules updates."
                  }
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "security-policy:update"
            ]
          },
          {
            "basicAuth": [
              "security-policy:update"
            ]
          }
        ],
        "description": "Update the security policy of an organization.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- security-policy:update",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "securityPolicyRules": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "gptSecurity": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptSecurity issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gptAnomaly": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptAnomaly issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gptMalware": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptMalware issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "filesystemAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for filesystemAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "networkAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for networkAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "shellAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for shellAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "debugAccess": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for debugAccess issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromePermission": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromePermission issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromeHostPermission": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromeHostPermission issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromeWildcardHostPermission": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromeWildcardHostPermission issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chromeContentScript": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chromeContentScript issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "criticalCVE": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for criticalCVE issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "cve": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for cve issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "mediumCVE": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for mediumCVE issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "mildCVE": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for mildCVE issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "emptyPackage": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for emptyPackage issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "trivialPackage": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for trivialPackage issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noREADME": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noREADME issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "shrinkwrap": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for shrinkwrap issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "licenseSpdxDisj": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for licenseSpdxDisj issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unsafeCopyright": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unsafeCopyright issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "licenseChange": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for licenseChange issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "nonOSILicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for nonOSILicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "deprecatedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for deprecatedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "nonSPDXLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for nonSPDXLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unclearLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unclearLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "mixedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for mixedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "notice": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for notice issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "modifiedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for modifiedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "modifiedException": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for modifiedException issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "licenseException": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for licenseException issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "deprecatedException": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for deprecatedException issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "miscLicenseIssues": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for miscLicenseIssues issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unidentifiedLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unidentifiedLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noLicenseFound": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noLicenseFound issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "explicitlyUnlicensedItem": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for explicitlyUnlicensedItem issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "copyleftLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for copyleftLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "nonpermissiveLicense": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for nonpermissiveLicense issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "ambiguousClassifier": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for ambiguousClassifier issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "invalidPackageJSON": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for invalidPackageJSON issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "httpDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for httpDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gitDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gitDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gitHubDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gitHubDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "fileDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for fileDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noTests": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noTests issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noRepository": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noRepository issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "badSemver": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for badSemver issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "badSemverDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for badSemverDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noV1": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noV1 issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noWebsite": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noWebsite issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noBugTracker": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noBugTracker issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "noAuthorData": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for noAuthorData issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "typeModuleCompatibility": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for typeModuleCompatibility issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "floatingDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for floatingDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "manifestConfusion": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for manifestConfusion issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "malware": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for malware issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "telemetry": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for telemetry issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "troll": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for troll issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "deprecated": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for deprecated issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "chronoAnomaly": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for chronoAnomaly issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "compromisedSSHKey": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for compromisedSSHKey issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "semverAnomaly": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for semverAnomaly issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "newAuthor": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for newAuthor issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unstableOwnership": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unstableOwnership issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingAuthor": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingAuthor issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unmaintained": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unmaintained issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unpublished": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unpublished issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "majorRefactor": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for majorRefactor issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingTarball": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingTarball issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "suspiciousStarActivity": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for suspiciousStarActivity issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unpopularPackage": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unpopularPackage issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "socketUpgradeAvailable": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for socketUpgradeAvailable issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "longStrings": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for longStrings issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "highEntropyStrings": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for highEntropyStrings issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "urlStrings": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for urlStrings issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "usesEval": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for usesEval issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "dynamicRequire": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for dynamicRequire issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "envVars": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for envVars issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "missingDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for missingDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unusedDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unusedDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "peerDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for peerDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "uncaughtOptionalDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for uncaughtOptionalDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "unresolvedRequire": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for unresolvedRequire issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "extraneousDependency": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for extraneousDependency issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "obfuscatedRequire": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for obfuscatedRequire issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "obfuscatedFile": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for obfuscatedFile issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "minifiedFile": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for minifiedFile issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "installScripts": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for installScripts issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "hasNativeCode": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for hasNativeCode issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "binScriptConfusion": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for binScriptConfusion issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "shellScriptOverride": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for shellScriptOverride issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "didYouMean": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for didYouMean issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "gptDidYouMean": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for gptDidYouMean issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "bidi": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for bidi issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "zeroWidth": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for zeroWidth issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "badEncoding": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for badEncoding issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "homoglyphs": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for homoglyphs issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "invisibleChars": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for invisibleChars issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "suspiciousString": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for suspiciousString issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        },
                        "potentialVulnerability": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "action": {
                              "type": "string",
                              "enum": [
                                "defer",
                                "error",
                                "warn",
                                "monitor",
                                "ignore"
                              ],
                              "description": "The action to take for potentialVulnerability issues."
                            }
                          },
                          "required": [
                            "action"
                          ]
                        }
                      },
                      "description": ""
                    },
                    "securityPolicyDefault": {
                      "type": "string",
                      "enum": [
                        "default",
                        "low",
                        "medium",
                        "high"
                      ],
                      "description": "The default security policy for the organization",
                      "default": "default"
                    }
                  },
                  "description": ""
                }
              }
            },
            "description": "Updated repository details"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/settings/license-policy": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Get Organization License Policy",
        "deprecated": true,
        "operationId": "getOrgLicensePolicy",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "license-policy:read"
            ]
          },
          {
            "basicAuth": [
              "license-policy:read"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference/viewlicensepolicy) for more information. Use the [successor version](/v0/orgs/{org_slug}/settings/license-policy/view) instead.\n\nRetrieve the license policy of an organization.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- license-policy:read",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "",
                  "default": null
                }
              }
            },
            "description": "Retrieved license policy details"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "post": {
        "tags": [
          "Settings"
        ],
        "summary": "Update License Policy",
        "operationId": "updateOrgLicensePolicy",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "merge_update",
            "in": "query",
            "required": true,
            "description": "Merge the policy update with the existing policy. Default is true. If false, the existing policy will be replaced with the new policy.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "",
                "default": null
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "license-policy:update"
            ]
          },
          {
            "basicAuth": [
              "license-policy:update"
            ]
          }
        ],
        "description": "Set the organization's license policy \n\n  \n## License policy schema\n\n```json\n{\n  allow?: Array<string>\n  warn?: Array<string>\n  options?: Array<string>\n}\n```\n\nElements of the `allow` and `warn` arrays strings representing items which should be allowed, or which should trigger a warning; license data found in pacakge which not present in either array will produce a license violation (effectively a \"hard\" error). For example, to allow Apache-2.0 and MIT to the allow list, simply add the strings \"Apache-2.0\" and \"MIT\" to the `allow` array. Strings appearing in these arrays are generally \"what you see is what you get\", with two important exceptions: strings which are recognized as license classes and strings which are recognized as PURLs are handled differently to allow for more flexible license policy creation.\n  \n## License Classes\n  \nStrings which are license classes will expand to a list of licenses known to be in that particular license class. Recognized license classes are: \n  'permissive',\n  'permissive (model)',\n  'permissive (gold)',\n  'permissive (silver)',\n  'permissive (bronze)',\n  'permissive (lead)',\n  'copyleft',\n  'maximal copyleft',\n  'network copyleft',\n  'strong copyleft',\n  'weak copyleft',\n  'contributor license agreement',\n  'public domain',\n  'proprietary free',\n  'source available',\n  'proprietary',\n  'commercial',\n  'patent'\n\nUsers can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.\n \n\n## PURLs\n\nUsers may also modify their license policy's allow and warn lists by using [package URLs](https://github.com/package-url/purl-spec) (aka PURLs), which support glob patterns to allow a range of versions, files and directories, etc.\n\npurl qualifiers which support globs are `filename`, `version_glob`, `artifact_id` and `license_provenance` (primarily used for allowing data from registry metadata).\n\n### Examples:\nAllow all license data found in a specific version of a package 4.14.1: `pkg:npm/lodash@4.14.1`\nAllow all license data found in a version range of a package: `pkg:npm/lodash?version_glob=15.*`\nAllow all license data in the test directory of a given package for certain version ranges: `pkg:npm/lodash@15.*.*?file_name=lodash/test/*`\nAllow all license data taken from the package registry for a package and version range: `pkg:npm/lodash?version_glob=*&license_provenance=registry_metadata`\n    \n## Available options\n\n`toplevelOnly`: only apply the license policy to \"top level\" license data in a package, which includes registry metadata, LICENSE files, and manifest files which are closest to the root of the package.\n\n`applyToUnidentified`: Apply license policy to found but unidentified license data. If enabled, the license policy will be applied to license data which could not be affirmatively identified as a known license (this will effectively merge the license policy violation and unidentified license alerts). If disabled, license policy alerts will only be shown for license data which is positively identified as something not allowed or set to warn by the license policy.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- license-policy:update",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "",
                  "default": null
                }
              }
            },
            "description": "Updated repository details"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/settings/license-policy/view": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Get License Policy (Beta)",
        "operationId": "viewLicensePolicy",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "license-policy:read"
            ]
          },
          {
            "basicAuth": [
              "license-policy:read"
            ]
          }
        ],
        "description": "Returns an organization's license policy\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- license-policy:read",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SStoredLicensePolicy"
                }
              }
            },
            "description": "Saturated License Allow List"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          },
          "500": {
            "$ref": "#/components/responses/SocketInternalServerError"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/historical/alerts": {
      "get": {
        "tags": [
          "Historical"
        ],
        "summary": "List historical alerts (Beta)",
        "operationId": "historicalAlertsList",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "description": "The UTC date in YYYY-MM-DD format for which to fetch alerts",
            "schema": {
              "type": "string",
              "default": "CURRENT_DATE"
            }
          },
          {
            "name": "range",
            "in": "query",
            "required": false,
            "description": "The number of days of data to fetch as an offset from input date (e.g. \"-7d\" or \"7d\") or use \"latest\" to query for latest alerts for each repo",
            "schema": {
              "type": "string",
              "default": "-7d"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "Specify the maximum number of results to return per page (intermediate pages may have fewer than this limit and callers should always check \"endCursor\" in response body to know if there are more pages)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000,
              "default": 10000
            }
          },
          {
            "name": "startAfterCursor",
            "in": "query",
            "required": false,
            "description": "The pagination cursor that was returned as the \"endCursor\" property in previous request",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "filters.alertSeverity",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert severities (\"low\", \"medium\", \"high\", or \"critical\") that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertSeverity.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert severities (\"low\", \"medium\", \"high\", or \"critical\") that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.repoSlug",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of repo slugs that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.repoSlug.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of repo slugs that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.repoLabels",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of repo labels that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.repoLabels.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of repo labels that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertType",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert types (e.g. \"usesEval\", \"unmaintained\", etc.) that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertType.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert types (e.g. \"usesEval\", \"unmaintained\", etc.) that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.artifactName",
            "in": "query",
            "required": false,
            "description": "Name of artifact",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.artifactName.notIn",
            "in": "query",
            "required": false,
            "description": "Name of artifact",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.artifactType",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of artifact types (e.g. \"npm\", \"pypi\", \"gem\", \"maven\", \"golang\", etc.) that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.artifactType.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of artifact types (e.g. \"npm\", \"pypi\", \"gem\", \"maven\", \"golang\", etc.) that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertAction",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert actions (\"error\", \"warn\", \"monitor\", or \"ignore) that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertAction.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert actions (\"error\", \"warn\", \"monitor\", or \"ignore) that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertActionSourceType",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert action source types (\"fallback\", \"org-policy\", \"reachability\", \"repo-label-policy\", \"socket-yml\", or \"triage\") that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertActionSourceType.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert action source types (\"fallback\", \"org-policy\", \"reachability\", \"repo-label-policy\", \"socket-yml\", or \"triage\") that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertFixType",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert fix types (\"upgrade\", \"cve\", or \"remove\") that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertFixType.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert fix types (\"upgrade\", \"cve\", or \"remove\") that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCategory",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert categories (\"supplyChainRisk\", \"maintenance\", \"quality\", \"license\", or \"vulnerability\") that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCategory.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert categories (\"supplyChainRisk\", \"maintenance\", \"quality\", \"license\", or \"vulnerability\") that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCveId",
            "in": "query",
            "required": false,
            "description": "CVE ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCveId.notIn",
            "in": "query",
            "required": false,
            "description": "CVE ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCveTitle",
            "in": "query",
            "required": false,
            "description": "CVE title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCveTitle.notIn",
            "in": "query",
            "required": false,
            "description": "CVE title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCweId",
            "in": "query",
            "required": false,
            "description": "CWE ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCweId.notIn",
            "in": "query",
            "required": false,
            "description": "CWE ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCweName",
            "in": "query",
            "required": false,
            "description": "CWE name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCweName.notIn",
            "in": "query",
            "required": false,
            "description": "CWE name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertReachabilityType",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert CVE reachability types (\"direct_dependency\", \"error\", \"maybe_reachable\", \"missing_support\", \"pending\", \"reachable\", \"undeterminable_reachability\", \"unknown\", or \"unreachable\") that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertReachabilityType.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert CVE reachability types (\"direct_dependency\", \"error\", \"maybe_reachable\", \"missing_support\", \"pending\", \"reachable\", \"undeterminable_reachability\", \"unknown\", or \"unreachable\") that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertPriority",
            "in": "query",
            "required": false,
            "description": "Alert priority (\"low\", \"medium\", or \"high\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertPriority.notIn",
            "in": "query",
            "required": false,
            "description": "Alert priority (\"low\", \"medium\", or \"high\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.dependencyDirect",
            "in": "query",
            "required": false,
            "description": "Direct/transitive dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filters.dependencyDirect.notIn",
            "in": "query",
            "required": false,
            "description": "Direct/transitive dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filters.dependencyDev",
            "in": "query",
            "required": false,
            "description": "Development/production dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filters.dependencyDev.notIn",
            "in": "query",
            "required": false,
            "description": "Development/production dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filters.dependencyDead",
            "in": "query",
            "required": false,
            "description": "Dead/reachable dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filters.dependencyDead.notIn",
            "in": "query",
            "required": false,
            "description": "Dead/reachable dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "historical:alerts-list"
            ]
          },
          {
            "basicAuth": [
              "historical:alerts-list"
            ]
          }
        ],
        "description": "List historical alerts.\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- historical:alerts-list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "endCursor": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "repoId": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "repoSlug": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "repoLabels": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "description": ""
                          },
                          "repoLabelIds": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "",
                              "default": ""
                            },
                            "description": ""
                          },
                          "branch": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "defaultBranch": {
                            "type": "boolean",
                            "default": false,
                            "description": ""
                          },
                          "fullScanId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "scannedAt": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "artifact": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "",
                                "default": "",
                                "nullable": true
                              },
                              "license": {
                                "type": "string",
                                "description": "",
                                "default": "",
                                "nullable": true
                              },
                              "name": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "namespace": {
                                "type": "string",
                                "description": "",
                                "default": "",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "version": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "artifact_id": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "artifactId": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "author": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "capabilities": {
                                "$ref": "#/components/schemas/Capabilities"
                              },
                              "qualifiers": {
                                "$ref": "#/components/schemas/Qualifiers"
                              },
                              "scores": {
                                "$ref": "#/components/schemas/SocketScore"
                              },
                              "size": {
                                "type": "integer",
                                "description": "",
                                "default": 0
                              },
                              "subpath": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              }
                            },
                            "required": [
                              "id",
                              "license",
                              "name",
                              "namespace",
                              "type",
                              "version"
                            ]
                          },
                          "alert": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "type": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "severity": {
                                "type": "integer",
                                "description": "",
                                "default": 0
                              },
                              "severityName": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "action": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "category": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "file": {
                                "type": "string",
                                "description": "",
                                "default": "",
                                "nullable": true
                              },
                              "props": {
                                "type": "object",
                                "description": "",
                                "default": null,
                                "nullable": true
                              },
                              "start": {
                                "type": "integer",
                                "description": "",
                                "default": 0,
                                "nullable": true
                              },
                              "end": {
                                "type": "integer",
                                "description": "",
                                "default": 0,
                                "nullable": true
                              },
                              "fix": {
                                "type": "object",
                                "additionalProperties": false,
                                "description": "",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "",
                                    "default": ""
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "",
                                    "default": ""
                                  }
                                },
                                "required": [
                                  "description",
                                  "type"
                                ],
                                "nullable": true
                              }
                            },
                            "required": [
                              "action",
                              "category",
                              "key",
                              "severity",
                              "severityName",
                              "type"
                            ]
                          },
                          "dependency": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "direct": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "dev": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "dead": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "manifestFiles": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/SocketManifestReference"
                                },
                                "description": ""
                              },
                              "topLevelAncestors": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/SocketId"
                                },
                                "description": ""
                              },
                              "dependencies": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/SocketId"
                                },
                                "description": ""
                              }
                            },
                            "required": [
                              "dead",
                              "dev",
                              "direct"
                            ]
                          }
                        },
                        "required": [
                          "alert",
                          "artifact",
                          "branch",
                          "defaultBranch",
                          "dependency",
                          "fullScanId",
                          "repoId",
                          "repoLabelIds",
                          "repoLabels",
                          "repoSlug",
                          "scannedAt"
                        ]
                      },
                      "description": ""
                    },
                    "meta": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "organizationId": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "queryStartTimestamp": {
                          "type": "number",
                          "description": "",
                          "default": 0
                        },
                        "startDateInclusive": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "endDateInclusive": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "includeLatestAlertsOnly": {
                          "type": "boolean",
                          "default": false,
                          "description": ""
                        },
                        "filters": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "alertSeverity": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert severities (\"low\", \"medium\", \"high\", or \"critical\") that should be excluded"
                            },
                            "repoSlug": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of repo slugs that should be excluded"
                            },
                            "repoLabels": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of repo labels that should be excluded"
                            },
                            "alertType": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert types (e.g. \"usesEval\", \"unmaintained\", etc.) that should be excluded"
                            },
                            "artifactName": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Name of artifact"
                            },
                            "artifactType": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of artifact types (e.g. \"npm\", \"pypi\", \"gem\", \"maven\", \"golang\", etc.) that should be excluded"
                            },
                            "alertAction": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert actions (\"error\", \"warn\", \"monitor\", or \"ignore) that should be excluded"
                            },
                            "alertActionSourceType": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert action source types (\"fallback\", \"org-policy\", \"reachability\", \"repo-label-policy\", \"socket-yml\", or \"triage\") that should be excluded"
                            },
                            "alertFixType": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert fix types (\"upgrade\", \"cve\", or \"remove\") that should be excluded"
                            },
                            "alertCategory": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert categories (\"supplyChainRisk\", \"maintenance\", \"quality\", \"license\", or \"vulnerability\") that should be excluded"
                            },
                            "alertCveId": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "CVE ID"
                            },
                            "alertCveTitle": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "CVE title"
                            },
                            "alertCweId": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "CWE ID"
                            },
                            "alertCweName": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "CWE name"
                            },
                            "alertReachabilityType": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert CVE reachability types (\"direct_dependency\", \"error\", \"maybe_reachable\", \"missing_support\", \"pending\", \"reachable\", \"undeterminable_reachability\", \"unknown\", or \"unreachable\") that should be excluded"
                            },
                            "alertPriority": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Alert priority (\"low\", \"medium\", or \"high\")"
                            },
                            "dependencyDirect": {
                              "type": "array",
                              "items": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "description": "Direct/transitive dependency filter flag"
                            },
                            "dependencyDev": {
                              "type": "array",
                              "items": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "description": "Development/production dependency filter flag"
                            },
                            "dependencyDead": {
                              "type": "array",
                              "items": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "description": "Dead/reachable dependency filter flag"
                            }
                          },
                          "description": ""
                        }
                      },
                      "required": [
                        "endDateInclusive",
                        "filters",
                        "includeLatestAlertsOnly",
                        "organizationId",
                        "queryStartTimestamp",
                        "startDateInclusive"
                      ]
                    }
                  },
                  "required": [
                    "endCursor",
                    "items",
                    "meta"
                  ]
                }
              }
            },
            "description": "The paginated array of API tokens for the organization, and related metadata."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/historical/alerts/trend": {
      "get": {
        "tags": [
          "Historical"
        ],
        "summary": "Trend of historical alerts (Beta)",
        "operationId": "historicalAlertsTrend",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "description": "The UTC date in YYYY-MM-DD format for which to fetch alerts",
            "schema": {
              "type": "string",
              "default": "CURRENT_DATE"
            }
          },
          {
            "name": "range",
            "in": "query",
            "required": false,
            "description": "The number of days of data to fetch as an offset from input date",
            "schema": {
              "type": "string",
              "default": "-7d"
            }
          },
          {
            "name": "aggregation.fields",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of fields that should be used for count aggregation (allowed: alertSeverity,repoSlug,repoLabels,alertType,artifactType,alertAction,alertActionSourceType,alertFixType,alertCategory,alertCveId,alertCveTitle,alertCweId,alertCweName,alertReachabilityType,alertPriority,dependencyDirect,dependencyDev,dependencyDead)",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "filters.alertSeverity",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert severities (\"low\", \"medium\", \"high\", or \"critical\") that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertSeverity.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert severities (\"low\", \"medium\", \"high\", or \"critical\") that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.repoSlug",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of repo slugs that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.repoSlug.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of repo slugs that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.repoLabels",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of repo labels that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.repoLabels.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of repo labels that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertType",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert types (e.g. \"usesEval\", \"unmaintained\", etc.) that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertType.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert types (e.g. \"usesEval\", \"unmaintained\", etc.) that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.artifactName",
            "in": "query",
            "required": false,
            "description": "Name of artifact",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.artifactName.notIn",
            "in": "query",
            "required": false,
            "description": "Name of artifact",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.artifactType",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of artifact types (e.g. \"npm\", \"pypi\", \"gem\", \"maven\", \"golang\", etc.) that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.artifactType.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of artifact types (e.g. \"npm\", \"pypi\", \"gem\", \"maven\", \"golang\", etc.) that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertAction",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert actions (\"error\", \"warn\", \"monitor\", or \"ignore) that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertAction.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert actions (\"error\", \"warn\", \"monitor\", or \"ignore) that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertActionSourceType",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert action source types (\"fallback\", \"org-policy\", \"reachability\", \"repo-label-policy\", \"socket-yml\", or \"triage\") that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertActionSourceType.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert action source types (\"fallback\", \"org-policy\", \"reachability\", \"repo-label-policy\", \"socket-yml\", or \"triage\") that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertFixType",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert fix types (\"upgrade\", \"cve\", or \"remove\") that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertFixType.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert fix types (\"upgrade\", \"cve\", or \"remove\") that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCategory",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert categories (\"supplyChainRisk\", \"maintenance\", \"quality\", \"license\", or \"vulnerability\") that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCategory.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert categories (\"supplyChainRisk\", \"maintenance\", \"quality\", \"license\", or \"vulnerability\") that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCveId",
            "in": "query",
            "required": false,
            "description": "CVE ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCveId.notIn",
            "in": "query",
            "required": false,
            "description": "CVE ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCveTitle",
            "in": "query",
            "required": false,
            "description": "CVE title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCveTitle.notIn",
            "in": "query",
            "required": false,
            "description": "CVE title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCweId",
            "in": "query",
            "required": false,
            "description": "CWE ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCweId.notIn",
            "in": "query",
            "required": false,
            "description": "CWE ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCweName",
            "in": "query",
            "required": false,
            "description": "CWE name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertCweName.notIn",
            "in": "query",
            "required": false,
            "description": "CWE name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertReachabilityType",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert CVE reachability types (\"direct_dependency\", \"error\", \"maybe_reachable\", \"missing_support\", \"pending\", \"reachable\", \"undeterminable_reachability\", \"unknown\", or \"unreachable\") that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertReachabilityType.notIn",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of alert CVE reachability types (\"direct_dependency\", \"error\", \"maybe_reachable\", \"missing_support\", \"pending\", \"reachable\", \"undeterminable_reachability\", \"unknown\", or \"unreachable\") that should be excluded",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertPriority",
            "in": "query",
            "required": false,
            "description": "Alert priority (\"low\", \"medium\", or \"high\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.alertPriority.notIn",
            "in": "query",
            "required": false,
            "description": "Alert priority (\"low\", \"medium\", or \"high\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters.dependencyDirect",
            "in": "query",
            "required": false,
            "description": "Direct/transitive dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filters.dependencyDirect.notIn",
            "in": "query",
            "required": false,
            "description": "Direct/transitive dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filters.dependencyDev",
            "in": "query",
            "required": false,
            "description": "Development/production dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filters.dependencyDev.notIn",
            "in": "query",
            "required": false,
            "description": "Development/production dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filters.dependencyDead",
            "in": "query",
            "required": false,
            "description": "Dead/reachable dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "filters.dependencyDead.notIn",
            "in": "query",
            "required": false,
            "description": "Dead/reachable dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "historical:alerts-trend"
            ]
          },
          {
            "basicAuth": [
              "historical:alerts-trend"
            ]
          }
        ],
        "description": "Trend analytics of historical alerts.\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- historical:alerts-trend",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "organizationId": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "startDateInclusive": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "endDateInclusive": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "interval": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "aggregation": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "fields": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            },
                            "groups": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "description": ""
                              },
                              "description": ""
                            }
                          },
                          "required": [
                            "fields",
                            "groups"
                          ]
                        },
                        "filters": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "alertSeverity": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert severities (\"low\", \"medium\", \"high\", or \"critical\") that should be excluded"
                            },
                            "repoSlug": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of repo slugs that should be excluded"
                            },
                            "repoLabels": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of repo labels that should be excluded"
                            },
                            "alertType": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert types (e.g. \"usesEval\", \"unmaintained\", etc.) that should be excluded"
                            },
                            "artifactName": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Name of artifact"
                            },
                            "artifactType": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of artifact types (e.g. \"npm\", \"pypi\", \"gem\", \"maven\", \"golang\", etc.) that should be excluded"
                            },
                            "alertAction": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert actions (\"error\", \"warn\", \"monitor\", or \"ignore) that should be excluded"
                            },
                            "alertActionSourceType": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert action source types (\"fallback\", \"org-policy\", \"reachability\", \"repo-label-policy\", \"socket-yml\", or \"triage\") that should be excluded"
                            },
                            "alertFixType": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert fix types (\"upgrade\", \"cve\", or \"remove\") that should be excluded"
                            },
                            "alertCategory": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert categories (\"supplyChainRisk\", \"maintenance\", \"quality\", \"license\", or \"vulnerability\") that should be excluded"
                            },
                            "alertCveId": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "CVE ID"
                            },
                            "alertCveTitle": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "CVE title"
                            },
                            "alertCweId": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "CWE ID"
                            },
                            "alertCweName": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "CWE name"
                            },
                            "alertReachabilityType": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of alert CVE reachability types (\"direct_dependency\", \"error\", \"maybe_reachable\", \"missing_support\", \"pending\", \"reachable\", \"undeterminable_reachability\", \"unknown\", or \"unreachable\") that should be excluded"
                            },
                            "alertPriority": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Alert priority (\"low\", \"medium\", or \"high\")"
                            },
                            "dependencyDirect": {
                              "type": "array",
                              "items": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "description": "Direct/transitive dependency filter flag"
                            },
                            "dependencyDev": {
                              "type": "array",
                              "items": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "description": "Development/production dependency filter flag"
                            },
                            "dependencyDead": {
                              "type": "array",
                              "items": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "description": "Dead/reachable dependency filter flag"
                            }
                          },
                          "description": ""
                        }
                      },
                      "required": [
                        "aggregation",
                        "endDateInclusive",
                        "filters",
                        "interval",
                        "organizationId",
                        "startDateInclusive"
                      ]
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "date": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "startOfDayTimestamp": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          },
                          "dataPoints": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "",
                              "properties": {
                                "aggregationGroup": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "",
                                    "default": ""
                                  },
                                  "description": ""
                                },
                                "count": {
                                  "type": "integer",
                                  "description": "",
                                  "default": 0
                                },
                                "countDelta": {
                                  "type": "integer",
                                  "description": "",
                                  "default": 0
                                }
                              },
                              "required": [
                                "aggregationGroup",
                                "count",
                                "countDelta"
                              ]
                            },
                            "description": ""
                          }
                        },
                        "required": [
                          "dataPoints",
                          "date",
                          "startOfDayTimestamp"
                        ]
                      },
                      "description": ""
                    }
                  },
                  "required": [
                    "items",
                    "meta"
                  ]
                }
              }
            },
            "description": "The trend data"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/historical/dependencies/trend": {
      "get": {
        "tags": [
          "Historical"
        ],
        "summary": "Trend of historical dependencies (Beta)",
        "operationId": "historicalDependenciesTrend",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "description": "The UTC date in YYYY-MM-DD format for which to fetch dependencies",
            "schema": {
              "type": "string",
              "default": "CURRENT_DATE"
            }
          },
          {
            "name": "range",
            "in": "query",
            "required": false,
            "description": "The number of days of data to fetch as an offset from input date",
            "schema": {
              "type": "string",
              "default": "-7d"
            }
          },
          {
            "name": "repoSlug",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of repo slugs that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repoLabels",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of repo labels that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artifactType",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of artifact types (e.g. \"npm\", \"pypi\", \"gem\", \"maven\", \"golang\", etc.) that should be included",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dependencyDirect",
            "in": "query",
            "required": false,
            "description": "Direct/transitive dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "dependencyDev",
            "in": "query",
            "required": false,
            "description": "Development/production dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "dependencyDead",
            "in": "query",
            "required": false,
            "description": "Dead/reachable dependency filter flag",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "historical:dependencies-trend"
            ]
          },
          {
            "basicAuth": [
              "historical:dependencies-trend"
            ]
          }
        ],
        "description": "Trend analytics of historical dependencies.\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- historical:dependencies-trend",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "organizationId": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "startDateInclusive": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "endDateInclusive": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "interval": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "aggregation": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "",
                          "properties": {
                            "fields": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            },
                            "groups": {
                              "type": "array",
                              "items": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "",
                                  "default": ""
                                },
                                "description": ""
                              },
                              "description": ""
                            }
                          },
                          "required": [
                            "fields",
                            "groups"
                          ]
                        },
                        "filters": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "repoSlug": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of repo slugs that should be included"
                            },
                            "repoLabels": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of repo labels that should be included"
                            },
                            "artifactType": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": "Comma-separated list of artifact types (e.g. \"npm\", \"pypi\", \"gem\", \"maven\", \"golang\", etc.) that should be included"
                            },
                            "dependencyDirect": {
                              "type": "array",
                              "items": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "description": "Direct/transitive dependency filter flag"
                            },
                            "dependencyDev": {
                              "type": "array",
                              "items": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "description": "Development/production dependency filter flag"
                            },
                            "dependencyDead": {
                              "type": "array",
                              "items": {
                                "type": "boolean",
                                "default": false,
                                "description": ""
                              },
                              "description": "Dead/reachable dependency filter flag"
                            }
                          },
                          "description": ""
                        }
                      },
                      "required": [
                        "aggregation",
                        "endDateInclusive",
                        "filters",
                        "interval",
                        "organizationId",
                        "startDateInclusive"
                      ]
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "date": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "startOfDayTimestamp": {
                            "type": "number",
                            "description": "",
                            "default": 0
                          },
                          "dataPoints": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "",
                              "properties": {
                                "aggregationGroup": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "",
                                    "default": ""
                                  },
                                  "description": ""
                                },
                                "count": {
                                  "type": "integer",
                                  "description": "",
                                  "default": 0
                                },
                                "countDelta": {
                                  "type": "integer",
                                  "description": "",
                                  "default": 0
                                },
                                "countDirect": {
                                  "type": "integer",
                                  "description": "",
                                  "default": 0
                                },
                                "countDirectDelta": {
                                  "type": "integer",
                                  "description": "",
                                  "default": 0
                                },
                                "countIndirect": {
                                  "type": "integer",
                                  "description": "",
                                  "default": 0
                                },
                                "countIndirectDelta": {
                                  "type": "integer",
                                  "description": "",
                                  "default": 0
                                },
                                "countsBySeverity": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "description": "",
                                  "properties": {
                                    "low": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "description": "",
                                      "properties": {
                                        "count": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDirect": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDirectDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countIndirect": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countIndirectDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        }
                                      },
                                      "required": [
                                        "count",
                                        "countDelta",
                                        "countDirect",
                                        "countDirectDelta",
                                        "countIndirect",
                                        "countIndirectDelta"
                                      ]
                                    },
                                    "medium": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "description": "",
                                      "properties": {
                                        "count": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDirect": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDirectDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countIndirect": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countIndirectDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        }
                                      },
                                      "required": [
                                        "count",
                                        "countDelta",
                                        "countDirect",
                                        "countDirectDelta",
                                        "countIndirect",
                                        "countIndirectDelta"
                                      ]
                                    },
                                    "high": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "description": "",
                                      "properties": {
                                        "count": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDirect": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDirectDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countIndirect": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countIndirectDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        }
                                      },
                                      "required": [
                                        "count",
                                        "countDelta",
                                        "countDirect",
                                        "countDirectDelta",
                                        "countIndirect",
                                        "countIndirectDelta"
                                      ]
                                    },
                                    "critical": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "description": "",
                                      "properties": {
                                        "count": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDirect": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countDirectDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countIndirect": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        },
                                        "countIndirectDelta": {
                                          "type": "integer",
                                          "description": "",
                                          "default": 0
                                        }
                                      },
                                      "required": [
                                        "count",
                                        "countDelta",
                                        "countDirect",
                                        "countDirectDelta",
                                        "countIndirect",
                                        "countIndirectDelta"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "critical",
                                    "high",
                                    "low",
                                    "medium"
                                  ]
                                }
                              },
                              "required": [
                                "aggregationGroup",
                                "count",
                                "countDelta",
                                "countDirect",
                                "countDirectDelta",
                                "countIndirect",
                                "countIndirectDelta",
                                "countsBySeverity"
                              ]
                            },
                            "description": ""
                          }
                        },
                        "required": [
                          "dataPoints",
                          "date",
                          "startOfDayTimestamp"
                        ]
                      },
                      "description": ""
                    }
                  },
                  "required": [
                    "items",
                    "meta"
                  ]
                }
              }
            },
            "description": "The trend data"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/historical/snapshots": {
      "get": {
        "tags": [
          "Historical"
        ],
        "summary": "List details of periodic historical data snapshots (Beta)",
        "operationId": "historicalSnapshotsList",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "description": "The UTC date in YYYY-MM-DD format for which to fetch snapshots",
            "schema": {
              "type": "string",
              "default": "CURRENT_DATE"
            }
          },
          {
            "name": "range",
            "in": "query",
            "required": false,
            "description": "The number of days of data to fetch as an offset from input date (e.g. \"-7d\" or \"7d\") or use \"latest\" to query for latest snapshots for each repo",
            "schema": {
              "type": "string",
              "default": "-7d"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "Specify the maximum number of results to return per page (intermediate pages may have fewer than this limit and callers should always check \"endCursor\" in response body to know if there are more pages)",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000,
              "default": 10000
            }
          },
          {
            "name": "startAfterCursor",
            "in": "query",
            "required": false,
            "description": "The pagination cursor that was returned as the \"endCursor\" property in previous request",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "filters.status",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of historical snapshot statuses that should be included (allowed: \"in-progress\", \"success\", \"failure\", \"timeout\")",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "filters.requestId",
            "in": "query",
            "required": false,
            "description": "Comma-separated list of requestId values that were used to start the historical snapshot job",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "historical:snapshots-list"
            ]
          },
          {
            "basicAuth": [
              "historical:snapshots-list"
            ]
          }
        ],
        "description": "This API endpoint is used to list the details of historical snapshots.\nSnapshots of organization data are taken periodically, and\neach historical snapshot record contains high-level overview metrics about the data\nthat was collected. Other [Historical Data Endpoints](/reference/historical-data-endpoints)\ncan be used to fetch the raw data associated with each snapshot.\n\nHistorical snapshots contain details and raw data for the following resources:\n\n- Repositories\n- Alerts\n- Dependencies\n- Artifacts\n- Users\n- Settings\n\nDaily snapshot data is bucketed to the nearest day which is described in\nmore detail at: [Historical Data Endpoints](/reference/historical-data-endpoints)\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- historical:snapshots-list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "organizationId": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "queryStartTimestamp": {
                          "type": "number",
                          "description": "",
                          "default": 0
                        },
                        "startDateInclusive": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "endDateInclusive": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        },
                        "filters": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "status": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            },
                            "requestId": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "description": ""
                            }
                          },
                          "description": ""
                        }
                      },
                      "required": [
                        "endDateInclusive",
                        "filters",
                        "organizationId",
                        "queryStartTimestamp",
                        "startDateInclusive"
                      ]
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "requestId": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "requestedBy": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "requestedAt": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "startedAt": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "finishedAt": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "durationMs": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "status": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "numReposScanned": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "numSbomsScanned": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "numLowAlerts": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "numHighAlerts": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "numMediumAlerts": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "numCriticalAlerts": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "numIgnoredLowAlerts": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "numIgnoredHighAlerts": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "numIgnoredMediumAlerts": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "numIgnoredCriticalAlerts": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          }
                        },
                        "required": [
                          "durationMs",
                          "finishedAt",
                          "id",
                          "numCriticalAlerts",
                          "numHighAlerts",
                          "numIgnoredCriticalAlerts",
                          "numIgnoredHighAlerts",
                          "numIgnoredLowAlerts",
                          "numIgnoredMediumAlerts",
                          "numLowAlerts",
                          "numMediumAlerts",
                          "numReposScanned",
                          "numSbomsScanned",
                          "requestId",
                          "requestedAt",
                          "requestedBy",
                          "startedAt",
                          "status"
                        ]
                      },
                      "description": ""
                    },
                    "endCursor": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    }
                  },
                  "required": [
                    "endCursor",
                    "items",
                    "meta"
                  ]
                }
              }
            },
            "description": "The historical snapshots."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      },
      "post": {
        "tags": [
          "Historical"
        ],
        "summary": "Start historical data snapshot job (Beta)",
        "operationId": "historicalSnapshotsStart",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "historical:snapshots-start"
            ]
          },
          {
            "basicAuth": [
              "historical:snapshots-start"
            ]
          }
        ],
        "description": "This API endpoint is used to start a historical snapshot job. While\nsnapshots are typically taken at least once a day, this endpoint can\nbe used to start an \"on demand\" snapshot job to ensure the latest\ndata is collected and stored for historical purposes.\n\nAn historical snapshot will contain details and raw data for the following resources:\n\n- Repositories\n- Alerts\n- Dependencies\n- Artifacts\n- Users\n- Settings\n\nHistorical snapshot data is bucketed to the nearest day which is described in\nmore detail at: [Historical Data Endpoints](/reference/historical-data-endpoints)\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- historical:snapshots-start",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "requestedBy": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "requestedAt": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "required": [
                    "requestId",
                    "requestedAt",
                    "requestedBy"
                  ]
                }
              }
            },
            "description": "The details of the snapshot job request."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/supported-files": {
      "get": {
        "tags": [
          "Full Scans"
        ],
        "summary": "Get supported file types",
        "operationId": "getSupportedFiles",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          }
        ],
        "description": "Get a list of supported files for full scan generation.\nFiles are categorized first by environment (e.g. NPM or PyPI), then by name.\n\nFiles whose names match the patterns returned by this endpoint can be uploaded for report generation.\nExamples of supported filenames include `package.json`, `package-lock.json`, and `yarn.lock`.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- No Scopes Required, but authentication is required",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        }
                      },
                      "required": [
                        "pattern"
                      ]
                    },
                    "properties": {},
                    "description": ""
                  },
                  "properties": {},
                  "description": ""
                }
              }
            },
            "description": "Glob patterns used to match supported files"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/threat-feed": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Get Threat Feed Items (Deprecated)",
        "deprecated": true,
        "operationId": "getThreatFeedItems",
        "parameters": [
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "Number of threats per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 30
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page token",
            "schema": {
              "type": "string",
              "default": "1"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Sort sort the threat feed by ID or createdAt attribute.",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "created_at"
              ],
              "default": "id"
            }
          },
          {
            "name": "discovery_period",
            "in": "query",
            "required": false,
            "description": "Filter results by discovery period",
            "schema": {
              "type": "string",
              "enum": [
                "1h",
                "6h",
                "1d",
                "7d",
                "30d",
                "90d",
                "365d"
              ]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "description": "Ordering direction of the sort attribute",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "Filter what type of threats to return",
            "schema": {
              "type": "string",
              "enum": [
                "u",
                "c",
                "fp",
                "tp",
                "mal",
                "vuln",
                "anom",
                "joke",
                "spy",
                "typo",
                "secret",
                "obf"
              ],
              "default": "mal"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Filter threats by package name",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "description": "Filter threats by package version",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "is_human_reviewed",
            "in": "query",
            "required": false,
            "description": "Only return threats which have been human-reviewed",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "ecosystem",
            "in": "query",
            "required": false,
            "description": "Filter threats by package ecosystem type",
            "schema": {
              "type": "string",
              "enum": [
                "github",
                "cargo",
                "chrome",
                "golang",
                "huggingface",
                "maven",
                "npm",
                "nuget",
                "pypi",
                "gem"
              ]
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "threat-feed:list"
            ]
          },
          {
            "basicAuth": [
              "threat-feed:list"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference/getorgthreatfeeditems) for more information. Use the [successor version](/v0/orgs/{org_slug}/threat-feed) instead.\n\nPaginated list of threat feed items.\n\nThis endpoint requires an Enterprise Plan with Threat Feed add-on. [Contact](https://socket.dev/demo?utm_source=api-docs&utm_medium=referral&utm_campaign=tracking) our sales team for more details.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- threat-feed:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "description": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "id": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "locationHtmlUrl": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "packageHtmlUrl": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "purl": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "removedAt": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "threatType": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "needsHumanReview": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether the threat still is in need of human review by the threat research team"
                          }
                        },
                        "description": ""
                      },
                      "description": ""
                    },
                    "nextPage": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    }
                  },
                  "required": [
                    "nextPage",
                    "results"
                  ]
                }
              }
            },
            "description": "The paginated list of threats in the feed and the next page querystring token."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/orgs/{org_slug}/threat-feed": {
      "get": {
        "tags": [
          "Threat Feed"
        ],
        "summary": "Get Threat Feed Items (Beta)",
        "operationId": "getOrgThreatFeedItems",
        "parameters": [
          {
            "name": "org_slug",
            "in": "path",
            "required": true,
            "description": "The slug of the organization",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "Number of threats per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 30
            }
          },
          {
            "name": "page_cursor",
            "in": "query",
            "required": false,
            "description": "Page cursor token. Pass the returned nextPageCursor to this query string to fetch the next page of the threat feed.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Set the sort order for the threat feed items. Default is descending order by updated_at, which includes all new and updated threat feed items.",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "created_at",
                "updated_at"
              ],
              "default": "updated_at"
            }
          },
          {
            "name": "updated_after",
            "in": "query",
            "required": false,
            "description": "A Unix timestamp in seconds that filters results to items only updated after the timestamp.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_after",
            "in": "query",
            "required": false,
            "description": "A Unix timestamp in seconds that filters results to items only created after the date.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "description": "Order direction of the provided sort field.",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ],
              "default": "desc"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "description": "Filter what type of threats to return",
            "schema": {
              "type": "string",
              "enum": [
                "u",
                "c",
                "fp",
                "tp",
                "mal",
                "vuln",
                "anom",
                "joke",
                "spy",
                "typo",
                "secret",
                "obf"
              ],
              "default": "mal"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Filter threats by package name",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "description": "Filter threats by package version.",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "is_human_reviewed",
            "in": "query",
            "required": false,
            "description": "Only return threats which have been human-reviewed",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "ecosystem",
            "in": "query",
            "required": false,
            "description": "Filter threats by package ecosystem type",
            "schema": {
              "type": "string",
              "enum": [
                "github",
                "cargo",
                "chrome",
                "golang",
                "huggingface",
                "maven",
                "npm",
                "nuget",
                "pypi",
                "gem"
              ]
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "threat-feed:list"
            ]
          },
          {
            "basicAuth": [
              "threat-feed:list"
            ]
          }
        ],
        "description": "Paginated list of threats, sorted by updated_at by default. Set updated_after to the unix timestamp of your last sync while sorting by updated_at to synchronize all new or updated threats in the feed.\n\nThis endpoint requires an Enterprise Plan with Threat Feed add-on. [Contact](https://socket.dev/demo?utm_source=api-docs&utm_medium=referral&utm_campaign=tracking) our sales team for more details.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- threat-feed:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "updatedAt": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "description": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "id": {
                            "type": "integer",
                            "description": "",
                            "default": 0
                          },
                          "locationHtmlUrl": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "packageHtmlUrl": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "purl": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "removedAt": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "threatType": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "needsHumanReview": {
                            "type": "boolean",
                            "default": false,
                            "description": "Whether the threat still is in need of human review by the threat research team"
                          }
                        },
                        "description": ""
                      },
                      "description": ""
                    },
                    "nextPageCursor": {
                      "type": "string",
                      "description": "",
                      "default": "",
                      "nullable": true
                    }
                  },
                  "required": [
                    "nextPageCursor",
                    "results"
                  ]
                }
              }
            },
            "description": "The paginated list of items in the threat feed and the next page cursor."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/analytics/org/{filter}": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Get organization analytics (unstable)",
        "deprecated": true,
        "operationId": "getOrgAnalytics",
        "parameters": [
          {
            "name": "filter",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "report:write"
            ]
          },
          {
            "basicAuth": [
              "report:write"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference/historicalalertstrend) for more information. Use the [successor version](/v0/orgs/{org_slug}/historical/alerts/trend) instead.\n\nPlease implement against the [Historical dependencies](/reference/historicaldependenciestrend) or [Historical alerts](/reference/historicalalertstrend) endpoints.\n\nGet analytics data regarding the number of alerts found across all active repositories.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- report:write",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "created_at": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "repository_id": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "organization_id": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "repository_name": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "total_critical_alerts": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_high_alerts": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_medium_alerts": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_low_alerts": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_critical_added": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_high_added": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_medium_added": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_low_added": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_critical_prevented": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_high_prevented": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_medium_prevented": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_low_prevented": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "top_five_alert_types": {
                        "type": "object",
                        "default": {},
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "created_at",
                      "id",
                      "organization_id",
                      "repository_id",
                      "repository_name",
                      "top_five_alert_types",
                      "total_critical_added",
                      "total_critical_alerts",
                      "total_critical_prevented",
                      "total_high_added",
                      "total_high_alerts",
                      "total_high_prevented",
                      "total_low_added",
                      "total_low_alerts",
                      "total_low_prevented",
                      "total_medium_added",
                      "total_medium_alerts",
                      "total_medium_prevented"
                    ]
                  },
                  "description": ""
                }
              }
            },
            "description": "Socket analytics - organization-level data"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/analytics/repo/{name}/{filter}": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Get repository analytics",
        "deprecated": true,
        "operationId": "getRepoAnalytics",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "report:write"
            ]
          },
          {
            "basicAuth": [
              "report:write"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference/historicalalertstrend) for more information. Use the [successor version](/v0/orgs/{org_slug}/historical/alerts/trend) instead.\n\nPlease implement against the [Historical dependencies](/reference/historicaldependenciestrend) or [Historical alerts](/reference/historicalalertstrend) endpoints.\n\nGet analytics data regarding the number of alerts found in a single repository.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- report:write",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "repository_id": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "created_at": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "organization_id": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "repository_name": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "total_critical_alerts": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_high_alerts": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_medium_alerts": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_low_alerts": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_critical_added": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_high_added": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_medium_added": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_low_added": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_critical_prevented": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_high_prevented": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_medium_prevented": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "total_low_prevented": {
                        "type": "integer",
                        "description": "",
                        "default": 0
                      },
                      "top_five_alert_types": {
                        "type": "object",
                        "default": {},
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "created_at",
                      "id",
                      "organization_id",
                      "repository_id",
                      "repository_name",
                      "top_five_alert_types",
                      "total_critical_added",
                      "total_critical_alerts",
                      "total_critical_prevented",
                      "total_high_added",
                      "total_high_alerts",
                      "total_high_prevented",
                      "total_low_added",
                      "total_low_alerts",
                      "total_low_prevented",
                      "total_medium_added",
                      "total_medium_alerts",
                      "total_medium_prevented"
                    ]
                  },
                  "description": ""
                }
              }
            },
            "description": "Socket analytics - repo-level data"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/dependencies/search": {
      "post": {
        "tags": [
          "Dependencies"
        ],
        "summary": "Search dependencies",
        "operationId": "searchDependencies",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "limit": {
                    "type": "integer",
                    "description": "",
                    "default": 50,
                    "minimum": 1,
                    "maximum": 100
                  },
                  "offset": {
                    "type": "integer",
                    "description": "",
                    "default": 0,
                    "minimum": 0
                  },
                  "purls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "PURLs to filter results with",
                      "default": ""
                    },
                    "description": ""
                  }
                },
                "required": [
                  "limit",
                  "offset"
                ]
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          }
        ],
        "description": "Search for any dependency that is being used in your organization.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- No Scopes Required, but authentication is required",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "end": {
                      "type": "boolean",
                      "default": false,
                      "description": ""
                    },
                    "limit": {
                      "type": "integer",
                      "description": "",
                      "default": 1000
                    },
                    "offset": {
                      "type": "integer",
                      "description": "",
                      "default": 0
                    },
                    "purlFilters": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "valid": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Successfully parsed PURLs",
                            "default": ""
                          },
                          "description": ""
                        },
                        "invalid": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "PURLs that could not be parsed",
                            "default": ""
                          },
                          "description": ""
                        }
                      },
                      "required": [
                        "invalid",
                        "valid"
                      ]
                    },
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "branch": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "direct": {
                            "type": "boolean",
                            "default": false,
                            "description": ""
                          },
                          "id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "name": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "repository": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "namespace": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "version": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "branch",
                          "direct",
                          "id",
                          "name",
                          "repository",
                          "type"
                        ]
                      },
                      "description": ""
                    }
                  },
                  "required": [
                    "end",
                    "limit",
                    "offset",
                    "purlFilters",
                    "rows"
                  ]
                }
              }
            },
            "description": "Search dependencies response"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/dependencies/upload": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Create a snapshot of all dependencies from manifest information",
        "deprecated": true,
        "operationId": "createDependenciesSnapshot",
        "parameters": [
          {
            "name": "repository",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "default": {
                    "type": "Buffer",
                    "data": []
                  },
                  "format": "binary",
                  "description": ""
                },
                "properties": {
                  "repository": {
                    "type": "string",
                    "description": "",
                    "default": ""
                  },
                  "branch": {
                    "type": "string",
                    "description": "",
                    "default": ""
                  }
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "report:write"
            ]
          },
          {
            "basicAuth": [
              "report:write"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.**\n\nUpload a set of manifest or lockfiles to get your dependency tree analyzed by Socket.\nYou can upload multiple lockfiles in the same request, but each filename must be unique.\n\nThe name of the file must be in the supported list.\n\nFor example, these are valid filenames: \"requirements.txt\", \"package.json\", \"folder/package.json\", and \"deep/nested/folder/package.json\".\n\nThis endpoint consumes 100 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- report:write",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {}
                }
              }
            },
            "description": "ID of the dependencies snapshot"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          },
          "500": {
            "$ref": "#/components/responses/SocketInternalServerError"
          }
        },
        "x-readme": {}
      }
    },
    "/report/supported": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Get supported files for report",
        "deprecated": true,
        "operationId": "getReportSupportedFiles",
        "security": [],
        "description": "**This endpoint is deprecated.** Deprecated since 2023-01-15. See [deprecation documentation](https://docs.socket.dev/reference/getsupportedfiles) for more information. Use the [successor version](/v0/orgs/{org_slug}/supported-files) instead.\n\nThis route has been moved to the `orgs/{org_slug}/supported-files` endpoint.\n\nGet a list of supported files for project report generation.\nFiles are categorized first by environment (e.g. NPM or PyPI), then by name.\n\nFiles whose names match the patterns returned by this endpoint can be uploaded for report generation.\nExamples of supported filenames include `package.json`, `package-lock.json`, and `yarn.lock`.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "pattern": {
                          "type": "string",
                          "description": "",
                          "default": ""
                        }
                      },
                      "required": [
                        "pattern"
                      ]
                    },
                    "properties": {},
                    "description": ""
                  },
                  "properties": {},
                  "description": ""
                }
              }
            },
            "description": "Glob patterns used to match supported files"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/report/delete/{id}": {
      "delete": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Delete a report",
        "deprecated": true,
        "operationId": "deleteReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "report:write"
            ]
          },
          {
            "basicAuth": [
              "report:write"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference) for more information. Use the [successor version](/v0/orgs/{org_slug}/full-scans) instead.\n\nDeprecated: Use `/orgs/{org_slug}/full-scans` instead. Delete a specific project report generated with the GitHub app.\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- report:write",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "",
                      "default": "ok"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/report/list": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Get list of reports",
        "deprecated": true,
        "operationId": "getReportList",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": false,
            "description": "A Unix timestamp in seconds to filter results prior to this date.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo",
            "in": "query",
            "required": false,
            "description": "When defined, returns only reports for the associated repository slug. ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "report:list"
            ]
          },
          {
            "basicAuth": [
              "report:list"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference) for more information. Use the [successor version](/v0/orgs/{org_slug}/full-scans) instead.\n\nDeprecated: Use `/orgs/{org_slug}/full-scans` instead. Get all your project reports generated with the GitHub app.\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- report:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "description": "",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "url": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "repo": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "branch": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "pull_requests": {
                        "type": "object",
                        "description": "",
                        "default": null
                      },
                      "commit": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "owner": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      },
                      "created_at": {
                        "type": "string",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": [
                      "branch",
                      "commit",
                      "created_at",
                      "id",
                      "owner",
                      "pull_requests",
                      "repo",
                      "url"
                    ]
                  },
                  "description": ""
                }
              }
            },
            "description": "List of project reports"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/report/upload": {
      "put": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Create a report",
        "deprecated": true,
        "operationId": "createReport",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "default": {
                    "type": "Buffer",
                    "data": []
                  },
                  "format": "binary",
                  "description": ""
                },
                "properties": {
                  "issueRules": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "boolean",
                      "default": false,
                      "description": ""
                    },
                    "properties": {},
                    "description": ""
                  }
                },
                "description": ""
              }
            }
          },
          "required": false
        },
        "security": [
          {
            "bearerAuth": [
              "report:write"
            ]
          },
          {
            "basicAuth": [
              "report:write"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference/createorgfullscan) for more information. Use the [successor version](/v0/orgs/{org_slug}/full-scans) instead.\n\nDeprecated: Use `/orgs/{org_slug}/full-scans` instead.\n\nUpload a lockfile to get your project analyzed by Socket.\nYou can upload multiple lockfiles in the same request, but each filename must be unique.\n\nThe name of the file must be in the supported list.\n\nFor example, these are valid filenames: `package.json`, `folder/package.json` and `deep/nested/folder/package.json`.\n\nThis endpoint consumes 100 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- report:write",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    },
                    "url": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "required": [
                    "id",
                    "url"
                  ]
                }
              }
            },
            "description": "ID and URL of the project report"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/report/view/{id}": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "View a report",
        "deprecated": true,
        "operationId": "getReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "report:read"
            ]
          },
          {
            "basicAuth": [
              "report:read"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference/getorgfullscan) for more information. Use the [successor version](/v0/orgs/{org_slug}/full-scans/{full_scan_id}) instead.\n\nDeprecated: Use `/orgs/{org_slug}/full-scans` instead. Get all the issues, packages, and scores related to an specific project report.\n\nThis endpoint consumes 10 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- report:read",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocketReport"
                }
              }
            },
            "description": "Socket report"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "410": {
            "$ref": "#/components/responses/SocketGone"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/repo/list": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "List GitHub repositories",
        "deprecated": true,
        "operationId": "getRepoList",
        "parameters": [
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "description": "",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "security": [
          {
            "bearerAuth": [
              "repo:list"
            ]
          },
          {
            "basicAuth": [
              "repo:list"
            ]
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference/getorgrepolist) for more information. Use the [successor version](/v0/orgs/{org_slug}/repos) instead.\n\nDeprecated: Use `/orgs/{org_slug}/repos` instead. Get all GitHub repositories associated with a Socket org.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- repo:list",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "created_at": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "github_install_id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "github_repo_id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "name": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "github_full_name": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "organization_id": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "latest_project_report": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              },
                              "created_at": {
                                "type": "string",
                                "description": "",
                                "default": ""
                              }
                            },
                            "required": [
                              "created_at",
                              "id"
                            ]
                          }
                        },
                        "required": [
                          "created_at",
                          "github_full_name",
                          "github_install_id",
                          "github_repo_id",
                          "id",
                          "name",
                          "organization_id",
                          "updated_at"
                        ]
                      },
                      "description": ""
                    }
                  },
                  "required": [
                    "results"
                  ]
                }
              }
            },
            "description": "List of GitHub repositories associated with the organization."
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/openapi": {
      "get": {
        "tags": [
          "Misc"
        ],
        "summary": "Returns the OpenAPI definition",
        "operationId": "getOpenAPI",
        "security": [],
        "description": "Retrieve the API specification in an Openapi JSON format.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:",
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OpenAPI specification"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/quota": {
      "get": {
        "tags": [
          "Misc"
        ],
        "summary": "Get quota",
        "operationId": "getQuota",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          }
        ],
        "description": "Get your current API quota. You can use this endpoint to prevent doing requests that might spend all your quota.\n\nThis endpoint consumes 0 units of your quota.\n\nThis endpoint requires the following org token scopes:\n- No Scopes Required, but authentication is required",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "quota": {
                      "type": "integer",
                      "description": "",
                      "default": 0,
                      "minimum": 0
                    }
                  },
                  "required": [
                    "quota"
                  ]
                }
              }
            },
            "description": "Quota amount"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "Misc"
        ],
        "summary": "List organizations",
        "operationId": "getOrganizations",
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          }
        ],
        "description": "Get information on the current organizations associated with the API token.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- No Scopes Required, but authentication is required",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "organizations": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "name": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "image": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "plan": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          },
                          "slug": {
                            "type": "string",
                            "description": "",
                            "default": ""
                          }
                        },
                        "required": [
                          "id",
                          "image",
                          "name",
                          "plan",
                          "slug"
                        ]
                      },
                      "properties": {},
                      "description": ""
                    }
                  },
                  "required": [
                    "organizations"
                  ]
                }
              }
            },
            "description": "Organizations information"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/settings": {
      "post": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Calculate settings",
        "deprecated": true,
        "operationId": "postSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "organization": {
                      "type": "string",
                      "description": "",
                      "default": ""
                    }
                  },
                  "description": ""
                },
                "description": ""
              }
            }
          },
          "description": "Array of organization selector objects (with `organization` field holding the organization ID) to get settings for",
          "required": false
        },
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference/updateorgsecuritypolicy) for more information. Use the [successor version](/v0/orgs/{org_slug}/settings/security-policy) instead.\n\nGet current settings for the requested organizations and default settings to allow deferrals.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- No Scopes Required, but authentication is required",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "",
                  "properties": {
                    "defaults": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "",
                      "properties": {
                        "issueRules": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "action": {
                                "type": "string",
                                "enum": [
                                  "error",
                                  "ignore",
                                  "warn"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "issueRules"
                      ]
                    },
                    "entries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "",
                        "properties": {
                          "start": {
                            "type": "string",
                            "description": "",
                            "default": "",
                            "nullable": true
                          },
                          "settings": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "deferTo": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "issueRules": {
                                  "type": "object",
                                  "nullable": false,
                                  "additionalProperties": {
                                    "type": "object",
                                    "nullable": false,
                                    "properties": {
                                      "action": {
                                        "type": "string",
                                        "enum": [
                                          "defer",
                                          "error",
                                          "ignore",
                                          "warn",
                                          "monitor"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "action"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "deferTo",
                                "issueRules"
                              ]
                            }
                          }
                        },
                        "required": [
                          "settings",
                          "start"
                        ]
                      },
                      "description": ""
                    }
                  },
                  "required": [
                    "defaults",
                    "entries"
                  ]
                }
              }
            },
            "description": "Organization settings. Returned object contains default issue rules and an array of entries, with each entry representing an organization's settings."
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/npm/{package}/{version}/issues": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Get issues by package",
        "deprecated": true,
        "operationId": "getIssuesByNPMPackage",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference) for more information. Use the [successor version](/v0/purl/{purl}/issues) instead.\n\nGet all the issues related with a particular npm package version.\nThis endpoint returns the issue type, location, and additional details related to each issue in the `props` attribute.\n\nYou can [see here](https://socket.dev/alerts) the full list of issues.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- No Scopes Required, but authentication is required",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocketIssueList"
                }
              }
            },
            "description": "Socket issue lists"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    },
    "/npm/{package}/{version}/score": {
      "get": {
        "tags": [
          "Deprecated"
        ],
        "summary": "Get score by package",
        "deprecated": true,
        "operationId": "getScoreByNPMPackage",
        "parameters": [
          {
            "name": "package",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "basicAuth": []
          }
        ],
        "description": "**This endpoint is deprecated.** See [deprecation documentation](https://docs.socket.dev/reference/batchpackagefetch) for more information. Use the [successor version](/v0/purl) instead.\n\nGet all the scores and metrics by category that are used to evaluate the package version.\n\n- depscore: The average of all score factors. (0-1)\n- supplyChainRisk: Score factors relating to supply chain security (0-1)\n- downloadCount: The number of downloads for the package. Higher downloads contribute to a higher score.\n- supplyChainRiskIssueLow/Mid/High/Critical: The number of supply chain risk issues of varying severity. Lower numbers contribute to a higher score.\n- dependencyCount: The number of production dependencies. Lower count contributes to a higher score.\n- devDependencyCount: The number of development dependencies. Lower count contributes to a higher score.\n- transitiveDependencyCount: The number of transitive dependencies. Lower count contributes to a higher score.\n- totalDependencyCount: The total number of dependencies (production + development + transitive). Lower count contributes to a higher score.\n- quality: Score factors relating to code quality (0-1)\n- qualityIssueLow/Mid/High/Critical: The number of code quality issues of varying severity. Lower numbers contribute to a higher score.\n- linesOfCode: The number of lines of code in the package. Lower count contributes to a higher score.\n- readmeLength: The length of the package's README file. Longer READMEs contribute to a higher score.\n- maintenance: Score factors relating to package maintenance (0-1)\n- maintainerCount: The number of maintainers for the package. More maintainers contribute to a higher score.\n- versionsLastWeek/Month/TwoMonths/Year: The number of versions released in different time periods. More recent releases contribute to a higher score.\n- versionCount: The total number of versions released. Higher count contributes to a higher score.\n- maintenanceIssueLow/Mid/High/Critical: The number of maintenance issues of varying severity. Lower numbers contribute to a higher score.\n- vulnerability: Score factors relating to package vulnerabilities (0-1)\n- vulnerabilityIssueLow/Mid/High/Critical: The number of vulnerability issues of varying severity. Lower numbers contribute to a higher score.\n- dependencyVulnerabilityCount: The number of vulnerabilities in the package's dependencies. Lower count contributes to a higher score.\n- vulnerabilityCount: The number of vulnerabilities in the package itself. Lower count contributes to a higher score.\n- license: Score factors relating to package licensing (0-1)\n- licenseIssueLow/Mid/High/Critical: The number of license issues of varying severity. Lower numbers contribute to a higher score.\n- licenseQuality: A score indicating the quality/permissiveness of the package's license. Higher quality contributes to a higher score.\n- miscellaneous: Miscellaneous metadata about the package version.\n- versionAuthorName/Email: The name and email of the version author.\n- fileCount: The number of files in the package.\n- byteCount: The total size in bytes of the package.\n- typeModule: Whether the package declares a \"type\": \"module\" field.\n\nThis endpoint consumes 1 unit of your quota.\n\nThis endpoint requires the following org token scopes:\n- No Scopes Required, but authentication is required",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SocketPackageScore"
                }
              }
            },
            "description": "Socket package scores"
          },
          "400": {
            "$ref": "#/components/responses/SocketBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/SocketUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/SocketForbidden"
          },
          "404": {
            "$ref": "#/components/responses/SocketNotFoundResponse"
          },
          "429": {
            "$ref": "#/components/responses/SocketTooManyRequestsResponse"
          }
        },
        "x-readme": {}
      }
    }
  }
}
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/purl': {
    /**
     * Get Packages by PURL
     * @description Batch retrieval of package metadata and alerts by PURL strings. Compatible witch CycloneDX reports.
     *
     * Package URLs (PURLs) are an ecosystem agnostic way to identify packages.
     * CycloneDX SBOMs use the purl format to identify components.
     * This endpoint supports fetching metadata and alerts for multiple packages at once by passing an array of purl strings, or by passing an entire CycloneDX report.
     *
     * More information on purl and CycloneDX:
     *
     * - [`purl` Spec](https://github.com/package-url/purl-spec)
     * - [CycloneDX Spec](https://cyclonedx.org/specification/overview/#components)
     *
     * This endpoint returns the latest available alert data for artifacts in the batch (stale while revalidate).
     * Actively running analysis will be returned when available on subsequent runs.
     *
     * ## Examples:
     *
     * ### Looking up an npm package:
     *
     * ```json
     * {
     *   "components": [
     *     {
     *       "purl": "pkg:npm/express@4.19.2"
     *     }
     *   ]
     * }
     * ```
     *
     * ### Looking up an PyPi package:
     *
     * ```json
     * {
     *   "components": [
     *     {
     *       "purl": "pkg:pypi/django@5.0.6"
     *     }
     *   ]
     * }
     * ```
     *
     * ### Looking up a Maven package:
     *
     * ```json
     * {
     *   "components": [
     *     {
     *       "purl": "pkg:maven/log4j/log4j@1.2.17"
     *     }
     *   ]
     * }
     * ```
     *
     * ### Batch lookup
     *
     * ```json
     * {
     *   "components": [
     *     {
     *       "purl": "pkg:npm/express@4.19.2"
     *     },
     *     {
     *       "purl": "pkg:pypi/django@5.0.6"
     *     },
     *     {
     *       "purl": "pkg:maven/log4j/log4j@1.2.17"
     *     }
     *   ]
     * }
     * ```
     *
     * This endpoint consumes 100 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - packages:list
     */
    post: operations['batchPackageFetch']
  }
  '/dependencies/search': {
    /**
     * Search dependencies
     * @description Search for any dependency that is being used in your organization.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - No Scopes Required, but authentication is required
     */
    post: operations['searchDependencies']
  }
  '/dependencies/upload': {
    /**
     * Create a snapshot of all dependencies from manifest information
     * @deprecated
     * @description **This endpoint is deprecated.**
     *
     * Upload a set of manifest or lockfiles to get your dependency tree analyzed by Socket.
     * You can upload multiple lockfiles in the same request, but each filename must be unique.
     *
     * The name of the file must be in the supported list.
     *
     * For example, these are valid filenames: "requirements.txt", "package.json", "folder/package.json", and "deep/nested/folder/package.json".
     *
     * This endpoint consumes 100 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - report:write
     */
    post: operations['createDependenciesSnapshot']
  }
  '/orgs/{org_slug}/full-scans': {
    /**
     * List full scans
     * @description Returns a paginated list of all full scans in an org, excluding SBOM artifacts.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - full-scans:list
     */
    get: operations['getOrgFullScanList']
    /**
     * Create full scan
     * @description Create a full scan from a set of package manifest files. Returns a full scan including all SBOM artifacts.
     *
     * To get a list of supported filetypes that can be uploaded in a full-scan, see the [Get supported file types](/reference/getsupportedfiles) endpoint.
     *
     * The maximum number of files you can upload at a time is 5000 and each file can be no bigger than 67 MB.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - full-scans:create
     */
    post: operations['CreateOrgFullScan']
  }
  '/orgs/{org_slug}/full-scans/{full_scan_id}': {
    /**
     * Stream full scan
     * @description Stream all SBOM artifacts for a full scan.
     *
     * This endpoint returns the latest, available alert data for artifacts in the full scan (stale while revalidate).
     * Actively running analysis will be returned when available on subsequent runs.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - full-scans:list
     */
    get: operations['getOrgFullScan']
    /**
     * Delete full scan
     * @description Delete an existing full scan.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - full-scans:delete
     */
    delete: operations['deleteOrgFullScan']
  }
  '/orgs/{org_slug}/full-scans/{full_scan_id}/metadata': {
    /**
     * Get full scan metadata
     * @description Get metadata for a single full scan
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - full-scans:list
     */
    get: operations['getOrgFullScanMetadata']
  }
  '/orgs/{org_slug}/full-scans/diff': {
    /**
     * Diff Full Scans
     * @deprecated
     * @description **This endpoint is deprecated.**
     *
     * Get the difference between two existing Full Scans. The results are not persisted.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - full-scans:list
     */
    get: operations['GetOrgDiffScan']
  }
  '/orgs/{org_slug}/full-scans/diff/gfm': {
    /**
     * SCM Comment for Scan Diff
     * @deprecated
     * @description **This endpoint is deprecated.**
     *
     * Get the dependency overview and dependency alert comments in GitHub flavored markdown between the diff between two existing full scans.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - full-scans:list
     */
    get: operations['GetOrgFullScanDiffGfm']
  }
  '/orgs/{org_slug}/export/cdx/{id}': {
    /**
     * Export CycloneDX SBOM (Beta)
     * @description Export a Socket SBOM as a CycloneDX SBOM
     *
     * Supported ecosystems:
     *
     * - crates
     * - go
     * - maven
     * - npm
     * - nuget
     * - pypi
     * - rubygems
     * - spdx
     * - cdx
     *
     * Unsupported ecosystems are filtered from the export.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - report:read
     */
    get: operations['exportCDX']
  }
  '/orgs/{org_slug}/export/spdx/{id}': {
    /**
     * Export SPDX SBOM (Beta)
     * @description Export a Socket SBOM as a SPDX SBOM
     *
     * Supported ecosystems:
     *
     * - crates
     * - go
     * - maven
     * - npm
     * - nuget
     * - pypi
     * - rubygems
     * - spdx
     * - cdx
     *
     * Unsupported ecosystems are filtered from the export.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - report:read
     */
    get: operations['exportSPDX']
  }
  '/orgs/{org_slug}/diff-scans': {
    /**
     * List diff scans
     * @description Returns a paginated list of all diff scans in an organization.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - diff-scans:list
     */
    get: operations['listOrgDiffScans']
  }
  '/orgs/{org_slug}/diff-scans/{diff_scan_id}': {
    /**
     * Get diff scan
     * @description Get the difference between two full scans from an existing diff scan resource.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - diff-scans:list
     */
    get: operations['getDiffScanById']
    /**
     * Delete diff scan
     * @description Delete an existing diff scan.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - diff-scans:delete
     */
    delete: operations['deleteOrgDiffScan']
  }
  '/orgs/{org_slug}/diff-scans/{diff_scan_id}/gfm': {
    /**
     * SCM Comment for Diff Scan
     * @description Get the dependency overview and dependency alert comments in GitHub flavored markdown for an existing diff scan.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - diff-scans:list
     */
    get: operations['GetDiffScanGfm']
  }
  '/orgs/{org_slug}/diff-scans/from-repo/{repo_slug}': {
    /**
     * Create diff scan from repository HEAD full-scan
     * @description Create a diff scan between the repository's current HEAD full scan and a new full scan from uploaded manifest files.
     * Returns metadata about the diff scan. Once the diff scan is created, fetch the diff scan from
     * the [api_url](/reference/getDiffScanById) URL to get the contents of the diff.
     *
     * The maximum number of files you can upload at a time is 5000 and each file can be no bigger than 67 MB.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     *       - repo:list
     * - diff-scans:create
     * - full-scans:create
     */
    post: operations['createOrgRepoDiff']
  }
  '/orgs/{org_slug}/diff-scans/from-ids': {
    /**
     * Create diff scan from full scan IDs
     * @description Create a diff scan from two existing full scan IDs. The full scans must be in the same repository.
     * Returns metadata about the diff scan. Once the diff scan is created, fetch the diff scan from
     * the [api_url](/reference/getDiffScanById) URL to get the contents of the diff.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     *       - diff-scans:create
     * - full-scans:list
     */
    post: operations['createOrgDiffScanFromIds']
  }
  '/orgs/{org_slug}/triage/alerts': {
    /**
     * List Org Alert Triage
     * @description Get alert triage actions for an organization.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - triage:alerts-list
     */
    get: operations['getOrgTriage']
    /**
     * Update Org Alert Triage
     * @description Update triage actions on organizaton alerts.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - triage:alerts-update
     */
    post: operations['updateOrgAlertTriage']
  }
  '/orgs/{org_slug}/repos': {
    /**
     * List repositories
     * @description Lists repositories for the specified organization.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo:list
     */
    get: operations['getOrgRepoList']
    /**
     * Create repository
     * @description Create a repository.
     *
     * Repos collect Full scans and Diff scans and are typically associated with a git repo.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo:create
     */
    post: operations['createOrgRepo']
  }
  '/orgs/{org_slug}/repos/{repo_slug}': {
    /**
     * Get repository
     * @description Retrieve a repository associated with an organization.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo:list
     */
    get: operations['getOrgRepo']
    /**
     * Update repository
     * @description Update details of an existing repository.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo:update
     */
    post: operations['updateOrgRepo']
    /**
     * Delete repository
     * @description Delete a single repository and all of its associated Full scans and Diff scans.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo:delete
     */
    delete: operations['deleteOrgRepo']
  }
  '/orgs/{org_slug}/repos/labels/{label_id}/associate': {
    /**
     * Associate repository label (beta)
     * @description Associate a repository label with a repository.
     *
     * Labels can be used to group and organize repositories and to apply security/license policies.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo-label:update
     */
    post: operations['associateOrgRepoLabel']
  }
  '/orgs/{org_slug}/repos/labels': {
    /**
     * List repository labels (beta)
     * @description Lists repository labels for the specified organization.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo-label:list
     */
    get: operations['getOrgRepoLabelList']
    /**
     * Create repository label (beta)
     * @description Create a repository label.
     *
     * Labels can be used to group and organize repositories and to apply security/license policies.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo-label:create
     */
    post: operations['createOrgRepoLabel']
  }
  '/orgs/{org_slug}/repos/labels/{label_id}': {
    /**
     * Get repository label (beta)
     * @description Retrieve a repository label associated with an organization and label ID.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo-label:list
     */
    get: operations['getOrgRepoLabel']
    /**
     * Update repository label (beta)
     * @description Update a repository label name.
     *
     * Labels can be used to group and organize repositories and to apply security/license policies.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo-label:update
     */
    put: operations['updateOrgRepoLabel']
    /**
     * Delete repository label (beta)
     * @description Delete a repository label and all of its associations (repositories, security policy, license policy, etc.).
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo-label:delete
     */
    delete: operations['deleteOrgRepoLabel']
  }
  '/orgs/{org_slug}/repos/labels/{label_id}/label-setting': {
    /**
     * Get repository label setting (beta)
     * @description Retrieve the setting (e.g. security/license policy) for a repository label.
     *
     *
     * Note that repository label settings currently only support `issueRules`
     * and `issueRulesPolicyDefault`. A policy is considered "active" for
     * a given repository label if the `issueRulesPolicyDefault` is set,
     * and inactive when not set. `issueRules` can be used to further
     * refine the alert triage strategy.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo-label:list
     */
    get: operations['getOrgRepoLabelSetting']
    /**
     * Update repository label setting (beta)
     * @description Update the setting (e.g. security/license policy) for a repository label.
     *
     *
     * Note that repository label settings currently only support `issueRules`
     * and `issueRulesPolicyDefault`. A policy is considered "active" for
     * a given repository label if the `issueRulesPolicyDefault` is set,
     * and inactive when not set. `issueRules` can be used to further
     * refine the alert triage strategy.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo-label:update
     */
    put: operations['updateOrgRepoLabelSetting']
    /**
     * Delete repository label setting (beta)
     * @description Delete the setting (e.g. security/license policy) for a repository label.
     *
     *
     * Note that repository label settings currently only support `issueRules`
     * and `issueRulesPolicyDefault`. A policy is considered "active" for
     * a given repository label if the `issueRulesPolicyDefault` is set,
     * and inactive when not set. `issueRules` can be used to further
     * refine the alert triage strategy.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo-label:update
     */
    delete: operations['deleteOrgRepoLabelSetting']
  }
  '/orgs/{org_slug}/repos/labels/{label_id}/disassociate': {
    /**
     * Disassociate repository label (beta)
     * @description Disassociate a repository label from a repository.
     *
     * Labels can be used to group and organize repositories and to apply security/license policies.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo-label:update
     */
    post: operations['disassociateOrgRepoLabel']
  }
  '/orgs/{org_slug}/settings/integrations/{integration_id}/events': {
    /**
     * Get integration events
     * @description This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - integration:list
     */
    get: operations['getIntegrationEvents']
  }
  '/orgs/{org_slug}/settings/security-policy': {
    /**
     * Get Organization Security Policy
     * @description Retrieve the security policy of an organization.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - security-policy:read
     */
    get: operations['getOrgSecurityPolicy']
    /**
     * Update Security Policy
     * @description Update the security policy of an organization.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - security-policy:update
     */
    post: operations['updateOrgSecurityPolicy']
  }
  '/orgs/{org_slug}/settings/license-policy': {
    /**
     * Get Organization License Policy
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/viewlicensepolicy) instead.
     *
     * Retrieve the license policy of an organization.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - license-policy:read
     */
    get: operations['getOrgLicensePolicy']
    /**
     * Update License Policy
     * @description Set the organization's license policy
     *
     *       ## License policy schema
     *
     * ```json
     * {
     *   allow?: Array<string>
     *   warn?: Array<string>
     *   options?: Array<string>
     * }
     * ```
     *
     * Elements of the `allow` and `warn` arrays strings representing items which should be allowed, or which should trigger a warning; license data found in package which not present in either array will produce a license violation (effectively a "hard" error). For example, to allow Apache-2.0 and MIT to the allow list, simply add the strings "Apache-2.0" and "MIT" to the `allow` array. Strings appearing in these arrays are generally "what you see is what you get", with two important exceptions: strings which are recognized as license classes and strings which are recognized as PURLs are handled differently to allow for more flexible license policy creation.
     *
     * ## License Classes
     *
     * Strings which are license classes will expand to a list of licenses known to be in that particular license class. Recognized license classes are:
     *   'permissive',
     *   'permissive (model)',
     *   'permissive (gold)',
     *   'permissive (silver)',
     *   'permissive (bronze)',
     *   'permissive (lead)',
     *   'copyleft',
     *   'maximal copyleft',
     *   'network copyleft',
     *   'strong copyleft',
     *   'weak copyleft',
     *   'contributor license agreement',
     *   'public domain',
     *   'proprietary free',
     *   'source available',
     *   'proprietary',
     *   'commercial',
     *   'patent'
     *
     * Users can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.
     *
     *
     * ## PURLs
     *
     * Users may also modify their license policy's allow and warn lists by using [package URLs](https://github.com/package-url/purl-spec) (aka PURLs), which support glob patterns to allow a range of versions, files and directories, etc.
     *
     * purl qualifiers which support globs are `filename`, `version_glob`, `artifact_id` and `license_provenance` (primarily used for allowing data from registry metadata).
     *
     * ### Examples:
     * Allow all license data found in a specific version of a package 4.14.1: `pkg:npm/lodash@4.14.1`
     * Allow all license data found in a version range of a package: `pkg:npm/lodash?version_glob=15.*`
     * Allow all license data in the test directory of a given package for certain version ranges: `pkg:npm/lodash@15.*.*?file_name=lodash/test/*`
     * Allow all license data taken from the package registry for a package and version range: `pkg:npm/lodash?version_glob=*&license_provenance=registry_metadata`
     *
     * ## Available options
     *
     * `toplevelOnly`: only apply the license policy to "top level" license data in a package, which includes registry metadata, LICENSE files, and manifest files which are closest to the root of the package.
     *
     * `applyToUnidentified`: Apply license policy to found but unidentified license data. If enabled, the license policy will be applied to license data which could not be affirmatively identified as a known license (this will effectively merge the license policy violation and unidentified license alerts). If disabled, license policy alerts will only be shown for license data which is positively identified as something not allowed or set to warn by the license policy.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - license-policy:update
     */
    post: operations['updateOrgLicensePolicy']
  }
  '/orgs/{org_slug}/settings/license-policy/view': {
    /**
     * Get License Policy (Beta)
     * @description Returns an organization's license policy
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - license-policy:read
     */
    get: operations['viewLicensePolicy']
  }
  '/orgs/{org_slug}/settings/socket-basics': {
    /**
     * Get Socket Basics configuration, including toggles for the various tools it supports.
     * @description Socket Basics is a CI/CD security scanning suite that runs on your source code, designed to complement Socket SCA and provide full coverage.
     *
     * - **SAST** - Find issues and risks with your code via static analysis using best in class Open Source tools
     * - **Secret Scanning** - Detected potentially leaked secrets and credentials within your code
     * - **Container Security** - Docker image and Dockerfile vulnerability scanning
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - socket-basics:read
     */
    get: operations['getSocketBasicsConfig']
  }
  '/orgs/{org_slug}/historical/alerts': {
    /**
     * List historical alerts (Beta)
     * @description List historical alerts.
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - historical:alerts-list
     */
    get: operations['historicalAlertsList']
  }
  '/orgs/{org_slug}/historical/alerts/trend': {
    /**
     * Trend of historical alerts (Beta)
     * @description Trend analytics of historical alerts.
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - historical:alerts-trend
     */
    get: operations['historicalAlertsTrend']
  }
  '/orgs/{org_slug}/historical/dependencies/trend': {
    /**
     * Trend of historical dependencies (Beta)
     * @description Trend analytics of historical dependencies.
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - historical:dependencies-trend
     */
    get: operations['historicalDependenciesTrend']
  }
  '/orgs/{org_slug}/historical/snapshots': {
    /**
     * List details of periodic historical data snapshots (Beta)
     * @description This API endpoint is used to list the details of historical snapshots.
     * Snapshots of organization data are taken periodically, and each historical snapshot record contains high-level overview metrics about the data that was collected.
     * Other [Historical Data Endpoints](/reference/historical-data-endpoints) can be used to fetch the raw data associated with each snapshot.
     *
     * Historical snapshots contain details and raw data for the following resources:
     *
     * - Repositories
     * - Alerts
     * - Dependencies
     * - Artifacts
     * - Users
     * - Settings
     *
     * Daily snapshot data is bucketed to the nearest day which is described in more detail at: [Historical Data Endpoints](/reference/historical-data-endpoints)
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - historical:snapshots-list
     */
    get: operations['historicalSnapshotsList']
    /**
     * Start historical data snapshot job (Beta)
     * @description This API endpoint is used to start a historical snapshot job.
     * While snapshots are typically taken at least once a day, this endpoint can be used to start an "on demand" snapshot job to ensure the latest data is collected and stored for historical purposes.
     *
     * An historical snapshot will contain details and raw data for the following resources:
     *
     * - Repositories
     * - Alerts
     * - Dependencies
     * - Artifacts
     * - Users
     * - Settings
     *
     * Historical snapshot data is bucketed to the nearest day which is described in more detail at: [Historical Data Endpoints](/reference/historical-data-endpoints)
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - historical:snapshots-start
     */
    post: operations['historicalSnapshotsStart']
  }
  '/orgs/{org_slug}/audit-log': {
    /**
     * Get Audit Log Events
     * @description Paginated list of audit log events.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - audit-log:list
     */
    get: operations['getAuditLogEvents']
  }
  '/orgs/{org_slug}/api-tokens': {
    /**
     * List API Tokens
     * @description List all API Tokens.
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - api-tokens:list
     */
    get: operations['getAPITokens']
    /**
     * Create API Token
     * @description Create an API Token. The API Token created must use a subset of permissions the API token creating them.
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - api-tokens:create
     */
    post: operations['postAPIToken']
  }
  '/orgs/{org_slug}/api-tokens/update': {
    /**
     * Update API Token
     * @description Update an API Token. The API Token created must use a subset of permissions the API token creating them.
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - api-tokens:create
     */
    post: operations['postAPITokenUpdate']
  }
  '/orgs/{org_slug}/api-tokens/rotate': {
    /**
     * Rotate API Token
     * @description Rotate an API Token
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - api-tokens:rotate
     */
    post: operations['postAPITokensRotate']
  }
  '/orgs/{org_slug}/api-tokens/revoke': {
    /**
     * Revoke API Token
     * @description Revoke an API Token
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - api-tokens:revoke
     */
    post: operations['postAPITokensRevoke']
  }
  '/orgs/{org_slug}/supported-files': {
    /**
     * Get supported file types
     * @description Get a list of supported files for full scan generation.
     * Files are categorized first by environment (e.g. NPM or PyPI), then by name.
     *
     * Files whose names match the patterns returned by this endpoint can be uploaded for report generation.
     * Examples of supported filenames include `package.json`, `package-lock.json`, and `yarn.lock`.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - No Scopes Required, but authentication is required
     */
    get: operations['getSupportedFiles']
  }
  '/threat-feed': {
    /**
     * Get Threat Feed Items (Deprecated)
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/getorgthreatfeeditems) instead.
     *
     * Paginated list of threat feed items.
     *
     * This endpoint requires an Enterprise Plan with Threat Feed add-on. [Contact](https://socket.dev/demo?utm_source=api-docs&utm_medium=referral&utm_campaign=tracking) our sales team for more details.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - threat-feed:list
     */
    get: operations['getThreatFeedItems']
  }
  '/orgs/{org_slug}/threat-feed': {
    /**
     * Get Threat Feed Items (Beta)
     * @description Paginated list of threats, sorted by updated_at by default. Set updated_after to the unix timestamp of your last sync while sorting by updated_at to synchronize all new or updated threats in the feed.
     *
     * This endpoint requires an Enterprise Plan with Threat Feed add-on. [Contact](https://socket.dev/demo?utm_source=api-docs&utm_medium=referral&utm_campaign=tracking) our sales team for more details.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - threat-feed:list
     */
    get: operations['getOrgThreatFeedItems']
  }
  '/license-policy': {
    /**
     * License Policy (Beta)
     * @description Compare the license data found for a list of packages (given as PURL strings) with the contents of a configurable license policy,
     *     returning information about license data which does not comply with the license allow list.
     *
     *     ## Example request body:
     *
     *     ```json
     *     {
     *       "components": [
     *         {
     *           "purl": "pkg:npm/lodash@4.17.21"
     *         },
     *         {
     *           "purl": "pkg:npm/lodash@4.14.1"
     *         }
     *       ],
     *       "allow": [
     *         "permissive",
     *         "pkg:npm/lodash?file_name=foo/test/*&version_glob=4.17.*"
     *       ],
     *       "warn": [
     *         "copyleft",
     *         "pkg:npm/lodash?file_name=foo/prod/*&version_glob=4.14.*"
     *       ],
     *       "options": ["toplevelOnly"]
     *     }
     *     ```
     *
     *
     *     ## Return value
     *
     *     For each requested PURL, an array is returned. Each array contains a list of license policy violations
     *     detected for the requested PURL.
     *
     *     Violations are accompanied by a string identifying the offending license data as `spdxAtomOrExtraData`,
     *     a message describing why the license data is believed to be incompatible with the license policy, and a list
     *     of locations (by filepath or other provenance information) where the offending license data may be found.
     *
     *     ```json
     *     Array<
     *       Array<{
     *         filepathOrProvenance: Array<string>,
     *         level: "warning" | "violation",
     *         purl: string,
     *         spdxAtomOrExtraData: string,
     *         violationExplanation: string
     *       }>
     *     >
     *     ```
     *
     *     ## License policy schema
     *
     * ```json
     * {
     *   allow?: Array<string>
     *   warn?: Array<string>
     *   options?: Array<string>
     * }
     * ```
     *
     * Elements of the `allow` and `warn` arrays strings representing items which should be allowed, or which should trigger a warning; license data found in package which not present in either array will produce a license violation (effectively a "hard" error). For example, to allow Apache-2.0 and MIT to the allow list, simply add the strings "Apache-2.0" and "MIT" to the `allow` array. Strings appearing in these arrays are generally "what you see is what you get", with two important exceptions: strings which are recognized as license classes and strings which are recognized as PURLs are handled differently to allow for more flexible license policy creation.
     *
     * ## License Classes
     *
     * Strings which are license classes will expand to a list of licenses known to be in that particular license class. Recognized license classes are:
     *   'permissive',
     *   'permissive (model)',
     *   'permissive (gold)',
     *   'permissive (silver)',
     *   'permissive (bronze)',
     *   'permissive (lead)',
     *   'copyleft',
     *   'maximal copyleft',
     *   'network copyleft',
     *   'strong copyleft',
     *   'weak copyleft',
     *   'contributor license agreement',
     *   'public domain',
     *   'proprietary free',
     *   'source available',
     *   'proprietary',
     *   'commercial',
     *   'patent'
     *
     * Users can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.
     *
     *
     * ## PURLs
     *
     * Users may also modify their license policy's allow and warn lists by using [package URLs](https://github.com/package-url/purl-spec) (aka PURLs), which support glob patterns to allow a range of versions, files and directories, etc.
     *
     * purl qualifiers which support globs are `filename`, `version_glob`, `artifact_id` and `license_provenance` (primarily used for allowing data from registry metadata).
     *
     * ### Examples:
     * Allow all license data found in a specific version of a package 4.14.1: `pkg:npm/lodash@4.14.1`
     * Allow all license data found in a version range of a package: `pkg:npm/lodash?version_glob=15.*`
     * Allow all license data in the test directory of a given package for certain version ranges: `pkg:npm/lodash@15.*.*?file_name=lodash/test/*`
     * Allow all license data taken from the package registry for a package and version range: `pkg:npm/lodash?version_glob=*&license_provenance=registry_metadata`
     *
     * ## Available options
     *
     * `toplevelOnly`: only apply the license policy to "top level" license data in a package, which includes registry metadata, LICENSE files, and manifest files which are closest to the root of the package.
     *
     * `applyToUnidentified`: Apply license policy to found but unidentified license data. If enabled, the license policy will be applied to license data which could not be affirmatively identified as a known license (this will effectively merge the license policy violation and unidentified license alerts). If disabled, license policy alerts will only be shown for license data which is positively identified as something not allowed or set to warn by the license policy.
     *
     * This endpoint consumes 100 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     *       - packages:list
     * - license-policy:read
     */
    post: operations['licensePolicy']
  }
  '/saturate-license-policy': {
    /**
     * Saturate License Policy (Legacy)
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/updateorglicensepolicy) instead.
     *
     * Get the "saturated" version of a license policy's allow list, filling in the entire set of allowed
     * license data. For example, the saturated form of a license allow list which only specifies that
     * licenses in the tier "maximal copyleft" are allowed is shown below (note the expanded `allowedStrings` property):
     *
     * ```json
     * {
     *   "allowedApprovalSources": [],
     *   "allowedFamilies": [],
     *   "allowedTiers": [
     *     "maximal copyleft"
     *   ],
     *   "allowedStrings": [
     *     "Parity-6.0.0",
     *     "QPL-1.0-INRIA-2004",
     *     "QPL-1.0",
     *     "RPL-1.1",
     *     "RPL-1.5"
     *   ],
     *   "allowedPURLs": [],
     *   "focusAlertsHere": false
     * }
     * ```
     *
     * This may be helpful for users who want to compose more complex sets of allowed license data via
     * the "allowedStrings" property, or for users who want to know more about the contents of a particular
     * license group (family, tier, or approval source).
     *
     * ## Allow List Schema
     *
     * ```json
     * ```
     *
     * where
     *
     * PermissiveTier ::= "model permissive" | "gold" | "silver" | "bronze" | "lead"
     * CopyleftTier ::= "maximal copyleft" | "network copyleft" | "strong copyleft" | "weak copyleft"
     *
     * ## Return Value
     *
     * The returned value has the same shape as a license allow list:
     *
     * ```json
     * {
     *   allowedApprovalSources?: Array<"fsf" | "osi">,
     *   allowedFamilies?: Array<"copyleft" | "permissive">,
     *   allowedTiers?: Array<PermissiveTier | CopyleftTier>,
     *   allowedStrings?: Array<string>
     *   allowedPURLs?: Array<string>
     *   focusAlertsHere?: boolean
     * }
     * ```
     *
     * where
     *
     * PermissiveTier ::= "model permissive" | "gold" | "silver" | "bronze" | "lead"
     * CopyleftTier ::= "maximal copyleft" | "network copyleft" | "strong copyleft" | "weak copyleft"
     *
     * readers can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.
     *
     * ### Example request bodies:
     * ```json
     * {
     *   "allowedApprovalSources": ["fsf"],
     *   "allowedPURLs": [],
     *   "allowedFamilies": ["copyleft"],
     *   "allowedTiers": ["model permissive"],
     *   "allowedStrings": ["License :: OSI Approved :: BSD License"],
     *   "focusAlertsHere": false
     * }
     * ```
     *
     * This endpoint consumes 100 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - packages:list
     */
    post: operations['saturateLicensePolicy']
  }
  '/license-metadata': {
    /**
     * License Metadata
     * @description For an array of license identifiers or names (short form SPDX identifiers, or long form license names),
     *     returns an array of metadata for the corresponding license, if the license is recognized. If the query
     *     parameter `includetext=true` is set, the returned metadata will also include the license text.
     *
     *
     *     ## Example request body:
     *
     *     ```json
     *     [
     *       "Apache-2.0",
     *       "BSD Zero Clause License"
     *     ]
     *     ```
     *
     *
     *     ## Return value
     *
     *     ```json
     *     // Response schema:
     *     Array<{
     *       licenseId: string,
     *       name?: string,
     *       deprecated?: string,
     *       crossref?: string
     *       classes: Array<string>
     *       text?: string
     *     }>
     *
     *     // Example response:
     *     [
     *       {
     *         "licenseId": "Apache-2.0",
     *         "name": "Apache License 2.0",
     *         "deprecated": false,
     *         "crossref": "https://spdx.org/licenses/Apache-2.0.html",
     *         "classes": [
     *           "fsf libre",
     *           "osi approved",
     *           "permissive (silver)"
     *         ]
     *       },
     *       {
     *         "licenseId": "0BSD",
     *         "name": "BSD Zero Clause License",
     *         "deprecated": false,
     *         "crossref": "https://spdx.org/licenses/0BSD.html",
     *         "classes": [
     *           "osi approved",
     *           "permissive (bronze)"
     *         ]
     *       }
     *     ]
     *     ```
     *
     *     ## License policy schema
     *
     * ```json
     * {
     *   allow?: Array<string>
     *   warn?: Array<string>
     *   options?: Array<string>
     * }
     * ```
     *
     * Elements of the `allow` and `warn` arrays strings representing items which should be allowed, or which should trigger a warning; license data found in package which not present in either array will produce a license violation (effectively a "hard" error). For example, to allow Apache-2.0 and MIT to the allow list, simply add the strings "Apache-2.0" and "MIT" to the `allow` array. Strings appearing in these arrays are generally "what you see is what you get", with two important exceptions: strings which are recognized as license classes and strings which are recognized as PURLs are handled differently to allow for more flexible license policy creation.
     *
     * ## License Classes
     *
     * Strings which are license classes will expand to a list of licenses known to be in that particular license class. Recognized license classes are:
     *   'permissive',
     *   'permissive (model)',
     *   'permissive (gold)',
     *   'permissive (silver)',
     *   'permissive (bronze)',
     *   'permissive (lead)',
     *   'copyleft',
     *   'maximal copyleft',
     *   'network copyleft',
     *   'strong copyleft',
     *   'weak copyleft',
     *   'contributor license agreement',
     *   'public domain',
     *   'proprietary free',
     *   'source available',
     *   'proprietary',
     *   'commercial',
     *   'patent'
     *
     * Users can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.
     *
     *
     * ## PURLs
     *
     * Users may also modify their license policy's allow and warn lists by using [package URLs](https://github.com/package-url/purl-spec) (aka PURLs), which support glob patterns to allow a range of versions, files and directories, etc.
     *
     * purl qualifiers which support globs are `filename`, `version_glob`, `artifact_id` and `license_provenance` (primarily used for allowing data from registry metadata).
     *
     * ### Examples:
     * Allow all license data found in a specific version of a package 4.14.1: `pkg:npm/lodash@4.14.1`
     * Allow all license data found in a version range of a package: `pkg:npm/lodash?version_glob=15.*`
     * Allow all license data in the test directory of a given package for certain version ranges: `pkg:npm/lodash@15.*.*?file_name=lodash/test/*`
     * Allow all license data taken from the package registry for a package and version range: `pkg:npm/lodash?version_glob=*&license_provenance=registry_metadata`
     *
     * ## Available options
     *
     * `toplevelOnly`: only apply the license policy to "top level" license data in a package, which includes registry metadata, LICENSE files, and manifest files which are closest to the root of the package.
     *
     * `applyToUnidentified`: Apply license policy to found but unidentified license data. If enabled, the license policy will be applied to license data which could not be affirmatively identified as a known license (this will effectively merge the license policy violation and unidentified license alerts). If disabled, license policy alerts will only be shown for license data which is positively identified as something not allowed or set to warn by the license policy.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     */
    post: operations['licenseMetadata']
  }
  '/alert-types': {
    /**
     * Alert Types Metadata
     * @description For an array of alert type identifiers, returns metadata for each alert type. Optionally, specify a language via the 'language' query parameter.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     */
    post: operations['alertTypes']
  }
  '/openapi': {
    /**
     * Returns the OpenAPI definition
     * @description Retrieve the API specification in an Openapi JSON format.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     */
    get: operations['getOpenAPI']
  }
  '/openapi.json': {
    /**
     * Returns the OpenAPI definition
     * @description Retrieve the API specification in an Openapi JSON format.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     */
    get: operations['getOpenAPIJSON']
  }
  '/quota': {
    /**
     * Get quota
     * @description Get your current API quota. You can use this endpoint to prevent doing requests that might spend all your quota.
     *
     * This endpoint consumes 0 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - No Scopes Required, but authentication is required
     */
    get: operations['getQuota']
  }
  '/organizations': {
    /**
     * List organizations
     * @description Get information on the current organizations associated with the API token.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - No Scopes Required, but authentication is required
     */
    get: operations['getOrganizations']
  }
  '/settings': {
    /**
     * Calculate settings
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/updateorgsecuritypolicy) instead.
     *
     * Get current settings for the requested organizations and default settings to allow deferrals.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - No Scopes Required, but authentication is required
     */
    post: operations['postSettings']
  }
  '/report/supported': {
    /**
     * Get supported files for report
     * @deprecated
     * @description **This endpoint is deprecated.** Deprecated since 2023-01-15. Use the [successor version](https://docs.socket.dev/reference/getsupportedfiles) instead.
     *
     * This route has been moved to the `orgs/{org_slug}/supported-files` endpoint.
     *
     * Get a list of supported files for project report generation.
     * Files are categorized first by environment (e.g. NPM or PyPI), then by name.
     *
     * Files whose names match the patterns returned by this endpoint can be uploaded for report generation.
     * Examples of supported filenames include `package.json`, `package-lock.json`, and `yarn.lock`.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     */
    get: operations['getReportSupportedFiles']
  }
  '/report/delete/{id}': {
    /**
     * Delete a report
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference) instead.
     *
     * Deprecated: Use `/orgs/{org_slug}/full-scans` instead. Delete a specific project report generated with the GitHub app.
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - report:write
     */
    delete: operations['deleteReport']
  }
  '/report/list': {
    /**
     * Get list of reports
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference) instead.
     *
     * Deprecated: Use `/orgs/{org_slug}/full-scans` instead. Get all your project reports generated with the GitHub app.
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - report:list
     */
    get: operations['getReportList']
  }
  '/report/upload': {
    /**
     * Create a report
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/createorgfullscan) instead.
     *
     * Deprecated: Use `/orgs/{org_slug}/full-scans` instead.
     *
     * Upload a lockfile to get your project analyzed by Socket.
     * You can upload multiple lockfiles in the same request, but each filename must be unique.
     *
     * The name of the file must be in the supported list.
     *
     * For example, these are valid filenames: `package.json`, `folder/package.json` and `deep/nested/folder/package.json`.
     *
     * This endpoint consumes 100 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - report:write
     */
    put: operations['createReport']
  }
  '/report/view/{id}': {
    /**
     * View a report
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/getorgfullscan) instead.
     *
     * Deprecated: Use `/orgs/{org_slug}/full-scans` instead. Get all the issues, packages, and scores related to an specific project report.
     *
     * This endpoint consumes 10 units of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - report:read
     */
    get: operations['getReport']
  }
  '/repo/list': {
    /**
     * List GitHub repositories
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/getorgrepolist) instead.
     *
     * Deprecated: Use `/orgs/{org_slug}/repos` instead. Get all GitHub repositories associated with a Socket org.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - repo:list
     */
    get: operations['getRepoList']
  }
  '/npm/{package}/{version}/issues': {
    /**
     * Get issues by package
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference) instead.
     *
     * Get all the issues related with a particular npm package version.
     * This endpoint returns the issue type, location, and additional details related to each issue in the `props` attribute.
     *
     * You can [see here](https://socket.dev/alerts) the full list of issues.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - No Scopes Required, but authentication is required
     */
    get: operations['getIssuesByNPMPackage']
  }
  '/npm/{package}/{version}/score': {
    /**
     * Get score by package
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/batchpackagefetch) instead.
     *
     * Get all the scores and metrics by category that are used to evaluate the package version.
     *
     * - depscore: The average of all score factors. (0-1)
     * - supplyChainRisk: Score factors relating to supply chain security (0-1)
     * - downloadCount: The number of downloads for the package. Higher downloads contribute to a higher score.
     * - supplyChainRiskIssueLow/Mid/High/Critical: The number of supply chain risk issues of varying severity. Lower numbers contribute to a higher score.
     * - dependencyCount: The number of production dependencies. Lower count contributes to a higher score.
     * - devDependencyCount: The number of development dependencies. Lower count contributes to a higher score.
     * - transitiveDependencyCount: The number of transitive dependencies. Lower count contributes to a higher score.
     * - totalDependencyCount: The total number of dependencies (production + development + transitive). Lower count contributes to a higher score.
     * - quality: Score factors relating to code quality (0-1)
     * - qualityIssueLow/Mid/High/Critical: The number of code quality issues of varying severity. Lower numbers contribute to a higher score.
     * - linesOfCode: The number of lines of code in the package. Lower count contributes to a higher score.
     * - readmeLength: The length of the package's README file. Longer READMEs contribute to a higher score.
     * - maintenance: Score factors relating to package maintenance (0-1)
     * - maintainerCount: The number of maintainers for the package. More maintainers contribute to a higher score.
     * - versionsLastWeek/Month/TwoMonths/Year: The number of versions released in different time periods. More recent releases contribute to a higher score.
     * - versionCount: The total number of versions released. Higher count contributes to a higher score.
     * - maintenanceIssueLow/Mid/High/Critical: The number of maintenance issues of varying severity. Lower numbers contribute to a higher score.
     * - vulnerability: Score factors relating to package vulnerabilities (0-1)
     * - vulnerabilityIssueLow/Mid/High/Critical: The number of vulnerability issues of varying severity. Lower numbers contribute to a higher score.
     * - dependencyVulnerabilityCount: The number of vulnerabilities in the package's dependencies. Lower count contributes to a higher score.
     * - vulnerabilityCount: The number of vulnerabilities in the package itself. Lower count contributes to a higher score.
     * - license: Score factors relating to package licensing (0-1)
     * - licenseIssueLow/Mid/High/Critical: The number of license issues of varying severity. Lower numbers contribute to a higher score.
     * - licenseQuality: A score indicating the quality/permissiveness of the package's license. Higher quality contributes to a higher score.
     * - miscellaneous: Miscellaneous metadata about the package version.
     * - versionAuthorName/Email: The name and email of the version author.
     * - fileCount: The number of files in the package.
     * - byteCount: The total size in bytes of the package.
     * - typeModule: Whether the package declares a "type": "module" field.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - No Scopes Required, but authentication is required
     */
    get: operations['getScoreByNPMPackage']
  }
  '/analytics/org/{filter}': {
    /**
     * Get organization analytics (unstable)
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/historicalalertstrend) instead.
     *
     * Please implement against the [Historical dependencies](/reference/historicaldependenciestrend) or [Historical alerts](/reference/historicalalertstrend) endpoints.
     *
     * Get analytics data regarding the number of alerts found across all active repositories.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - report:write
     */
    get: operations['getOrgAnalytics']
  }
  '/analytics/repo/{name}/{filter}': {
    /**
     * Get repository analytics
     * @deprecated
     * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/historicalalertstrend) instead.
     *
     * Please implement against the [Historical dependencies](/reference/historicaldependenciestrend) or [Historical alerts](/reference/historicalalertstrend) endpoints.
     *
     * Get analytics data regarding the number of alerts found in a single repository.
     *
     * This endpoint consumes 1 unit of your quota.
     *
     * This endpoint requires the following org token scopes:
     * - report:write
     */
    get: operations['getRepoAnalytics']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    BatchPurlStreamSchema:
      | components['schemas']['SocketArtifact']
      | {
          /** @enum {string} */
          _type: 'purlError'
          value: components['schemas']['PurlErrorSchema']
        }
    SocketBatchPURLFetch: {
      components: Array<components['schemas']['SocketBatchPURLRequest']>
    }
    SocketArtifact: components['schemas']['SocketPURL'] &
      components['schemas']['SocketArtifactLink'] & {
        id?: components['schemas']['SocketId'] | undefined
        /** @description List of package authors or maintainers */
        author?: string[] | undefined
        /**
         * @description Total size of the package artifact in bytes
         * @default 0
         */
        size?: number | undefined
        /**
         * @description Hugging Face model, dataset, or space type
         * @default
         */
        repositoryType?: string | undefined
        alerts?: Array<components['schemas']['SocketAlert']> | undefined
        score?: components['schemas']['SocketScore'] | undefined
        patch?: components['schemas']['SocketArtifactPatch'] | undefined
        /**
         * @description Original unmodified PURL input string before normalization
         * @default
         */
        inputPurl?: string | undefined
        /**
         * @description Deprecated: Always 0. Previously used for batch ordering but replaced by inputPurl for better tracking.
         * @default 0
         */
        batchIndex?: number | undefined
        /** @default */
        license?: string | undefined
        licenseDetails?: components['schemas']['LicenseDetails'] | undefined
        licenseAttrib?: components['schemas']['SAttrib1_N'] | undefined
      }
    SocketDiffArtifact: components['schemas']['SocketPURL'] & {
      diffType: components['schemas']['SocketDiffArtifactType']
      id?: components['schemas']['SocketId'] | undefined
      /** @description List of package authors or maintainers */
      author?: string[] | undefined
      /** @description Artifact links from the base/before state */
      base?: Array<components['schemas']['SocketArtifactLink']> | undefined
      capabilities?: components['schemas']['Capabilities'] | undefined
      /** @description Artifact links from the head/after state */
      head?: Array<components['schemas']['SocketArtifactLink']> | undefined
      qualifiers?: components['schemas']['Qualifiers'] | undefined
      /**
       * @description Total size of the package artifact in bytes
       * @default 0
       */
      size?: number | undefined
      /** @default */
      license?: string | undefined
      licenseDetails?: components['schemas']['LicenseDetails'] | undefined
      licenseAttrib?: components['schemas']['SAttrib1_N'] | undefined
      score?: components['schemas']['SocketScore'] | undefined
      alerts?: Array<components['schemas']['SocketAlert']> | undefined
    }
    CDXManifestSchema: {
      /** @default CycloneDX */
      bomFormat: string
      /** @default 1.5 */
      specVersion: string
      /** @default */
      serialNumber: string
      /** @default 0 */
      version: number
      metadata: {
        /** @default */
        timestamp: string
        tools: {
          components: Array<
            components['schemas']['CDXComponentSchema'] & {
              /** @default Socket */
              author?: string | undefined
              authors?: string[] | undefined
              /** @default Socket */
              publisher?: string | undefined
            }
          >
        }
        authors: Array<{
          /** @default Socket */
          name: string
        }>
        /** @default */
        supplier?: string | undefined
        lifecycles: Array<{
          /** @default build */
          phase: string
        }>
        component: components['schemas']['CDXComponentSchema']
        properties?: Array<{
          /** @default */
          name: string
          /** @default */
          value: string
        }>
      }
      components: Array<components['schemas']['CDXComponentSchema']>
      dependencies: Array<{
        /** @default */
        ref: string
        dependsOn?: string[] | undefined
      }>
      vulnerabilities?: Array<{
        /** @default */
        ref: string
        /** @default */
        id: string
        source?: {
          /** @default */
          name?: string | undefined
          /** @default */
          url?: string | undefined
        }
        ratings?: Array<{
          source?: {
            /** @default */
            name?: string | undefined
            /** @default */
            url?: string | undefined
          }
          /** @default 0 */
          score?: number | undefined
          /** @default */
          severity?: string | undefined
          /** @default */
          method?: string | undefined
          /** @default */
          vector?: string | undefined
        }>
        cwes?: number[] | undefined
        /** @default */
        description?: string | undefined
        /** @default */
        detail?: string | undefined
        /** @default */
        recommendation?: string | undefined
        advisories?: Array<{
          /** @default */
          url: string
          /** @default */
          title?: string | undefined
        }>
        /** @default */
        created?: string | undefined
        /** @default */
        published?: string | undefined
        /** @default */
        updated?: string | undefined
        affects?: Array<{
          /** @default */
          ref: string
          versions?: Array<{
            /** @default */
            version?: string | undefined
            /** @default */
            status?: string | undefined
          }>
        }>
        analysis?: {
          /** @default */
          state?: string | undefined
          /** @default */
          justification?: string | undefined
          response?: string[] | undefined
          /** @default */
          detail?: string | undefined
          /** @default */
          firstIssued?: string | undefined
          /** @default */
          lastUpdated?: string | undefined
        }
      }>
    }
    SPDXManifestSchema: {
      /** @default SPDX-2.3 */
      spdxVersion: string
      /** @default CC0-1.0 */
      dataLicense: string
      /** @default SPDXRef-DOCUMENT */
      SPDXID: string
      /** @default */
      name: string
      /** @default */
      documentNamespace: string
      creationInfo: {
        /** @default */
        created: string
        creators: string[]
      }
      documentDescribes: string[]
      packages: Array<{
        /** @default */
        name: string
        /** @default */
        SPDXID: string
        /** @default */
        versionInfo: string
        /** @default */
        packageFileName: string
        /** @default */
        description?: string | undefined
        /** @default */
        primaryPackagePurpose?: string | undefined
        /** @default */
        downloadLocation?: string | undefined
        /** @default false */
        filesAnalyzed: boolean
        /** @default NOASSERTION */
        homepage: string
        /** @default NOASSERTION */
        licenseDeclared: string
        externalRefs: Array<{
          /** @default PACKAGE-MANAGER */
          referenceCategory: string
          /** @default purl */
          referenceType: string
          /** @default */
          referenceLocator: string
        }>
        checksums?: Array<{
          /** @default */
          algorithm: string
          /** @default */
          checksumValue: string
        }>
      }>
      relationships: Array<{
        /** @default SPDXRef-DOCUMENT */
        spdxElementId: string
        /** @default */
        relatedSpdxElement: string
        /** @default DESCRIBES */
        relationshipType: string
      }>
    }
    /** @default null */
    LicenseAllowListRequest: Record<string, never>
    SStoredLicensePolicy: {
      allow: string[] | null
      warn: string[] | null
      monitor: string[] | null
      options: string[] | null
    }
    Capabilities: {
      /**
       * @description Package can read or modify environment variables
       * @default false
       */
      env: boolean
      /**
       * @description Package uses dynamic code evaluation (eval, Function constructor, etc.)
       * @default false
       */
      eval: boolean
      /**
       * @description Package can read or write to the file system
       * @default false
       */
      fs: boolean
      /**
       * @description Package can make network requests or create servers
       * @default false
       */
      net: boolean
      /**
       * @description Package can execute shell commands or spawn processes
       * @default false
       */
      shell: boolean
      /**
       * @description Package uses unsafe or dangerous operations that could compromise security
       * @default false
       */
      unsafe: boolean
    }
    Qualifiers: unknown
    SocketScore: {
      /**
       * @description Score from 0.0 to 1.0 evaluating license permissiveness and compatibility
       * @default 0
       */
      license: number
      /**
       * @description Score from 0.0 to 1.0 evaluating project maintenance health and activity
       * @default 0
       */
      maintenance: number
      /**
       * @description Combined score from 0.0 to 1.0 representing overall package health and safety
       * @default 0
       */
      overall: number
      /**
       * @description Score from 0.0 to 1.0 evaluating code quality, testing, and documentation
       * @default 0
       */
      quality: number
      /**
       * @description Score from 0.0 to 1.0 evaluating supply chain security and provenance
       * @default 0
       */
      supplyChain: number
      /**
       * @description Score from 0.0 to 1.0 based on known vulnerabilities and their severity
       * @default 0
       */
      vulnerability: number
    }
    SocketManifestReference: {
      /**
       * @description Path to the manifest file (e.g., package.json, pom.xml)
       * @default
       */
      file: string
      /**
       * @description Starting line or position in the manifest file
       * @default 0
       */
      start?: number | undefined
      /**
       * @description Ending line or position in the manifest file
       * @default 0
       */
      end?: number | undefined
    }
    /** @default */
    SocketId: string
    LicensePolicy: {
      allow: components['schemas']['LicenseAllowListElabbed']
      warn: components['schemas']['LicenseAllowListElabbed']
      monitor: components['schemas']['LicenseAllowListElabbed']
    }
    LicenseAllowList: {
      strings: string[]
    }
    /** @default null */
    SLicenseMetaRes: Record<string, never>
    /** @default null */
    SLicenseMetaReq: Record<string, never>
    SocketReport: {
      /** @default */
      id: string
      /** @default false */
      healthy: boolean
      issues: components['schemas']['SocketIssueList']
      score: {
        /** @default 0 */
        avgSupplyChainRisk: number
        /** @default 0 */
        avgQuality: number
        /** @default 0 */
        avgMaintenance: number
        /** @default 0 */
        avgVulnerability: number
        /** @default 0 */
        avgLicense: number
      }
      /** @default */
      url: string
    }
    SocketIssueList: Array<components['schemas']['SocketIssue']>
    SocketPackageScore: {
      supplyChainRisk: components['schemas']['SocketMetricSchema']
      quality: components['schemas']['SocketMetricSchema']
      maintenance: components['schemas']['SocketMetricSchema']
      vulnerability: components['schemas']['SocketMetricSchema']
      license: components['schemas']['SocketMetricSchema']
      miscellaneous: components['schemas']['SocketMetricSchema']
      /** @default 0 */
      depscore: number
    }
    PurlErrorSchema: {
      /** @default */
      error: string
      /** @default */
      inputPurl: string
    }
    SocketBatchPURLRequest: {
      /** @default */
      purl: string
    }
    SocketPURL: {
      type: components['schemas']['SocketPURL_Type']
      /**
       * @description Package namespace or scope, such as npm organizations (@angular), Maven groupIds, or Docker image owners
       * @default
       */
      namespace?: string | undefined
      /**
       * @description Package name within its ecosystem
       * @default
       */
      name?: string | undefined
      /**
       * @description Package version string
       * @default
       */
      version?: string | undefined
      /**
       * @description Path within the package to a specific file or directory, used to reference nested components
       * @default
       */
      subpath?: string | undefined
      /**
       * @description Package-specific release identifier, such as PyPI's artifact ID or the specific build/release version
       * @default
       */
      release?: string | undefined
    }
    SocketAlert: {
      /**
       * @description Unique identifier for this alert instance, used for deduplication and tracking across scans
       * @default
       */
      key: string
      /**
       * @description Alert type identifier referencing the alert type definition
       * @default
       */
      type: string
      severity?: components['schemas']['SocketIssueSeverity'] | undefined
      category?: components['schemas']['SocketCategory'] | undefined
      /**
       * @description File path where this alert was detected
       * @default
       */
      file?: string | undefined
      /**
       * @description Starting position of the alert in the file
       * @default 0
       */
      start?: number | undefined
      /**
       * @description Ending position of the alert in the file
       * @default 0
       */
      end?: number | undefined
      /**
       * @description Additional alert-specific properties and metadata that vary by alert type
       * @default null
       */
      props?: Record<string, never> | undefined
      /**
       * @description Action to take for this alert (e.g., error, warn, ignore)
       * @default
       */
      action?: string | undefined
      actionSource?: {
        /**
         * @description Type of action source (e.g., policy, override)
         * @default
         */
        type: string
        candidates: Array<{
          /**
           * @description Type of action candidate
           * @default
           */
          type: string
          /**
           * @description Proposed action for this candidate
           * @default
           */
          action: string
          /**
           * @description Index of the policy rule for this candidate
           * @default 0
           */
          actionPolicyIndex: number
          /**
           * @description Repository label ID associated with this candidate
           * @default
           */
          repoLabelId: string
        }>
      }
      /**
       * @description Index of the policy rule that triggered this action, for traceability to security policies
       * @default 0
       */
      actionPolicyIndex?: number | undefined
      fix?: {
        /**
         * @description Type of fix available (e.g., upgrade, remove, cve)
         * @default
         */
        type: string
        /**
         * @description Human-readable description of how to fix this issue
         * @default
         */
        description: string
        /** @description Patches available to fix this specific alert */
        patch?: Array<{
          /**
           * @description Unique identifier for this patch
           * @default
           */
          uuid: string
          /**
           * @description Access tier required for this patch (free or paid)
           * @default free
           * @enum {string}
           */
          tier: 'free' | 'paid'
          /**
           * @description Indicates if this patch is deprecated and should not be used
           * @default false
           */
          deprecated?: boolean | undefined
        }>
      }
      patch?: components['schemas']['SocketPatch'] | undefined
      reachability?: {
        head?: components['schemas']['ReachabilityResult'] | undefined
        base?: components['schemas']['ReachabilityResult'] | undefined
      }
      /**
       * @description Generic alert sub-type
       * @default
       */
      subType?: string | undefined
    }
    SocketArtifactPatch: {
      appliedPatch?: components['schemas']['SocketPatch'] | undefined
      /** @description List of available patches that can be applied to fix vulnerabilities */
      availablePatches?: Array<components['schemas']['SocketPatch']> | undefined
    }
    LicenseDetails: Array<{
      /**
       * @description SPDX license expression in disjunctive normal form (e.g., '(MIT OR Apache-2.0)')
       * @default
       */
      spdxDisj: string
      /** @description List of authors found in the license text */
      authors: string[]
      /**
       * @description Error details if license parsing failed
       * @default
       */
      errorData: string
      /**
       * @description Source where this license information was detected (e.g., 'package.json', 'LICENSE file', 'README')
       * @default
       */
      provenance: string
      /**
       * @description Path to the file containing this license information
       * @default
       */
      filepath: string
      /**
       * @description Confidence score from 0.0 to 1.0 indicating how well the detected license matches the source text
       * @default 0
       */
      match_strength: number
    }>
    SAttrib1_N: Array<{
      /**
       * @description Full text of the license attribution or copyright notice found in the package
       * @default
       */
      attribText: string
      attribData: Array<{
        /**
         * @description Package URL this attribution applies to
         * @default
         */
        purl: string
        /**
         * @description File path where this attribution was found
         * @default
         */
        foundInFilepath: string
        /**
         * @description SPDX license expression parsed from the attribution text
         * @default
         */
        spdxExpr: string
        /** @description Authors mentioned in this attribution */
        foundAuthors: string[]
      }>
    }>
    SocketArtifactLink: {
      /**
       * @description Indicates if this is a direct dependency (not transitive)
       * @default false
       */
      direct?: boolean | undefined
      /**
       * @description Indicates if this is a development-only dependency not used in production
       * @default false
       */
      dev?: boolean | undefined
      /**
       * @description Indicates if this package is deprecated, abandoned, or no longer maintained
       * @default false
       */
      dead?: boolean | undefined
      manifestFiles?:
        | Array<components['schemas']['SocketManifestReference']>
        | undefined
      /** @description IDs of the root-level packages in the dependency tree that depend on this package */
      topLevelAncestors?: Array<components['schemas']['SocketId']> | undefined
      /** @description IDs of packages that this package directly depends on */
      dependencies?: Array<components['schemas']['SocketId']> | undefined
      /** @description Computed priority scores for each alert type based on severity, reachability, and fixability factors */
      alertPriorities?: {
        [key: string]: {
          /**
           * @description Computed priority score for this alert
           * @default 0
           */
          result: number
          components?: {
            isFixable: {
              /**
               * @description Contribution of fixability to the priority score
               * @default 0
               */
              result: number
              /**
               * @description Whether a fix is available for this alert
               * @default false
               */
              value: boolean
            }
            isReachable: {
              /**
               * @description Contribution of reachability to the priority score
               * @default 0
               */
              result: number
              /**
               * @description Whether the vulnerable code is reachable
               * @default false
               */
              value: boolean
              /**
               * @description Specific reachability type value such as 'unreachable', 'maybe_reachable', or 'reachable'
               * @default
               */
              specificValue: string
            }
            severity: {
              /**
               * @description Contribution of severity to the priority score
               * @default 0
               */
              result: number
              /**
               * @description Numeric severity level
               * @default 0
               */
              value: number
            }
          }
          /**
           * @description Formula used to calculate the priority score
           * @default
           */
          formula?: string | undefined
        }
      }
      artifact?: components['schemas']['SocketPURL'] & {
        id: components['schemas']['SocketId']
      }
      /** @description Deprecated: mapping of alert keys to arrays of reachability types found across different manifest files or code locations. This field is derived from alertKeysToReachabilitySummaries for backward compatibility; use that property instead. */
      alertKeysToReachabilityTypes?: {
        [key: string]: string[]
      }
      /** @description Mapping of alert keys to arrays of reachability summaries. Each summary contains a reachability type and a hash pointing to detailed analysis data (call stacks, file locations, confidence scores). Used for efficient storage and retrieval of comprehensive reachability analysis results without duplicating large analysis payloads. */
      alertKeysToReachabilitySummaries?: {
        [key: string]: Array<{
          /** @default */
          type: string
          /** @default */
          hash: string
        }>
      }
    }
    /**
     * @description Type of change detected for this artifact in the diff
     * @default unchanged
     * @enum {string}
     */
    SocketDiffArtifactType:
      | 'added'
      | 'removed'
      | 'updated'
      | 'replaced'
      | 'unchanged'
    CDXComponentSchema: {
      /** @default */
      author?: string | undefined
      /** @default */
      publisher?: string | undefined
      /** @default */
      group: string
      /** @default */
      name: string
      /** @default */
      version: string
      /** @default */
      description?: string | undefined
      /** @default */
      scope?: string | undefined
      hashes?: Array<{
        /** @default */
        alg: string
        /** @default */
        content: string
      }>
      licenses?: Array<{
        /** @default */
        expression?: string | undefined
        license?: {
          /** @default */
          id?: string | undefined
          /** @default */
          name?: string | undefined
          /** @default */
          url?: string | undefined
        }
      }>
      /** @default */
      purl: string
      externalReferences?: Array<{
        /** @default */
        type: string
        /** @default */
        url: string
      }>
      /** @default application */
      type: string
      /** @default */
      'bom-ref': string
      evidence?: {
        identity: {
          /** @default */
          field: string
          /** @default 0 */
          confidence: number
          methods: Array<{
            /** @default */
            technique: string
            /** @default 0 */
            confidence: number
            /** @default */
            value: string
          }>
        }
        occurrences?: Array<{
          /** @default */
          location: string
        }>
      }
      tags?: string[] | undefined
      properties?: Array<{
        /** @default */
        name: string
        /** @default */
        value: string
      }>
      cryptoProperties?: Array<{
        /** @default */
        assetType: string
        algorithmProperties: {
          /** @default */
          executionEnvironment: string
          /** @default */
          implementationPlatform: string
        }
      }>
      components?:
        | Array<components['schemas']['CDXComponentSchema']>
        | undefined
    }
    LicenseAllowListElabbed: {
      strings: string[]
      classes: string[]
      packageURLs: string[]
      disjs: string[]
    }
    SocketIssue:
      | {
          /** @enum {string} */
          type?: 'gptSecurity' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              notes: string
              /** @default 0 */
              confidence: number
              /** @default 0 */
              severity: number
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'gptAnomaly' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              notes: string
              /** @default 0 */
              confidence: number
              /** @default 0 */
              severity: number
              /**
               * @default medium
               * @enum {string}
               */
              risk: 'low' | 'medium' | 'high'
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'gptMalware' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              notes: string
              /** @default 0 */
              confidence: number
              /** @default 0 */
              severity: number
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'filesystemAccess' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default fs */
              module: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'networkAccess' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default net */
              module: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'shellAccess' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default child_process */
              module: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'debugAccess' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default vm */
              module: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'chromePermission' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              permission: string
              /** @default */
              permissionType: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'chromeHostPermission' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              host: string
              /** @default */
              permissionType: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'chromeWildcardHostPermission' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              host: string
              /** @default */
              permissionType: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'chromeContentScript' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              scriptFile: string
              /** @default */
              matches: string
              /** @default */
              runAt: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'criticalCVE' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /**
               * @description Common Vulnerabilities and Exposures identifier (e.g., CVE-2021-44228)
               * @default
               */
              cveId: string
              cwes: Array<{
                /** @default */
                description: string
                /**
                 * @description Common Weakness Enumeration identifier (e.g., CWE-79)
                 * @default
                 */
                id: string
                /** @default */
                name: string
              }>
              /** @description Common Vulnerability Scoring System metrics */
              cvss: {
                /**
                 * @description CVSS base score ranging from 0.0 to 10.0
                 * @default 0
                 */
                score: number
                /**
                 * @description CVSS vector string (e.g., CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)
                 * @default
                 */
                vectorString: string
              }
              /** @default */
              description: string
              /**
               * @description The first version that includes a patch for this vulnerability
               * @default
               */
              firstPatchedVersionIdentifier: string
              /**
               * @description GitHub Security Advisory identifier (e.g., GHSA-1234-5678-9abc)
               * @default
               */
              ghsaId: string
              /** @default critical */
              severity: string
              /** @default */
              title: string
              /** @default */
              url: string
              /**
               * @description Version range affected by this vulnerability (e.g., >= 2.0.0, < 2.17.1)
               * @default
               */
              vulnerableVersionRange: string
              kevs: Array<{
                /** @default */
                vulnerabilityName: string
                /** @default */
                shortDescription: string | null
                /** @default */
                requiredAction: string | null
                /**
                 * @description Date when added to CISA KEV catalog (ISO 8601 format)
                 * @default
                 */
                dateAdded: string
                /**
                 * @description Remediation deadline for federal agencies (ISO 8601 format)
                 * @default
                 */
                dueDate: string | null
                /**
                 * @description Known, Unknown, or specific ransomware campaign names
                 * @default
                 */
                knownRansomwareCampaignUse: string | null
                /** @default */
                notes: string | null
                /** @default */
                vendorProject: string
                /** @default */
                product: string
              }> | null
              /** @description Exploit Prediction Scoring System https://www.first.org/epss/ */
              epss: {
                /** @default 0 */
                score: number
                /** @default 0 */
                percentile: number
              } | null
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'cve' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /**
               * @description Common Vulnerabilities and Exposures identifier (e.g., CVE-2021-44228)
               * @default
               */
              cveId: string
              cwes: Array<{
                /** @default */
                description: string
                /**
                 * @description Common Weakness Enumeration identifier (e.g., CWE-79)
                 * @default
                 */
                id: string
                /** @default */
                name: string
              }>
              /** @description Common Vulnerability Scoring System metrics */
              cvss: {
                /**
                 * @description CVSS base score ranging from 0.0 to 10.0
                 * @default 0
                 */
                score: number
                /**
                 * @description CVSS vector string (e.g., CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)
                 * @default
                 */
                vectorString: string
              }
              /** @default */
              description: string
              /**
               * @description The first version that includes a patch for this vulnerability
               * @default
               */
              firstPatchedVersionIdentifier: string
              /**
               * @description GitHub Security Advisory identifier (e.g., GHSA-1234-5678-9abc)
               * @default
               */
              ghsaId: string
              /** @default critical */
              severity: string
              /** @default */
              title: string
              /** @default */
              url: string
              /**
               * @description Version range affected by this vulnerability (e.g., >= 2.0.0, < 2.17.1)
               * @default
               */
              vulnerableVersionRange: string
              kevs: Array<{
                /** @default */
                vulnerabilityName: string
                /** @default */
                shortDescription: string | null
                /** @default */
                requiredAction: string | null
                /**
                 * @description Date when added to CISA KEV catalog (ISO 8601 format)
                 * @default
                 */
                dateAdded: string
                /**
                 * @description Remediation deadline for federal agencies (ISO 8601 format)
                 * @default
                 */
                dueDate: string | null
                /**
                 * @description Known, Unknown, or specific ransomware campaign names
                 * @default
                 */
                knownRansomwareCampaignUse: string | null
                /** @default */
                notes: string | null
                /** @default */
                vendorProject: string
                /** @default */
                product: string
              }> | null
              /** @description Exploit Prediction Scoring System https://www.first.org/epss/ */
              epss: {
                /** @default 0 */
                score: number
                /** @default 0 */
                percentile: number
              } | null
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'mediumCVE' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /**
               * @description Common Vulnerabilities and Exposures identifier (e.g., CVE-2021-44228)
               * @default
               */
              cveId: string
              cwes: Array<{
                /** @default */
                description: string
                /**
                 * @description Common Weakness Enumeration identifier (e.g., CWE-79)
                 * @default
                 */
                id: string
                /** @default */
                name: string
              }>
              /** @description Common Vulnerability Scoring System metrics */
              cvss: {
                /**
                 * @description CVSS base score ranging from 0.0 to 10.0
                 * @default 0
                 */
                score: number
                /**
                 * @description CVSS vector string (e.g., CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)
                 * @default
                 */
                vectorString: string
              }
              /** @default */
              description: string
              /**
               * @description The first version that includes a patch for this vulnerability
               * @default
               */
              firstPatchedVersionIdentifier: string
              /**
               * @description GitHub Security Advisory identifier (e.g., GHSA-1234-5678-9abc)
               * @default
               */
              ghsaId: string
              /** @default critical */
              severity: string
              /** @default */
              title: string
              /** @default */
              url: string
              /**
               * @description Version range affected by this vulnerability (e.g., >= 2.0.0, < 2.17.1)
               * @default
               */
              vulnerableVersionRange: string
              kevs: Array<{
                /** @default */
                vulnerabilityName: string
                /** @default */
                shortDescription: string | null
                /** @default */
                requiredAction: string | null
                /**
                 * @description Date when added to CISA KEV catalog (ISO 8601 format)
                 * @default
                 */
                dateAdded: string
                /**
                 * @description Remediation deadline for federal agencies (ISO 8601 format)
                 * @default
                 */
                dueDate: string | null
                /**
                 * @description Known, Unknown, or specific ransomware campaign names
                 * @default
                 */
                knownRansomwareCampaignUse: string | null
                /** @default */
                notes: string | null
                /** @default */
                vendorProject: string
                /** @default */
                product: string
              }> | null
              /** @description Exploit Prediction Scoring System https://www.first.org/epss/ */
              epss: {
                /** @default 0 */
                score: number
                /** @default 0 */
                percentile: number
              } | null
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'mildCVE' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /**
               * @description Common Vulnerabilities and Exposures identifier (e.g., CVE-2021-44228)
               * @default
               */
              cveId: string
              cwes: Array<{
                /** @default */
                description: string
                /**
                 * @description Common Weakness Enumeration identifier (e.g., CWE-79)
                 * @default
                 */
                id: string
                /** @default */
                name: string
              }>
              /** @description Common Vulnerability Scoring System metrics */
              cvss: {
                /**
                 * @description CVSS base score ranging from 0.0 to 10.0
                 * @default 0
                 */
                score: number
                /**
                 * @description CVSS vector string (e.g., CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)
                 * @default
                 */
                vectorString: string
              }
              /** @default */
              description: string
              /**
               * @description The first version that includes a patch for this vulnerability
               * @default
               */
              firstPatchedVersionIdentifier: string
              /**
               * @description GitHub Security Advisory identifier (e.g., GHSA-1234-5678-9abc)
               * @default
               */
              ghsaId: string
              /** @default critical */
              severity: string
              /** @default */
              title: string
              /** @default */
              url: string
              /**
               * @description Version range affected by this vulnerability (e.g., >= 2.0.0, < 2.17.1)
               * @default
               */
              vulnerableVersionRange: string
              kevs: Array<{
                /** @default */
                vulnerabilityName: string
                /** @default */
                shortDescription: string | null
                /** @default */
                requiredAction: string | null
                /**
                 * @description Date when added to CISA KEV catalog (ISO 8601 format)
                 * @default
                 */
                dateAdded: string
                /**
                 * @description Remediation deadline for federal agencies (ISO 8601 format)
                 * @default
                 */
                dueDate: string | null
                /**
                 * @description Known, Unknown, or specific ransomware campaign names
                 * @default
                 */
                knownRansomwareCampaignUse: string | null
                /** @default */
                notes: string | null
                /** @default */
                vendorProject: string
                /** @default */
                product: string
              }> | null
              /** @description Exploit Prediction Scoring System https://www.first.org/epss/ */
              epss: {
                /** @default 0 */
                score: number
                /** @default 0 */
                percentile: number
              } | null
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'emptyPackage' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'trivialPackage' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default 0 */
              linesOfCode: number
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'noREADME' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'shrinkwrap' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'generic' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              title: string
              /** @default */
              description: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'licenseSpdxDisj' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              spdxDisj: string
              /** @default */
              licenseScanResult: string
              violationData: Array<Record<string, never>>
              warnData: Array<Record<string, never>>
              monitorData: Array<Record<string, never>>
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'unsafeCopyright' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'licenseChange' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              prevLicenseId: string
              /** @default */
              newLicenseId: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'nonOSILicense' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              licenseId: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'deprecatedLicense' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              licenseId: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'missingLicense' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'nonSPDXLicense' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'unclearLicense' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              possibleLicenseId: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'mixedLicense' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              licenseId: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'notice' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'modifiedLicense' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              licenseId: string
              /** @default 0 */
              similarity: number
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'modifiedException' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              exceptionId: string
              /** @default 0 */
              similarity: number
              /** @default */
              comments: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'licenseException' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              exceptionId: string
              /** @default */
              comments: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'deprecatedException' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              exceptionId: string
              /** @default */
              comments: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'miscLicenseIssues' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              description: string
              /** @default */
              location: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'unidentifiedLicense' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              location: string
              /** @default {} */
              maybeByteSpan: Record<string, never>
              /** @default */
              maybeTruncatedSource: string
              /** @default 0 */
              match_strength: number
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'noLicenseFound' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'explicitlyUnlicensedItem' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              location: string
              /** @default {} */
              maybeByteSpan: Record<string, never>
              /** @default */
              maybeTruncatedSource: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'copyleftLicense' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              licenseId: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'nonpermissiveLicense' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              licenseId: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'ambiguousClassifier' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              classifier: string
              /** @default */
              filepathOrProvenance: string
              /** @default {} */
              maybeByteSpan: Record<string, never>
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'invalidPackageJSON' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'httpDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              packageName: string
              /** @default */
              url: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'gitDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              packageName: string
              /** @default */
              url: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'gitHubDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              packageName: string
              /** @default */
              githubUser: string
              /** @default */
              githubRepo: string
              /** @default */
              commitsh: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'fileDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              packageName: string
              /** @default */
              filePath: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'noTests' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'noRepository' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'badSemver' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'badSemverDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              packageName: string
              /** @default */
              packageVersion: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'noV1' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'noWebsite' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'noBugTracker' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'noAuthorData' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'typeModuleCompatibility' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'floatingDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              dependency: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'manifestConfusion' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              key: string
              /** @default */
              description: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'malware' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default 0 */
              id: number
              /** @default */
              note: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'telemetry' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default 0 */
              id: number
              /** @default */
              note: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'troll' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default 0 */
              id: number
              /** @default */
              note: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'deprecated' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default This package is deprecated */
              reason: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'chronoAnomaly' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              prevChronoDate: string
              /** @default */
              prevChronoVersion: string
              /** @default */
              prevSemverDate: string
              /** @default */
              prevSemverVersion: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'compromisedSSHKey' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              fingerprint: string
              /** @default */
              sshKey: string
              /** @default */
              username: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'semverAnomaly' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              prevVersion: string
              /** @default */
              newVersion: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'newAuthor' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              prevAuthor: string
              /** @default */
              newAuthor: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'unstableOwnership' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              author: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'missingAuthor' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'unmaintained' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              lastPublish: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'unpublished' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              version: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'majorRefactor' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default 0 */
              linesChanged: number
              /** @default 0 */
              prevSize: number
              /** @default 0 */
              curSize: number
              /** @default 0 */
              changedPercent: number
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'missingTarball' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'suspiciousStarActivity' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default 0 */
              percentageSuspiciousStars: number
              /** @default */
              repository: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'unpopularPackage' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'socketUpgradeAvailable' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              categories: string[]
              /** @default false */
              deprecated: boolean
              interop: string[]
              /** @default */
              replacementPURL: string
              /** @default */
              version: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'longStrings' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'highEntropyStrings' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'urlStrings' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              urls: string[]
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'usesEval' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default eval */
              evalType: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'dynamicRequire' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'envVars' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              envVars: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'missingDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              name: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'unusedDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              name: string
              /** @default */
              version: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'peerDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              name: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'uncaughtOptionalDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              name: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'unresolvedRequire' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'extraneousDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'obfuscatedRequire' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'obfuscatedFile' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default 0 */
              confidence: number
              /** @default */
              notes: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'minifiedFile' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default 0 */
              confidence: number
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'installScripts' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              script: string
              /** @default */
              source: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'hasNativeCode' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'binScriptConfusion' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              binScript: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'shellScriptOverride' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              binScript: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'didYouMean' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              alternatePackage: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'gptDidYouMean' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              alternatePackage: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'bidi' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'zeroWidth' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'badEncoding' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default utf8 */
              encoding: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'homoglyphs' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'invisibleChars' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'suspiciousString' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              pattern: string
              /** @default */
              explanation: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'potentialVulnerability' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              note: string
              /**
               * @default medium
               * @enum {string}
               */
              risk: 'low' | 'medium' | 'high'
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'vsxProposedApiUsage' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              proposals: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'vsxActivationWildcard' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              event: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'vsxWorkspaceContainsActivation' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              pattern: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'vsxUntrustedWorkspaceSupported' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              supported: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'vsxVirtualWorkspaceSupported' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              supported: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'vsxWebviewContribution' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'vsxDebuggerContribution' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: Record<string, never>
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'vsxExtensionDependency' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              extension: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
      | {
          /** @enum {string} */
          type?: 'vsxExtensionPack' | undefined
          value?: components['schemas']['SocketIssueBasics'] & {
            /** @default */
            description: string
            props: {
              /** @default */
              count: string
            }
            usage?: components['schemas']['SocketUsageRef'] | undefined
          }
        }
    SocketMetricSchema: {
      /** @default 0 */
      score: number
      components: {
        [key: string]: components['schemas']['SocketMetricComponent']
      }
      /** @default 0 */
      limit?: number | undefined
      /** @default */
      limitingMetric?: string | undefined
    }
    /**
     * @description Package ecosystem type identifier based on the PURL specification
     * @default unknown
     * @enum {string}
     */
    SocketPURL_Type:
      | 'apk'
      | 'bitbucket'
      | 'cocoapods'
      | 'cargo'
      | 'chrome'
      | 'composer'
      | 'conan'
      | 'conda'
      | 'cran'
      | 'deb'
      | 'docker'
      | 'gem'
      | 'generic'
      | 'github'
      | 'golang'
      | 'hackage'
      | 'hex'
      | 'huggingface'
      | 'maven'
      | 'mlflow'
      | 'npm'
      | 'nuget'
      | 'qpkg'
      | 'oci'
      | 'pub'
      | 'pypi'
      | 'rpm'
      | 'swid'
      | 'swift'
      | 'unknown'
    /**
     * @default low
     * @enum {string}
     */
    SocketIssueSeverity: 'low' | 'middle' | 'high' | 'critical'
    /**
     * @default other
     * @enum {string}
     */
    SocketCategory:
      | 'supplyChainRisk'
      | 'quality'
      | 'maintenance'
      | 'vulnerability'
      | 'license'
      | 'other'
    SocketPatch: {
      /**
       * @description Unique identifier for this patch
       * @default
       */
      uuid: string
      /**
       * @description Access tier required for this patch (free or paid)
       * @default free
       * @enum {string}
       */
      tier: 'free' | 'paid'
      /**
       * @description Indicates if this patch is deprecated and should not be used
       * @default false
       */
      deprecated?: boolean | undefined
    }
    ReachabilityResult: {
      /**
       * @description Type of reachability analysis performed
       * @default precomputed
       * @enum {string}
       */
      type: 'precomputed' | 'full-scan'
      /** @description Reachability analysis results for each vulnerability */
      results: Array<components['schemas']['ReachabilityResultItem']>
    }
    SocketIssueBasics: {
      severity: components['schemas']['SocketIssueSeverity']
      category: components['schemas']['SocketCategory']
      locations: components['schemas']['SocketRefList']
      /** @default */
      label: string
    }
    SocketUsageRef: {
      file: components['schemas']['SocketRefFile']
      dependencies: components['schemas']['SocketRefList']
    }
    SocketMetricComponent: {
      /** @default 0 */
      score: number
      /** @default 0 */
      maxScore: number
      /** @default 0 */
      limit: number
      /** @default null */
      value: Record<string, never>
    }
    ReachabilityResultItem: {
      type: components['schemas']['ReachabilityType']
      /**
       * @description Indicates if the reachability analysis was stopped early due to depth or complexity limits
       * @default false
       */
      truncated?: boolean | undefined
      /**
       * @description Error message if reachability analysis failed
       * @default
       */
      error?: string | undefined
      matches?:
        | {
            /** @enum {string} */
            type?: 'function-level' | undefined
            value?:
              | Array<Array<components['schemas']['CallStackItem']>>
              | undefined
          }
        | {
            /** @enum {string} */
            type?: 'class-level' | undefined
            value?:
              | Array<Array<components['schemas']['ClassStackItem']>>
              | undefined
          }
      /**
       * @description Path to the workspace root for multi-workspace projects
       * @default
       */
      workspacePath?: string | undefined
      /**
       * @description Path to the subproject within the workspace
       * @default
       */
      subprojectPath?: string | undefined
    }
    SocketRefList: Array<components['schemas']['SocketRef']>
    SocketRefFile: {
      /** @default */
      path: string
      range?: components['schemas']['SocketRefTextRange'] | undefined
      bytes?: components['schemas']['SocketRefByteRange'] | undefined
    }
    /**
     * @description Status of reachability analysis for vulnerable code paths
     * @default unknown
     * @enum {string}
     */
    ReachabilityType:
      | 'missing_support'
      | 'undeterminable_reachability'
      | 'pending'
      | 'unreachable'
      | 'unknown'
      | 'direct_dependency'
      | 'error'
      | 'maybe_reachable'
      | 'reachable'
    CallStackItem: {
      /**
       * @description Package URL (PURL) of the dependency containing this code
       * @default
       */
      purl?: string | undefined
      sourceLocation?: components['schemas']['SourceLocation'] | undefined
      /**
       * @description Confidence score from 0.0 to 1.0 indicating how certain the reachability analysis is about this result
       * @default 0
       */
      confidence?: number | undefined
    }
    ClassStackItem: {
      /**
       * @description Package URL (PURL) of the dependency containing this class
       * @default
       */
      purl?: string | undefined
      /**
       * @description Name of the class in the dependency
       * @default
       */
      class?: string | undefined
      /**
       * @description Confidence score from 0.0 to 1.0 indicating how certain the reachability analysis is about this result
       * @default 0
       */
      confidence?: number | undefined
    }
    SocketRef:
      | {
          /** @enum {string} */
          type?: 'unknown' | undefined
          value?: Record<string, never> | undefined
        }
      | {
          /** @enum {string} */
          type?: 'npm' | undefined
          value?: components['schemas']['SocketRefNPM'] | undefined
        }
      | {
          /** @enum {string} */
          type?: 'git' | undefined
          value?: components['schemas']['SocketRefGit'] | undefined
        }
      | {
          /** @enum {string} */
          type?: 'web' | undefined
          value?: components['schemas']['SocketRefWeb'] | undefined
        }
      | {
          /** @enum {string} */
          type?: 'pypi' | undefined
          value?: components['schemas']['SocketRefPyPI'] | undefined
        }
      | {
          /** @enum {string} */
          type?: 'go' | undefined
          value?: components['schemas']['SocketRefGo'] | undefined
        }
    SocketRefTextRange: {
      /** @default 0 */
      startLine: number
      /** @default 0 */
      startColumn: number
      /** @default 0 */
      endLine: number
      /** @default 0 */
      endColumn: number
    }
    SocketRefByteRange: {
      /** @default 0 */
      start: number
      /** @default 0 */
      end: number
    }
    SourceLocation: {
      start: {
        /**
         * @description Line number in the source file
         * @default 0
         */
        line: number
        /**
         * @description Column number in the source file
         * @default 0
         */
        column: number
        /**
         * @description Absolute byte position from the beginning of the file, used for precise location tracking
         * @default 0
         */
        byteOffset: number
      }
      end: {
        /**
         * @description Line number in the source file
         * @default 0
         */
        line?: number | undefined
        /**
         * @description Column number in the source file
         * @default 0
         */
        column?: number | undefined
        /**
         * @description Absolute byte position from the beginning of the file, used for precise location tracking
         * @default 0
         */
        byteOffset?: number | undefined
      }
      /**
       * @description Path to the source file
       * @default
       */
      filename: string
      /**
       * @description Hash of the source file for integrity verification
       * @default
       */
      fileHash: string
    }
    SocketRefNPM: {
      /** @default */
      package: string
      /** @default */
      version?: string | undefined
      file?: components['schemas']['SocketRefFile'] | undefined
    }
    SocketRefGit: {
      /** @default */
      url: string
      /** @default */
      commit?: string | undefined
      /** @default */
      tag?: string | undefined
      file?: components['schemas']['SocketRefFile'] | undefined
    }
    SocketRefWeb: {
      /** @default */
      url: string
      file?: components['schemas']['SocketRefFile'] | undefined
    }
    SocketRefPyPI: {
      /** @default */
      package: string
      /** @default */
      version?: string | undefined
      /** @default */
      artifact?: string | undefined
      file?: components['schemas']['SocketRefFile'] | undefined
    }
    SocketRefGo: {
      /** @default */
      package: string
      /** @default */
      version?: string | undefined
      file?: components['schemas']['SocketRefFile'] | undefined
    }
  }
  responses: {
    /** @description Bad request */
    SocketBadRequest: {
      content: {
        'application/json': {
          error: {
            /** @default */
            message: string
            /** @default null */
            details: Record<string, unknown> | null
          }
        }
      }
    }
    /** @description Unauthorized */
    SocketUnauthorized: {
      content: {
        'application/json': {
          error: {
            /** @default */
            message: string
            /** @default null */
            details: Record<string, unknown> | null
          }
        }
      }
    }
    /** @description Insufficient max_quota for API method */
    SocketForbidden: {
      content: {
        'application/json': {
          error: {
            /** @default */
            message: string
            /** @default null */
            details: Record<string, unknown> | null
          }
        }
      }
    }
    /** @description Resource not found */
    SocketNotFoundResponse: {
      content: {
        'application/json': {
          error: {
            /** @default */
            message: string
            /** @default null */
            details: Record<string, unknown> | null
          }
        }
      }
    }
    /** @description Insufficient quota for API route */
    SocketTooManyRequestsResponse: {
      headers: {
        /**
         * @description Retry contacting the endpoint *at least* after seconds.
         * See https://tools.ietf.org/html/rfc7231#section-7.1.3
         */
        'Retry-After'?: number
      }
      content: {
        'application/json': {
          error: {
            /** @default */
            message: string
            /** @default null */
            details: Record<string, unknown> | null
          }
        }
      }
    }
    /** @description Internal server error */
    SocketInternalServerError: {
      content: {
        'application/json': {
          error: {
            /** @default */
            message: string
            /** @default null */
            details: Record<string, unknown> | null
          }
        }
      }
    }
    /** @description Gone */
    SocketGone: {
      content: {
        'application/json': {
          error: {
            /** @default */
            message: string
            /** @default null */
            details: Record<string, unknown> | null
          }
        }
      }
    }
  }
  parameters: never
  requestBodies: {}
  headers: never
  pathItems: never
}

export type $defs = Record<string, never>

export type external = Record<string, never>

export interface operations {
  /**
   * Get Packages by PURL
   * @description Batch retrieval of package metadata and alerts by PURL strings. Compatible witch CycloneDX reports.
   *
   * Package URLs (PURLs) are an ecosystem agnostic way to identify packages.
   * CycloneDX SBOMs use the purl format to identify components.
   * This endpoint supports fetching metadata and alerts for multiple packages at once by passing an array of purl strings, or by passing an entire CycloneDX report.
   *
   * More information on purl and CycloneDX:
   *
   * - [`purl` Spec](https://github.com/package-url/purl-spec)
   * - [CycloneDX Spec](https://cyclonedx.org/specification/overview/#components)
   *
   * This endpoint returns the latest available alert data for artifacts in the batch (stale while revalidate).
   * Actively running analysis will be returned when available on subsequent runs.
   *
   * ## Examples:
   *
   * ### Looking up an npm package:
   *
   * ```json
   * {
   *   "components": [
   *     {
   *       "purl": "pkg:npm/express@4.19.2"
   *     }
   *   ]
   * }
   * ```
   *
   * ### Looking up an PyPi package:
   *
   * ```json
   * {
   *   "components": [
   *     {
   *       "purl": "pkg:pypi/django@5.0.6"
   *     }
   *   ]
   * }
   * ```
   *
   * ### Looking up a Maven package:
   *
   * ```json
   * {
   *   "components": [
   *     {
   *       "purl": "pkg:maven/log4j/log4j@1.2.17"
   *     }
   *   ]
   * }
   * ```
   *
   * ### Batch lookup
   *
   * ```json
   * {
   *   "components": [
   *     {
   *       "purl": "pkg:npm/express@4.19.2"
   *     },
   *     {
   *       "purl": "pkg:pypi/django@5.0.6"
   *     },
   *     {
   *       "purl": "pkg:maven/log4j/log4j@1.2.17"
   *     }
   *   ]
   * }
   * ```
   *
   * This endpoint consumes 100 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - packages:list
   */
  batchPackageFetch: {
    parameters: {
      query?: {
        /** @description Include alert metadata. */
        alerts?: boolean | undefined
        /** @description Include only alerts with comma separated actions defined by security policy. */
        actions?: Array<'error' | 'monitor' | 'warn' | 'ignore'> | undefined
        /** @description Compact metadata. */
        compact?: boolean | undefined
        /** @description Include only fixable alerts. */
        fixable?: boolean | undefined
        /** @description Include license attribution data, including license text and author information. Maps attribution/license text to a list of data objects to which that attribution info applies. */
        licenseattrib?: boolean | undefined
        /** @description Include detailed license information, including location and match strength, for each license datum. */
        licensedetails?: boolean | undefined
        /** @description Return errors found with handling PURLs as error objects in the stream. */
        purlErrors?: boolean | undefined
      }
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SocketBatchPURLFetch']
      }
    }
    responses: {
      /** @description Socket issue lists and scores for all packages, and optional metadata objects */
      200: {
        content: {
          'application/x-ndjson': components['schemas']['BatchPurlStreamSchema']
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Search dependencies
   * @description Search for any dependency that is being used in your organization.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - No Scopes Required, but authentication is required
   */
  searchDependencies: {
    requestBody?: {
      content: {
        'application/json': {
          /** @default 50 */
          limit: number
          /** @default 0 */
          offset: number
          purls?: string[] | undefined
        }
      }
    }
    responses: {
      /** @description Search dependencies response */
      200: {
        content: {
          'application/json': {
            /** @default false */
            end: boolean
            /** @default 1000 */
            limit: number
            /** @default 0 */
            offset: number
            purlFilters: {
              valid: string[]
              invalid: string[]
            }
            rows: Array<{
              /** @default */
              branch: string
              /** @default false */
              direct: boolean
              /** @default */
              id: string
              /** @default */
              name: string
              /** @default */
              repository: string
              /** @default */
              type: string
              /** @default */
              namespace?: string | undefined
              /** @default */
              version?: string | undefined
              /** @default */
              release?: string | undefined
            }>
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Create a snapshot of all dependencies from manifest information
   * @deprecated
   * @description **This endpoint is deprecated.**
   *
   * Upload a set of manifest or lockfiles to get your dependency tree analyzed by Socket.
   * You can upload multiple lockfiles in the same request, but each filename must be unique.
   *
   * The name of the file must be in the supported list.
   *
   * For example, these are valid filenames: "requirements.txt", "package.json", "folder/package.json", and "deep/nested/folder/package.json".
   *
   * This endpoint consumes 100 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - report:write
   */
  createDependenciesSnapshot: {
    parameters: {
      query?: {
        repository?: string | undefined
        branch?: string | undefined
      }
    }
    requestBody?: {
      content: {
        'multipart/form-data': {
          /** @default */
          repository?: string | undefined
          /** @default */
          branch?: string | undefined
          [key: string]: undefined
        }
      }
    }
    responses: {
      /** @description ID of the dependencies snapshot */
      200: {
        content: {
          'application/json': Record<string, never>
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
      500: components['responses']['SocketInternalServerError']
    }
  }
  /**
   * List full scans
   * @description Returns a paginated list of all full scans in an org, excluding SBOM artifacts.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - full-scans:list
   */
  getOrgFullScanList: {
    parameters: {
      query?: {
        /** @description Specify Sort order. */
        sort?: 'name' | 'created_at' | undefined
        /** @description Specify sort direction. */
        direction?: 'asc' | 'desc' | undefined
        /** @description Specify the maximum number of results to return per page. */
        per_page?: number | undefined
        /** @description The token specifying which page to return. */
        page?: number | undefined
        /** @description A Unix timestamp in seconds that filters full-scans prior to the date. */
        from?: string | undefined
        /** @description A repository slug to filter full-scans by. */
        repo?: string | undefined
        /** @description A branch name to filter full-scans by. */
        branch?: string | undefined
        /** @description A PR number to filter full-scans by. */
        pull_request?: string | undefined
        /** @description A commit hash to filter full-scans by. */
        commit_hash?: string | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description Lists repositories for the specified organization. The authenticated user must be a member of the organization. */
      200: {
        content: {
          'application/json': {
            results: Array<{
              /** @default */
              id?: string | undefined
              /** @default */
              created_at?: string | undefined
              /** @default */
              updated_at?: string | undefined
              /** @default */
              organization_id?: string | undefined
              /** @default */
              organization_slug?: string | undefined
              /** @default */
              repository_id?: string | undefined
              /** @default */
              repository_slug?: string | undefined
              /** @default */
              branch?: string | null | undefined
              /** @default */
              commit_message?: string | null | undefined
              /** @default */
              commit_hash?: string | null | undefined
              /** @default 0 */
              pull_request?: number | null | undefined
              committers?: string[] | undefined
              /** @default */
              html_url?: string | null | undefined
              /** @default */
              api_url?: string | null | undefined
              /** @default */
              repo?: string | undefined
              /** @default */
              html_report_url?: string | undefined
              /** @default */
              integration_type?: string | null | undefined
              /** @default */
              integration_repo_url?: string | undefined
              /** @default */
              integration_branch_url?: string | null | undefined
              /** @default */
              integration_commit_url?: string | null | undefined
              /** @default */
              integration_pull_request_url?: string | null | undefined
              /**
               * @description The current processing status of the SBOM
               * @default pending
               * @enum {string|null}
               */
              scan_state?:
                | 'pending'
                | 'precrawl'
                | 'resolve'
                | 'scan'
                | null
                | undefined
            }>
            /** @default 0 */
            nextPage: number | null
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Create full scan
   * @description Create a full scan from a set of package manifest files. Returns a full scan including all SBOM artifacts.
   *
   * To get a list of supported filetypes that can be uploaded in a full-scan, see the [Get supported file types](/reference/getsupportedfiles) endpoint.
   *
   * The maximum number of files you can upload at a time is 5000 and each file can be no bigger than 67 MB.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - full-scans:create
   */
  CreateOrgFullScan: {
    parameters: {
      query: {
        /** @description The slug of the repository to associate the full-scan with. */
        repo: string
        /** @description The branch name to associate the full-scan with. Branch names must follow Git branch name rules: be 1–255 characters long; cannot be exactly @;  cannot begin or end with /, ., or .lock; cannot contain "//", "..", or "@{"; and cannot include control characters, spaces, or any of ~^:?*[. */
        branch?: string | undefined
        /** @description The commit message to associate the full-scan with. */
        commit_message?: string | undefined
        /** @description The commit hash to associate the full-scan with. */
        commit_hash?: string | undefined
        /** @description The pull request number to associate the full-scan with. */
        pull_request?: number | undefined
        /** @description The committers to associate the full-scan with. Set query more than once to set multiple. */
        committers?: string | undefined
        /** @description The integration type to associate the full-scan with. Defaults to "Api" if omitted. */
        integration_type?:
          | 'api'
          | 'github'
          | 'gitlab'
          | 'bitbucket'
          | 'azure'
          | undefined
        /** @description The integration org slug to associate the full-scan with. If omitted, the Socket org name will be used. This is used to generate links and badges. */
        integration_org_slug?: string | undefined
        /** @description Set the default branch of the repository to the branch of this full-scan. A branch name is required with this option. */
        make_default_branch?: boolean | undefined
        /** @description Designate this full-scan as the latest scan of a given branch. Default branch head scans are included in org alerts. This is only supported on the default branch. A branch name is required with this option. */
        set_as_pending_head?: boolean | undefined
        /** @description Create a temporary full-scan that is not listed in the reports dashboard. Cannot be used when set_as_pending_head=true. */
        tmp?: boolean | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    requestBody?: {
      content: {
        'multipart/form-data': {
          [key: string]: never
        }
      }
    }
    responses: {
      /** @description The details of the created full scan. */
      201: {
        content: {
          'application/json': {
            /** @default */
            id?: string | undefined
            /** @default */
            created_at?: string | undefined
            /** @default */
            updated_at?: string | undefined
            /** @default */
            organization_id?: string | undefined
            /** @default */
            organization_slug?: string | undefined
            /** @default */
            repository_id?: string | undefined
            /** @default */
            repository_slug?: string | undefined
            /** @default */
            branch?: string | null | undefined
            /** @default */
            commit_message?: string | null | undefined
            /** @default */
            commit_hash?: string | null | undefined
            /** @default 0 */
            pull_request?: number | null | undefined
            committers?: string[] | undefined
            /** @default */
            html_url?: string | null | undefined
            /** @default */
            api_url?: string | null | undefined
            /** @default */
            repo?: string | undefined
            /** @default */
            html_report_url?: string | undefined
            /** @default */
            integration_type?: string | null | undefined
            /** @default */
            integration_repo_url?: string | undefined
            /** @default */
            integration_branch_url?: string | null | undefined
            /** @default */
            integration_commit_url?: string | null | undefined
            /** @default */
            integration_pull_request_url?: string | null | undefined
            /**
             * @description The current processing status of the SBOM
             * @default pending
             * @enum {string|null}
             */
            scan_state?:
              | 'pending'
              | 'precrawl'
              | 'resolve'
              | 'scan'
              | null
              | undefined
            unmatchedFiles?: string[] | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Stream full scan
   * @description Stream all SBOM artifacts for a full scan.
   *
   * This endpoint returns the latest, available alert data for artifacts in the full scan (stale while revalidate).
   * Actively running analysis will be returned when available on subsequent runs.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - full-scans:list
   */
  getOrgFullScan: {
    parameters: {
      query: {
        /** @description Control which alert priority fields to include in the response. Set to "true" to include all fields, "false" to exclude all fields, or specify individual fields like "components,formula" to include only those fields. */
        include_alert_priority_details?:
          | boolean
          | Array<'component' | 'formula'>
        /** @description Include license details in the response. This can increase the response size significantly. */
        include_license_details: boolean
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the full scan */
        full_scan_id: string
      }
    }
    responses: {
      /** @description Socket issue lists and scores for all packages */
      200: {
        content: {
          'application/x-ndjson': components['schemas']['SocketArtifact']
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Delete full scan
   * @description Delete an existing full scan.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - full-scans:delete
   */
  deleteOrgFullScan: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the full scan */
        full_scan_id: string
      }
    }
    responses: {
      /** @description Success */
      200: {
        content: {
          'application/json': {
            /** @default ok */
            status: string
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get full scan metadata
   * @description Get metadata for a single full scan
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - full-scans:list
   */
  getOrgFullScanMetadata: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the full scan */
        full_scan_id: string
      }
    }
    responses: {
      /** @description The data from the full scan */
      200: {
        content: {
          'application/json': {
            /** @default */
            id?: string | undefined
            /** @default */
            created_at?: string | undefined
            /** @default */
            updated_at?: string | undefined
            /** @default */
            organization_id?: string | undefined
            /** @default */
            organization_slug?: string | undefined
            /** @default */
            repository_id?: string | undefined
            /** @default */
            repository_slug?: string | undefined
            /** @default */
            branch?: string | null | undefined
            /** @default */
            commit_message?: string | null | undefined
            /** @default */
            commit_hash?: string | null | undefined
            /** @default 0 */
            pull_request?: number | null | undefined
            committers?: string[] | undefined
            /** @default */
            html_url?: string | null | undefined
            /** @default */
            api_url?: string | null | undefined
            /** @default */
            repo?: string | undefined
            /** @default */
            html_report_url?: string | undefined
            /** @default */
            integration_type?: string | null | undefined
            /** @default */
            integration_repo_url?: string | undefined
            /** @default */
            integration_branch_url?: string | null | undefined
            /** @default */
            integration_commit_url?: string | null | undefined
            /** @default */
            integration_pull_request_url?: string | null | undefined
            /**
             * @description The current processing status of the SBOM
             * @default pending
             * @enum {string|null}
             */
            scan_state?:
              | 'pending'
              | 'precrawl'
              | 'resolve'
              | 'scan'
              | null
              | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Diff Full Scans
   * @deprecated
   * @description **This endpoint is deprecated.**
   *
   * Get the difference between two existing Full Scans. The results are not persisted.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - full-scans:list
   */
  GetOrgDiffScan: {
    parameters: {
      query: {
        /** @description The full scan ID of the base/target of the diff (older) */
        after: string
        /** @description The full scan ID of the head/changed side of the diff (newer) */
        before: string
        /** @description Include license details in the response. This can increase the response size significantly. */
        include_license_details?: boolean | undefined
        /** @description Omit unchanged artifacts from the response. When set to true, the unchanged field will be set to null. */
        omit_unchanged?: boolean | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description The difference between the two provided Full Scans. */
      200: {
        content: {
          'application/json': {
            before: {
              /** @default */
              id: string
              /** @default */
              created_at: string
              /** @default */
              updated_at: string
              /** @default */
              organization_id: string
              /** @default */
              organization_slug: string
              /** @default */
              repository_id: string
              /** @default */
              repository_slug: string
              /** @default */
              branch: string | null
              /** @default */
              commit_message: string | null
              /** @default */
              commit_hash: string | null
              /** @default 0 */
              pull_request: number | null
              committers: string[]
              /** @default */
              html_url: string | null
              /** @default */
              api_url: string | null
            }
            after: {
              /** @default */
              id: string
              /** @default */
              created_at: string
              /** @default */
              updated_at: string
              /** @default */
              organization_id: string
              /** @default */
              organization_slug: string
              /** @default */
              repository_id: string
              /** @default */
              repository_slug: string
              /** @default */
              branch: string | null
              /** @default */
              commit_message: string | null
              /** @default */
              commit_hash: string | null
              /** @default 0 */
              pull_request: number | null
              committers: string[]
              /** @default */
              html_url: string | null
              /** @default */
              api_url: string | null
            }
            artifacts: {
              added: Array<components['schemas']['SocketDiffArtifact']>
              removed: Array<components['schemas']['SocketDiffArtifact']>
              unchanged: Array<
                components['schemas']['SocketDiffArtifact']
              > | null
              replaced: Array<components['schemas']['SocketDiffArtifact']>
              updated: Array<components['schemas']['SocketDiffArtifact']>
            }
            /** @default false */
            directDependenciesChanged: boolean
            /** @default */
            diff_report_url: string | null
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * SCM Comment for Scan Diff
   * @deprecated
   * @description **This endpoint is deprecated.**
   *
   * Get the dependency overview and dependency alert comments in GitHub flavored markdown between the diff between two existing full scans.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - full-scans:list
   */
  GetOrgFullScanDiffGfm: {
    parameters: {
      query: {
        /** @description The head full scan ID (newer) */
        after: string
        /** @description The base full scan ID (older) */
        before: string
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description Metadata about the full scans and the dependency overview and dependency alert comment. Can be used in a pull request context. */
      200: {
        content: {
          'application/json': {
            before: {
              /** @default */
              id: string
              /** @default */
              created_at: string
              /** @default */
              updated_at: string
              /** @default */
              organization_id: string
              /** @default */
              organization_slug: string
              /** @default */
              repository_id: string
              /** @default */
              repository_slug: string
              /** @default */
              branch: string | null
              /** @default */
              commit_message: string | null
              /** @default */
              commit_hash: string | null
              /** @default 0 */
              pull_request: number | null
              committers: string[]
              /** @default */
              html_url: string | null
              /** @default */
              api_url: string | null
            }
            after: {
              /** @default */
              id: string
              /** @default */
              created_at: string
              /** @default */
              updated_at: string
              /** @default */
              organization_id: string
              /** @default */
              organization_slug: string
              /** @default */
              repository_id: string
              /** @default */
              repository_slug: string
              /** @default */
              branch: string | null
              /** @default */
              commit_message: string | null
              /** @default */
              commit_hash: string | null
              /** @default 0 */
              pull_request: number | null
              committers: string[]
              /** @default */
              html_url: string | null
              /** @default */
              api_url: string | null
            }
            comments: {
              /** @default */
              overview: string
              /** @default */
              alerts: string
            }
            /** @default false */
            directDependenciesChanged: boolean
            /** @default */
            diff_report_url: string | null
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Export CycloneDX SBOM (Beta)
   * @description Export a Socket SBOM as a CycloneDX SBOM
   *
   * Supported ecosystems:
   *
   * - crates
   * - go
   * - maven
   * - npm
   * - nuget
   * - pypi
   * - rubygems
   * - spdx
   * - cdx
   *
   * Unsupported ecosystems are filtered from the export.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - report:read
   */
  exportCDX: {
    parameters: {
      query?: {
        /**
         * @description The person(s) who created the BOM.
         * Set this value if you're intending the modify the BOM and claim authorship.
         */
        author?: string | undefined
        /** @description Dependency track project group */
        project_group?: string | undefined
        /** @description Dependency track project name. Default use the directory name */
        project_name?: string | undefined
        /** @description Dependency track project version */
        project_version?: string | undefined
        /** @description Dependency track project id. Either provide the id or the project name and version together */
        project_id?: string | undefined
        /** @description Include vulnerability information in the SBOM. Also includes reachability/VEX if available */
        include_vulnerabilities?: string | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The full scan OR sbom report ID */
        id: string
      }
    }
    responses: {
      /** @description CycloneDX SBOM */
      200: {
        content: {
          'application/json': components['schemas']['CDXManifestSchema']
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Export SPDX SBOM (Beta)
   * @description Export a Socket SBOM as a SPDX SBOM
   *
   * Supported ecosystems:
   *
   * - crates
   * - go
   * - maven
   * - npm
   * - nuget
   * - pypi
   * - rubygems
   * - spdx
   * - cdx
   *
   * Unsupported ecosystems are filtered from the export.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - report:read
   */
  exportSPDX: {
    parameters: {
      query?: {
        /**
         * @description The person(s) who created the BOM.
         * Set this value if you're intending the modify the BOM and claim authorship.
         */
        author?: string | undefined
        /** @description Dependency track project group */
        project_group?: string | undefined
        /** @description Dependency track project name. Default use the directory name */
        project_name?: string | undefined
        /** @description Dependency track project version */
        project_version?: string | undefined
        /** @description Dependency track project id. Either provide the id or the project name and version together */
        project_id?: string | undefined
        /** @description Include vulnerability information in the SBOM. Also includes reachability/VEX if available */
        include_vulnerabilities?: string | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The full scan OR sbom report ID */
        id: string
      }
    }
    responses: {
      /** @description SPDX SBOM */
      200: {
        content: {
          'application/json': components['schemas']['SPDXManifestSchema']
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * List diff scans
   * @description Returns a paginated list of all diff scans in an organization.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - diff-scans:list
   */
  listOrgDiffScans: {
    parameters: {
      query?: {
        /** @description Specify sort field. */
        sort?: 'created_at' | 'updated_at' | undefined
        /** @description Specify sort direction. */
        direction?: 'asc' | 'desc' | undefined
        /** @description Specify the maximum number of results to return per page. */
        per_page?: number | undefined
        /** @description Cursor for pagination. Use the next_cursor or prev_cursor from previous responses. */
        cursor?: string | undefined
        /** @description Filter by repository ID. */
        repository_id?: string | undefined
        /** @description Filter by before full scan ID. */
        before_full_scan_id?: string | undefined
        /** @description Filter by after full scan ID. */
        after_full_scan_id?: string | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description Lists diff scans for the specified organization. */
      200: {
        content: {
          'application/json': {
            results: Array<{
              /** @default */
              id: string
              /** @default */
              organization_id: string
              /** @default */
              repository_id: string
              /** @default */
              created_at: string
              /** @default */
              updated_at: string
              /** @default */
              before_full_scan_id: string
              /** @default */
              after_full_scan_id: string
              /** @default */
              description: string | null
              /** @default */
              external_href: string | null
              /** @default false */
              merge: boolean
              /** @default */
              html_url: string | null
              /** @default */
              api_url: string | null
            }>
            /** @default */
            next_page_href: string | null
            /** @default */
            next_cursor: string | null
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get diff scan
   * @description Get the difference between two full scans from an existing diff scan resource.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - diff-scans:list
   */
  getDiffScanById: {
    parameters: {
      query?: {
        /** @description Omit license details in the response. This can reduce the size of the response significantly, but will not include license information for the artifacts. */
        omit_license_details?: boolean | undefined
        /** @description Omit unchanged artifacts from the response. When set to true, the unchanged field will be set to null. */
        omit_unchanged?: boolean | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the diff scan */
        diff_scan_id: string
      }
    }
    responses: {
      /** @description The difference between the two Full Scans in the diff scan. */
      200: {
        content: {
          'application/json': {
            diff_scan: {
              /** @default */
              id: string
              /** @default */
              organization_id: string
              /** @default */
              repository_id: string
              /** @default */
              created_at: string
              /** @default */
              updated_at: string
              before_full_scan: {
                /** @default */
                id: string
                /** @default */
                created_at: string
                /** @default */
                updated_at: string
                /** @default */
                organization_id: string
                /** @default */
                organization_slug: string
                /** @default */
                repository_id: string
                /** @default */
                repository_slug: string
                /** @default */
                branch: string | null
                /** @default */
                commit_message: string | null
                /** @default */
                commit_hash: string | null
                /** @default 0 */
                pull_request: number | null
                committers: string[]
                /** @default */
                html_url: string | null
                /** @default */
                api_url: string | null
              }
              after_full_scan: {
                /** @default */
                id: string
                /** @default */
                created_at: string
                /** @default */
                updated_at: string
                /** @default */
                organization_id: string
                /** @default */
                organization_slug: string
                /** @default */
                repository_id: string
                /** @default */
                repository_slug: string
                /** @default */
                branch: string | null
                /** @default */
                commit_message: string | null
                /** @default */
                commit_hash: string | null
                /** @default 0 */
                pull_request: number | null
                committers: string[]
                /** @default */
                html_url: string | null
                /** @default */
                api_url: string | null
              }
              /** @default */
              description: string | null
              /** @default */
              external_href: string | null
              /** @default false */
              merge: boolean
              /** @default */
              html_url: string | null
              /** @default */
              api_url: string | null
              artifacts: {
                added: Array<components['schemas']['SocketDiffArtifact']>
                removed: Array<components['schemas']['SocketDiffArtifact']>
                unchanged: Array<
                  components['schemas']['SocketDiffArtifact']
                > | null
                replaced: Array<components['schemas']['SocketDiffArtifact']>
                updated: Array<components['schemas']['SocketDiffArtifact']>
              }
            }
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Delete diff scan
   * @description Delete an existing diff scan.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - diff-scans:delete
   */
  deleteOrgDiffScan: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the diff scan */
        diff_scan_id: string
      }
    }
    responses: {
      /** @description Success */
      200: {
        content: {
          'application/json': {
            /** @default ok */
            status: string
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * SCM Comment for Diff Scan
   * @description Get the dependency overview and dependency alert comments in GitHub flavored markdown for an existing diff scan.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - diff-scans:list
   */
  GetDiffScanGfm: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the diff scan */
        diff_scan_id: string
      }
    }
    responses: {
      /** @description Metadata about the full scans and the dependency overview and dependency alert comment. Can be used in a pull request context. */
      200: {
        content: {
          'application/json': {
            diff_scan: {
              /** @default */
              id: string
              /** @default */
              organization_id: string
              /** @default */
              repository_id: string
              /** @default */
              created_at: string
              /** @default */
              updated_at: string
              before_full_scan: {
                /** @default */
                id: string
                /** @default */
                created_at: string
                /** @default */
                updated_at: string
                /** @default */
                organization_id: string
                /** @default */
                organization_slug: string
                /** @default */
                repository_id: string
                /** @default */
                repository_slug: string
                /** @default */
                branch: string | null
                /** @default */
                commit_message: string | null
                /** @default */
                commit_hash: string | null
                /** @default 0 */
                pull_request: number | null
                committers: string[]
                /** @default */
                html_url: string | null
                /** @default */
                api_url: string | null
              }
              after_full_scan: {
                /** @default */
                id: string
                /** @default */
                created_at: string
                /** @default */
                updated_at: string
                /** @default */
                organization_id: string
                /** @default */
                organization_slug: string
                /** @default */
                repository_id: string
                /** @default */
                repository_slug: string
                /** @default */
                branch: string | null
                /** @default */
                commit_message: string | null
                /** @default */
                commit_hash: string | null
                /** @default 0 */
                pull_request: number | null
                committers: string[]
                /** @default */
                html_url: string | null
                /** @default */
                api_url: string | null
              }
              /** @default */
              description: string | null
              /** @default */
              external_href: string | null
              /** @default false */
              merge: boolean
              /** @default */
              html_url: string | null
              /** @default */
              api_url: string | null
              gfm: {
                /** @default */
                overview: string
                /** @default */
                alerts: string
              }
            }
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Create diff scan from repository HEAD full-scan
   * @description Create a diff scan between the repository's current HEAD full scan and a new full scan from uploaded manifest files.
   * Returns metadata about the diff scan. Once the diff scan is created, fetch the diff scan from
   * the [api_url](/reference/getDiffScanById) URL to get the contents of the diff.
   *
   * The maximum number of files you can upload at a time is 5000 and each file can be no bigger than 67 MB.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   *       - repo:list
   * - diff-scans:create
   * - full-scans:create
   */
  createOrgRepoDiff: {
    parameters: {
      query?: {
        /** @description A description of the diff scan. This will be used in the diff report and can be used to provide context for the changes made. */
        description?: string | undefined
        /** @description An external URL to associate with the diff scan. This can be a link to a pull request, issue, or any other relevant resource. */
        external_href?: string | undefined
        /** @description The branch name to associate the new full-scan with. Branch names must follow Git branch name rules: be 1–255 characters long; cannot be exactly @;  cannot begin or end with /, ., or .lock; cannot contain "//", "..", or "@{"; and cannot include control characters, spaces, or any of ~^:?*[. */
        branch?: string | undefined
        /** @description The commit message to associate the new full-scan with. */
        commit_message?: string | undefined
        /** @description The commit hash to associate the full-scan with. */
        commit_hash?: string | undefined
        /** @description The pull request number to associate the new full-scan with. */
        pull_request?: number | undefined
        /** @description The committers to associate the new full-scan with. Set query more than once to set multiple committers. */
        committers?: string | undefined
        /** @description The integration type to associate the new full-scan with. Defaults to "api" if omitted. */
        integration_type?:
          | 'api'
          | 'github'
          | 'gitlab'
          | 'bitbucket'
          | 'azure'
          | undefined
        /** @description The integration org slug to associate the new full-scan with. If omitted, the Socket org name will be used. This is used to generate links and badges. */
        integration_org_slug?: string | undefined
        /** @description Set to true when running a diff between a merged commit and its parent commit in the same branch. Set to false when running diffs in an open PR between unmerged commits. */
        merge?: boolean | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The slug of the repository */
        repo_slug: string
      }
    }
    requestBody?: {
      content: {
        'multipart/form-data': {
          [key: string]: never
        }
      }
    }
    responses: {
      /** @description The details of the new full scan and diff scan between the two scans. */
      201: {
        content: {
          'application/json': {
            diff_scan: {
              /** @default */
              id: string
              /** @default */
              organization_id: string
              /** @default */
              repository_id: string
              /** @default */
              created_at: string
              /** @default */
              updated_at: string
              before_full_scan: {
                /** @default */
                id: string
                /** @default */
                created_at: string
                /** @default */
                updated_at: string
                /** @default */
                organization_id: string
                /** @default */
                organization_slug: string
                /** @default */
                repository_id: string
                /** @default */
                repository_slug: string
                /** @default */
                branch: string | null
                /** @default */
                commit_message: string | null
                /** @default */
                commit_hash: string | null
                /** @default 0 */
                pull_request: number | null
                committers: string[]
                /** @default */
                html_url: string | null
                /** @default */
                api_url: string | null
              }
              after_full_scan: {
                /** @default */
                id: string
                /** @default */
                created_at: string
                /** @default */
                updated_at: string
                /** @default */
                organization_id: string
                /** @default */
                organization_slug: string
                /** @default */
                repository_id: string
                /** @default */
                repository_slug: string
                /** @default */
                branch: string | null
                /** @default */
                commit_message: string | null
                /** @default */
                commit_hash: string | null
                /** @default 0 */
                pull_request: number | null
                committers: string[]
                /** @default */
                html_url: string | null
                /** @default */
                api_url: string | null
              }
              /** @default */
              description: string | null
              /** @default */
              external_href: string | null
              /** @default false */
              merge: boolean
              /** @default */
              html_url: string | null
              /** @default */
              api_url: string | null
            }
            unmatchedAfterFiles: string[]
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Create diff scan from full scan IDs
   * @description Create a diff scan from two existing full scan IDs. The full scans must be in the same repository.
   * Returns metadata about the diff scan. Once the diff scan is created, fetch the diff scan from
   * the [api_url](/reference/getDiffScanById) URL to get the contents of the diff.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   *       - diff-scans:create
   * - full-scans:list
   */
  createOrgDiffScanFromIds: {
    parameters: {
      query: {
        /** @description The ID of the before/base full scan (older) */
        before: string
        /** @description The ID of the after/head full scan (newer) */
        after: string
        /** @description A description of the diff scan. This will be used in the diff report and can be used to provide context for the changes made. */
        description?: string | undefined
        /** @description An external URL to associate with the diff scan. This can be a link to a pull request, issue, or any other relevant resource. */
        external_href?: string | undefined
        /** @description Set to true when running a diff between a merged commit and its parent commit in the same branch. Set to false when running diffs in an open PR between unmerged commits. */
        merge?: boolean | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description The details of the created diff scan. */
      201: {
        content: {
          'application/json': {
            diff_scan: {
              /** @default */
              id: string
              /** @default */
              organization_id: string
              /** @default */
              repository_id: string
              /** @default */
              created_at: string
              /** @default */
              updated_at: string
              before_full_scan: {
                /** @default */
                id: string
                /** @default */
                created_at: string
                /** @default */
                updated_at: string
                /** @default */
                organization_id: string
                /** @default */
                organization_slug: string
                /** @default */
                repository_id: string
                /** @default */
                repository_slug: string
                /** @default */
                branch: string | null
                /** @default */
                commit_message: string | null
                /** @default */
                commit_hash: string | null
                /** @default 0 */
                pull_request: number | null
                committers: string[]
                /** @default */
                html_url: string | null
                /** @default */
                api_url: string | null
              }
              after_full_scan: {
                /** @default */
                id: string
                /** @default */
                created_at: string
                /** @default */
                updated_at: string
                /** @default */
                organization_id: string
                /** @default */
                organization_slug: string
                /** @default */
                repository_id: string
                /** @default */
                repository_slug: string
                /** @default */
                branch: string | null
                /** @default */
                commit_message: string | null
                /** @default */
                commit_hash: string | null
                /** @default 0 */
                pull_request: number | null
                committers: string[]
                /** @default */
                html_url: string | null
                /** @default */
                api_url: string | null
              }
              /** @default */
              description: string | null
              /** @default */
              external_href: string | null
              /** @default false */
              merge: boolean
              /** @default */
              html_url: string | null
              /** @default */
              api_url: string | null
            }
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * List Org Alert Triage
   * @description Get alert triage actions for an organization.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - triage:alerts-list
   */
  getOrgTriage: {
    parameters: {
      query?: {
        sort?: string | undefined
        direction?: string | undefined
        per_page?: number | undefined
        page?: number | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description Lists triage actions for the specified organization. */
      200: {
        content: {
          'application/json': {
            results: Array<{
              /**
               * @description The alert_key associated with the triage state
               * @default
               */
              alert_key?: string | undefined
              /**
               * @description The creation date of the triage action
               * @default
               */
              created_at?: string | undefined
              /**
               * @description The last update date of the triage action
               * @default
               */
              updated_at?: string | undefined
              /**
               * @description The note associated with the triage action
               * @default
               */
              note?: string | undefined
              /**
               * @description The organization id associated with the triage action
               * @default
               */
              organization_id?: string | undefined
              /**
               * @description The triage state of the alert
               * @default inherit
               * @enum {string}
               */
              state?:
                | 'block'
                | 'ignore'
                | 'inherit'
                | 'monitor'
                | 'warn'
                | undefined
            }>
            /** @default 0 */
            nextPage: number | null
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Update Org Alert Triage
   * @description Update triage actions on organizaton alerts.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - triage:alerts-update
   */
  updateOrgAlertTriage: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          alertTriage: Array<{
            /** @default */
            alertKey?: string | undefined
            /** @default */
            note?: string | undefined
            /**
             * @description The triage state of the alert
             * @enum {string}
             */
            state?:
              | 'block'
              | 'ignore'
              | 'inherit'
              | 'monitor'
              | 'warn'
              | undefined
          }>
        }
      }
    }
    responses: {
      /** @description Updated Alert Triage */
      202: {
        content: {
          'application/json': {
            /** @default */
            result: string
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * List repositories
   * @description Lists repositories for the specified organization.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo:list
   */
  getOrgRepoList: {
    parameters: {
      query?: {
        sort?: string | undefined
        direction?: string | undefined
        per_page?: number | undefined
        page?: number | undefined
        /** @description Include archived repositories in the results */
        include_archived?: boolean | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description Lists repositories for the specified organization. The authenticated user must be a member of the organization. */
      200: {
        content: {
          'application/json': {
            results: Array<{
              /**
               * @description The ID of the repository
               * @default
               */
              id?: string | undefined
              /**
               * @description The creation date of the repository
               * @default
               */
              created_at?: string | undefined
              /**
               * @description The last update date of the repository
               * @default
               */
              updated_at?: string | undefined
              /**
               * @description The slug of the repository
               * @default
               */
              slug?: string | undefined
              /**
               * @description The ID of the head full scan of the repository
               * @default
               */
              head_full_scan_id?: string | null | undefined
              integration_meta?: {
                /** @enum {string} */
                type?: 'github' | undefined
                value?: {
                  /**
                   * @description The GitHub installation_id of the active associated Socket GitHub App
                   * @default
                   */
                  installation_id: string
                  /**
                   * @description The GitHub login name that the active Socket GitHub App installation is installed to
                   * @default
                   */
                  installation_login: string
                  /**
                   * @description The name of the associated GitHub repo.
                   * @default
                   */
                  repo_name: string | null
                  /**
                   * @description The id of the associated GitHub repo.
                   * @default
                   */
                  repo_id: string | null
                }
              } | null
              /**
               * @description The name of the repository
               * @default
               */
              name?: string | undefined
              /**
               * @description The description of the repository
               * @default
               */
              description?: string | null | undefined
              /**
               * @description The homepage URL of the repository
               * @default
               */
              homepage?: string | null | undefined
              /**
               * @description The visibility of the repository
               * @default private
               * @enum {string}
               */
              visibility?: 'public' | 'private' | undefined
              /**
               * @description Whether the repository is archived or not
               * @default false
               */
              archived?: boolean | undefined
              /**
               * @description The default branch of the repository
               * @default main
               */
              default_branch?: string | null | undefined
            }>
            /** @default 0 */
            nextPage: number | null
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Create repository
   * @description Create a repository.
   *
   * Repos collect Full scans and Diff scans and are typically associated with a git repo.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo:create
   */
  createOrgRepo: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The name of the repository
           * @default
           */
          name?: string | undefined
          /**
           * @description The description of the repository
           * @default
           */
          description?: string | null | undefined
          /**
           * @description The homepage URL of the repository
           * @default
           */
          homepage?: string | null | undefined
          /**
           * @description The visibility of the repository
           * @default private
           * @enum {string}
           */
          visibility?: 'public' | 'private' | undefined
          /**
           * @description Whether the repository is archived or not
           * @default false
           */
          archived?: boolean | undefined
          /**
           * @description The default branch of the repository
           * @default main
           */
          default_branch?: string | null | undefined
        }
      }
    }
    responses: {
      /** @description Lists repositories for the specified organization. The authenticated user must be a member of the organization. */
      201: {
        content: {
          'application/json': {
            /**
             * @description The ID of the repository
             * @default
             */
            id?: string | undefined
            /**
             * @description The creation date of the repository
             * @default
             */
            created_at?: string | undefined
            /**
             * @description The last update date of the repository
             * @default
             */
            updated_at?: string | undefined
            /**
             * @description The slug of the repository
             * @default
             */
            slug?: string | undefined
            /**
             * @description The ID of the head full scan of the repository
             * @default
             */
            head_full_scan_id?: string | null | undefined
            integration_meta?: {
              /** @enum {string} */
              type?: 'github' | undefined
              value?: {
                /**
                 * @description The GitHub installation_id of the active associated Socket GitHub App
                 * @default
                 */
                installation_id: string
                /**
                 * @description The GitHub login name that the active Socket GitHub App installation is installed to
                 * @default
                 */
                installation_login: string
                /**
                 * @description The name of the associated GitHub repo.
                 * @default
                 */
                repo_name: string | null
                /**
                 * @description The id of the associated GitHub repo.
                 * @default
                 */
                repo_id: string | null
              }
            } | null
            /**
             * @description The name of the repository
             * @default
             */
            name?: string | undefined
            /**
             * @description The description of the repository
             * @default
             */
            description?: string | null | undefined
            /**
             * @description The homepage URL of the repository
             * @default
             */
            homepage?: string | null | undefined
            /**
             * @description The visibility of the repository
             * @default private
             * @enum {string}
             */
            visibility?: 'public' | 'private' | undefined
            /**
             * @description Whether the repository is archived or not
             * @default false
             */
            archived?: boolean | undefined
            /**
             * @description The default branch of the repository
             * @default main
             */
            default_branch?: string | null | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get repository
   * @description Retrieve a repository associated with an organization.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo:list
   */
  getOrgRepo: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The slug of the repository */
        repo_slug: string
      }
    }
    responses: {
      /** @description Lists repositories for the specified organization. The authenticated user must be a member of the organization. */
      200: {
        content: {
          'application/json': {
            /**
             * @description The ID of the repository
             * @default
             */
            id: string
            /**
             * @description The creation date of the repository
             * @default
             */
            created_at: string
            /**
             * @description The last update date of the repository
             * @default
             */
            updated_at: string
            /**
             * @description The slug of the repository
             * @default
             */
            slug: string
            /**
             * @description The ID of the head full scan of the repository
             * @default
             */
            head_full_scan_id: string | null
            integration_meta: {
              /** @enum {string} */
              type?: 'github' | undefined
              value?: {
                /**
                 * @description The GitHub installation_id of the active associated Socket GitHub App
                 * @default
                 */
                installation_id: string
                /**
                 * @description The GitHub login name that the active Socket GitHub App installation is installed to
                 * @default
                 */
                installation_login: string
                /**
                 * @description The name of the associated GitHub repo.
                 * @default
                 */
                repo_name: string | null
                /**
                 * @description The id of the associated GitHub repo.
                 * @default
                 */
                repo_id: string | null
              }
            } | null
            /**
             * @description The name of the repository
             * @default
             */
            name: string
            /**
             * @description The description of the repository
             * @default
             */
            description: string | null
            /**
             * @description The homepage URL of the repository
             * @default
             */
            homepage: string | null
            /**
             * @description The visibility of the repository
             * @default private
             * @enum {string}
             */
            visibility: 'public' | 'private'
            /**
             * @description Whether the repository is archived or not
             * @default false
             */
            archived: boolean
            /**
             * @description The default branch of the repository
             * @default main
             */
            default_branch: string | null
            /**
             * @description The slug of the repository. This typo is intentionally preserved for backwards compatibility reasons.
             * @default
             */
            slig: string
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Update repository
   * @description Update details of an existing repository.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo:update
   */
  updateOrgRepo: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The slug of the repository */
        repo_slug: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The name of the repository
           * @default
           */
          name?: string | undefined
          /**
           * @description The description of the repository
           * @default
           */
          description?: string | null | undefined
          /**
           * @description The homepage URL of the repository
           * @default
           */
          homepage?: string | null | undefined
          /**
           * @description The visibility of the repository
           * @default private
           * @enum {string}
           */
          visibility?: 'public' | 'private' | undefined
          /**
           * @description Whether the repository is archived or not
           * @default false
           */
          archived?: boolean | undefined
          /**
           * @description The default branch of the repository
           * @default main
           */
          default_branch?: string | null | undefined
        }
      }
    }
    responses: {
      /** @description Updated repository details */
      200: {
        content: {
          'application/json': {
            /**
             * @description The ID of the repository
             * @default
             */
            id?: string | undefined
            /**
             * @description The creation date of the repository
             * @default
             */
            created_at?: string | undefined
            /**
             * @description The last update date of the repository
             * @default
             */
            updated_at?: string | undefined
            /**
             * @description The slug of the repository
             * @default
             */
            slug?: string | undefined
            /**
             * @description The ID of the head full scan of the repository
             * @default
             */
            head_full_scan_id?: string | null | undefined
            integration_meta?: {
              /** @enum {string} */
              type?: 'github' | undefined
              value?: {
                /**
                 * @description The GitHub installation_id of the active associated Socket GitHub App
                 * @default
                 */
                installation_id: string
                /**
                 * @description The GitHub login name that the active Socket GitHub App installation is installed to
                 * @default
                 */
                installation_login: string
                /**
                 * @description The name of the associated GitHub repo.
                 * @default
                 */
                repo_name: string | null
                /**
                 * @description The id of the associated GitHub repo.
                 * @default
                 */
                repo_id: string | null
              }
            } | null
            /**
             * @description The name of the repository
             * @default
             */
            name?: string | undefined
            /**
             * @description The description of the repository
             * @default
             */
            description?: string | null | undefined
            /**
             * @description The homepage URL of the repository
             * @default
             */
            homepage?: string | null | undefined
            /**
             * @description The visibility of the repository
             * @default private
             * @enum {string}
             */
            visibility?: 'public' | 'private' | undefined
            /**
             * @description Whether the repository is archived or not
             * @default false
             */
            archived?: boolean | undefined
            /**
             * @description The default branch of the repository
             * @default main
             */
            default_branch?: string | null | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Delete repository
   * @description Delete a single repository and all of its associated Full scans and Diff scans.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo:delete
   */
  deleteOrgRepo: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The slug of the repository */
        repo_slug: string
      }
    }
    responses: {
      /** @description Success */
      200: {
        content: {
          'application/json': {
            /** @default ok */
            status: string
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Associate repository label (beta)
   * @description Associate a repository label with a repository.
   *
   * Labels can be used to group and organize repositories and to apply security/license policies.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo-label:update
   */
  associateOrgRepoLabel: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the label */
        label_id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The ID of the repository to associate with the label
           * @default
           */
          repository_id?: string | undefined
        }
      }
    }
    responses: {
      /** @description Associates a repository label with the specified repository. The authenticated user must be a member of the organization. */
      200: {
        content: {
          'application/json': {
            /**
             * @description Status of the operation
             * @default
             */
            status?: string | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * List repository labels (beta)
   * @description Lists repository labels for the specified organization.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo-label:list
   */
  getOrgRepoLabelList: {
    parameters: {
      query?: {
        per_page?: number | undefined
        page?: number | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description Lists repository labels for the specified organization. The authenticated user must be a member of the organization. */
      200: {
        content: {
          'application/json': {
            results: Array<{
              /**
               * @description The ID of the label
               * @default
               */
              id?: string | undefined
              /**
               * @description The name of the label
               * @default
               */
              name?: string | undefined
              /** @description The IDs of repositories this label is associated with */
              repository_ids?: string[] | undefined
              /**
               * @description Whether the label has a security policy
               * @default false
               */
              has_security_policy?: boolean | undefined
              /**
               * @description Whether the label has a license policy
               * @default false
               */
              has_license_policy?: boolean | undefined
            }>
            /** @default 0 */
            nextPage: number | null
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Create repository label (beta)
   * @description Create a repository label.
   *
   * Labels can be used to group and organize repositories and to apply security/license policies.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo-label:create
   */
  createOrgRepoLabel: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    requestBody: {
      content: {
        'application/json': {
          /**
           * @description The name of the label
           * @default
           */
          name: string
        }
      }
    }
    responses: {
      /** @description Creates a new repository label for the specified organization. The authenticated user must be a member of the organization. Label names must be non-empty and less than 1000 characters. */
      201: {
        content: {
          'application/json': {
            /**
             * @description The ID of the label
             * @default
             */
            id?: string | undefined
            /**
             * @description The name of the label
             * @default
             */
            name?: string | undefined
            /** @description The IDs of repositories this label is associated with */
            repository_ids?: string[] | undefined
            /**
             * @description Whether the label has a security policy
             * @default false
             */
            has_security_policy?: boolean | undefined
            /**
             * @description Whether the label has a license policy
             * @default false
             */
            has_license_policy?: boolean | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      /** @description Conflict */
      409: {
        content: {
          'application/json': {
            error: {
              /** @default */
              message: string
              /** @default null */
              details: Record<string, unknown> | null
            }
          }
        }
      }
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get repository label (beta)
   * @description Retrieve a repository label associated with an organization and label ID.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo-label:list
   */
  getOrgRepoLabel: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the label */
        label_id: string
      }
    }
    responses: {
      /** @description Returns a specific repository label for the specified organization. The authenticated user must be a member of the organization. */
      200: {
        content: {
          'application/json': {
            /**
             * @description The ID of the label
             * @default
             */
            id?: string | undefined
            /**
             * @description The name of the label
             * @default
             */
            name?: string | undefined
            /** @description The IDs of repositories this label is associated with */
            repository_ids?: string[] | undefined
            /**
             * @description Whether the label has a security policy
             * @default false
             */
            has_security_policy?: boolean | undefined
            /**
             * @description Whether the label has a license policy
             * @default false
             */
            has_license_policy?: boolean | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Update repository label (beta)
   * @description Update a repository label name.
   *
   * Labels can be used to group and organize repositories and to apply security/license policies.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo-label:update
   */
  updateOrgRepoLabel: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the label */
        label_id: string
      }
    }
    requestBody: {
      content: {
        'application/json': {
          /**
           * @description The name of the label
           * @default
           */
          name: string
        }
      }
    }
    responses: {
      /** @description Updates an existing repository label for the specified organization. The authenticated user must be a member of the organization. Label names must be non-empty and less than 1000 characters. */
      200: {
        content: {
          'application/json': {
            /**
             * @description The ID of the label
             * @default
             */
            id?: string | undefined
            /**
             * @description The name of the label
             * @default
             */
            name?: string | undefined
            /** @description The IDs of repositories this label is associated with */
            repository_ids?: string[] | undefined
            /**
             * @description Whether the label has a security policy
             * @default false
             */
            has_security_policy?: boolean | undefined
            /**
             * @description Whether the label has a license policy
             * @default false
             */
            has_license_policy?: boolean | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      /** @description Conflict */
      409: {
        content: {
          'application/json': {
            error: {
              /** @default */
              message: string
              /** @default null */
              details: Record<string, unknown> | null
            }
          }
        }
      }
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Delete repository label (beta)
   * @description Delete a repository label and all of its associations (repositories, security policy, license policy, etc.).
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo-label:delete
   */
  deleteOrgRepoLabel: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the label */
        label_id: string
      }
    }
    responses: {
      /** @description Success */
      200: {
        content: {
          'application/json': {
            /** @default ok */
            status: string
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get repository label setting (beta)
   * @description Retrieve the setting (e.g. security/license policy) for a repository label.
   *
   *
   * Note that repository label settings currently only support `issueRules`
   * and `issueRulesPolicyDefault`. A policy is considered "active" for
   * a given repository label if the `issueRulesPolicyDefault` is set,
   * and inactive when not set. `issueRules` can be used to further
   * refine the alert triage strategy.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo-label:list
   */
  getOrgRepoLabelSetting: {
    parameters: {
      query: {
        /** @description Setting key to query for in the repository label. Valid values include issueRules, issueRulesPolicyDefault, and licensePolicy */
        setting_key: string
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the label */
        label_id: string
      }
    }
    responses: {
      /** @description Returns the setting for the specified repository label. The authenticated user must be a member of the organization. */
      200: {
        content: {
          'application/json': {
            issueRules?: {
              gptSecurity?: {
                /**
                 * @description The action to take for gptSecurity issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gptAnomaly?: {
                /**
                 * @description The action to take for gptAnomaly issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gptMalware?: {
                /**
                 * @description The action to take for gptMalware issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              filesystemAccess?: {
                /**
                 * @description The action to take for filesystemAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              networkAccess?: {
                /**
                 * @description The action to take for networkAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              shellAccess?: {
                /**
                 * @description The action to take for shellAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              debugAccess?: {
                /**
                 * @description The action to take for debugAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromePermission?: {
                /**
                 * @description The action to take for chromePermission issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromeHostPermission?: {
                /**
                 * @description The action to take for chromeHostPermission issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromeWildcardHostPermission?: {
                /**
                 * @description The action to take for chromeWildcardHostPermission issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromeContentScript?: {
                /**
                 * @description The action to take for chromeContentScript issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              criticalCVE?: {
                /**
                 * @description The action to take for criticalCVE issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              cve?: {
                /**
                 * @description The action to take for cve issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              mediumCVE?: {
                /**
                 * @description The action to take for mediumCVE issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              mildCVE?: {
                /**
                 * @description The action to take for mildCVE issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              emptyPackage?: {
                /**
                 * @description The action to take for emptyPackage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              trivialPackage?: {
                /**
                 * @description The action to take for trivialPackage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noREADME?: {
                /**
                 * @description The action to take for noREADME issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              shrinkwrap?: {
                /**
                 * @description The action to take for shrinkwrap issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              generic?: {
                /**
                 * @description The action to take for generic issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              licenseSpdxDisj?: {
                /**
                 * @description The action to take for licenseSpdxDisj issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unsafeCopyright?: {
                /**
                 * @description The action to take for unsafeCopyright issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              licenseChange?: {
                /**
                 * @description The action to take for licenseChange issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              nonOSILicense?: {
                /**
                 * @description The action to take for nonOSILicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              deprecatedLicense?: {
                /**
                 * @description The action to take for deprecatedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingLicense?: {
                /**
                 * @description The action to take for missingLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              nonSPDXLicense?: {
                /**
                 * @description The action to take for nonSPDXLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unclearLicense?: {
                /**
                 * @description The action to take for unclearLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              mixedLicense?: {
                /**
                 * @description The action to take for mixedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              notice?: {
                /**
                 * @description The action to take for notice issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              modifiedLicense?: {
                /**
                 * @description The action to take for modifiedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              modifiedException?: {
                /**
                 * @description The action to take for modifiedException issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              licenseException?: {
                /**
                 * @description The action to take for licenseException issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              deprecatedException?: {
                /**
                 * @description The action to take for deprecatedException issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              miscLicenseIssues?: {
                /**
                 * @description The action to take for miscLicenseIssues issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unidentifiedLicense?: {
                /**
                 * @description The action to take for unidentifiedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noLicenseFound?: {
                /**
                 * @description The action to take for noLicenseFound issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              explicitlyUnlicensedItem?: {
                /**
                 * @description The action to take for explicitlyUnlicensedItem issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              copyleftLicense?: {
                /**
                 * @description The action to take for copyleftLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              nonpermissiveLicense?: {
                /**
                 * @description The action to take for nonpermissiveLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              ambiguousClassifier?: {
                /**
                 * @description The action to take for ambiguousClassifier issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              invalidPackageJSON?: {
                /**
                 * @description The action to take for invalidPackageJSON issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              httpDependency?: {
                /**
                 * @description The action to take for httpDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gitDependency?: {
                /**
                 * @description The action to take for gitDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gitHubDependency?: {
                /**
                 * @description The action to take for gitHubDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              fileDependency?: {
                /**
                 * @description The action to take for fileDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noTests?: {
                /**
                 * @description The action to take for noTests issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noRepository?: {
                /**
                 * @description The action to take for noRepository issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              badSemver?: {
                /**
                 * @description The action to take for badSemver issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              badSemverDependency?: {
                /**
                 * @description The action to take for badSemverDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noV1?: {
                /**
                 * @description The action to take for noV1 issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noWebsite?: {
                /**
                 * @description The action to take for noWebsite issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noBugTracker?: {
                /**
                 * @description The action to take for noBugTracker issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noAuthorData?: {
                /**
                 * @description The action to take for noAuthorData issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              typeModuleCompatibility?: {
                /**
                 * @description The action to take for typeModuleCompatibility issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              floatingDependency?: {
                /**
                 * @description The action to take for floatingDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              manifestConfusion?: {
                /**
                 * @description The action to take for manifestConfusion issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              malware?: {
                /**
                 * @description The action to take for malware issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              telemetry?: {
                /**
                 * @description The action to take for telemetry issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              troll?: {
                /**
                 * @description The action to take for troll issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              deprecated?: {
                /**
                 * @description The action to take for deprecated issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chronoAnomaly?: {
                /**
                 * @description The action to take for chronoAnomaly issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              compromisedSSHKey?: {
                /**
                 * @description The action to take for compromisedSSHKey issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              semverAnomaly?: {
                /**
                 * @description The action to take for semverAnomaly issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              newAuthor?: {
                /**
                 * @description The action to take for newAuthor issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unstableOwnership?: {
                /**
                 * @description The action to take for unstableOwnership issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingAuthor?: {
                /**
                 * @description The action to take for missingAuthor issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unmaintained?: {
                /**
                 * @description The action to take for unmaintained issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unpublished?: {
                /**
                 * @description The action to take for unpublished issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              majorRefactor?: {
                /**
                 * @description The action to take for majorRefactor issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingTarball?: {
                /**
                 * @description The action to take for missingTarball issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              suspiciousStarActivity?: {
                /**
                 * @description The action to take for suspiciousStarActivity issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unpopularPackage?: {
                /**
                 * @description The action to take for unpopularPackage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              socketUpgradeAvailable?: {
                /**
                 * @description The action to take for socketUpgradeAvailable issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              longStrings?: {
                /**
                 * @description The action to take for longStrings issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              highEntropyStrings?: {
                /**
                 * @description The action to take for highEntropyStrings issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              urlStrings?: {
                /**
                 * @description The action to take for urlStrings issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              usesEval?: {
                /**
                 * @description The action to take for usesEval issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              dynamicRequire?: {
                /**
                 * @description The action to take for dynamicRequire issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              envVars?: {
                /**
                 * @description The action to take for envVars issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingDependency?: {
                /**
                 * @description The action to take for missingDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unusedDependency?: {
                /**
                 * @description The action to take for unusedDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              peerDependency?: {
                /**
                 * @description The action to take for peerDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              uncaughtOptionalDependency?: {
                /**
                 * @description The action to take for uncaughtOptionalDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unresolvedRequire?: {
                /**
                 * @description The action to take for unresolvedRequire issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              extraneousDependency?: {
                /**
                 * @description The action to take for extraneousDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              obfuscatedRequire?: {
                /**
                 * @description The action to take for obfuscatedRequire issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              obfuscatedFile?: {
                /**
                 * @description The action to take for obfuscatedFile issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              minifiedFile?: {
                /**
                 * @description The action to take for minifiedFile issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              installScripts?: {
                /**
                 * @description The action to take for installScripts issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              hasNativeCode?: {
                /**
                 * @description The action to take for hasNativeCode issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              binScriptConfusion?: {
                /**
                 * @description The action to take for binScriptConfusion issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              shellScriptOverride?: {
                /**
                 * @description The action to take for shellScriptOverride issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              didYouMean?: {
                /**
                 * @description The action to take for didYouMean issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gptDidYouMean?: {
                /**
                 * @description The action to take for gptDidYouMean issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              bidi?: {
                /**
                 * @description The action to take for bidi issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              zeroWidth?: {
                /**
                 * @description The action to take for zeroWidth issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              badEncoding?: {
                /**
                 * @description The action to take for badEncoding issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              homoglyphs?: {
                /**
                 * @description The action to take for homoglyphs issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              invisibleChars?: {
                /**
                 * @description The action to take for invisibleChars issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              suspiciousString?: {
                /**
                 * @description The action to take for suspiciousString issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              potentialVulnerability?: {
                /**
                 * @description The action to take for potentialVulnerability issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxProposedApiUsage?: {
                /**
                 * @description The action to take for vsxProposedApiUsage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxActivationWildcard?: {
                /**
                 * @description The action to take for vsxActivationWildcard issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxWorkspaceContainsActivation?: {
                /**
                 * @description The action to take for vsxWorkspaceContainsActivation issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxUntrustedWorkspaceSupported?: {
                /**
                 * @description The action to take for vsxUntrustedWorkspaceSupported issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxVirtualWorkspaceSupported?: {
                /**
                 * @description The action to take for vsxVirtualWorkspaceSupported issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxWebviewContribution?: {
                /**
                 * @description The action to take for vsxWebviewContribution issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxDebuggerContribution?: {
                /**
                 * @description The action to take for vsxDebuggerContribution issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxExtensionDependency?: {
                /**
                 * @description The action to take for vsxExtensionDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxExtensionPack?: {
                /**
                 * @description The action to take for vsxExtensionPack issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
            } | null
            /**
             * @description The default security policy for the repository label
             * @default medium
             * @enum {string|null}
             */
            issueRulesPolicyDefault?:
              | 'default'
              | 'low'
              | 'medium'
              | 'high'
              | null
            /** @default null */
            licensePolicy?: Record<string, unknown> | null | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Update repository label setting (beta)
   * @description Update the setting (e.g. security/license policy) for a repository label.
   *
   *
   * Note that repository label settings currently only support `issueRules`
   * and `issueRulesPolicyDefault`. A policy is considered "active" for
   * a given repository label if the `issueRulesPolicyDefault` is set,
   * and inactive when not set. `issueRules` can be used to further
   * refine the alert triage strategy.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo-label:update
   */
  updateOrgRepoLabelSetting: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the label */
        label_id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          issueRules?: {
            gptSecurity?: {
              /**
               * @description The action to take for gptSecurity issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            gptAnomaly?: {
              /**
               * @description The action to take for gptAnomaly issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            gptMalware?: {
              /**
               * @description The action to take for gptMalware issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            filesystemAccess?: {
              /**
               * @description The action to take for filesystemAccess issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            networkAccess?: {
              /**
               * @description The action to take for networkAccess issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            shellAccess?: {
              /**
               * @description The action to take for shellAccess issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            debugAccess?: {
              /**
               * @description The action to take for debugAccess issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            chromePermission?: {
              /**
               * @description The action to take for chromePermission issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            chromeHostPermission?: {
              /**
               * @description The action to take for chromeHostPermission issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            chromeWildcardHostPermission?: {
              /**
               * @description The action to take for chromeWildcardHostPermission issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            chromeContentScript?: {
              /**
               * @description The action to take for chromeContentScript issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            criticalCVE?: {
              /**
               * @description The action to take for criticalCVE issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            cve?: {
              /**
               * @description The action to take for cve issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            mediumCVE?: {
              /**
               * @description The action to take for mediumCVE issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            mildCVE?: {
              /**
               * @description The action to take for mildCVE issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            emptyPackage?: {
              /**
               * @description The action to take for emptyPackage issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            trivialPackage?: {
              /**
               * @description The action to take for trivialPackage issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noREADME?: {
              /**
               * @description The action to take for noREADME issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            shrinkwrap?: {
              /**
               * @description The action to take for shrinkwrap issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            generic?: {
              /**
               * @description The action to take for generic issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            licenseSpdxDisj?: {
              /**
               * @description The action to take for licenseSpdxDisj issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unsafeCopyright?: {
              /**
               * @description The action to take for unsafeCopyright issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            licenseChange?: {
              /**
               * @description The action to take for licenseChange issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            nonOSILicense?: {
              /**
               * @description The action to take for nonOSILicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            deprecatedLicense?: {
              /**
               * @description The action to take for deprecatedLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            missingLicense?: {
              /**
               * @description The action to take for missingLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            nonSPDXLicense?: {
              /**
               * @description The action to take for nonSPDXLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unclearLicense?: {
              /**
               * @description The action to take for unclearLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            mixedLicense?: {
              /**
               * @description The action to take for mixedLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            notice?: {
              /**
               * @description The action to take for notice issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            modifiedLicense?: {
              /**
               * @description The action to take for modifiedLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            modifiedException?: {
              /**
               * @description The action to take for modifiedException issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            licenseException?: {
              /**
               * @description The action to take for licenseException issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            deprecatedException?: {
              /**
               * @description The action to take for deprecatedException issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            miscLicenseIssues?: {
              /**
               * @description The action to take for miscLicenseIssues issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unidentifiedLicense?: {
              /**
               * @description The action to take for unidentifiedLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noLicenseFound?: {
              /**
               * @description The action to take for noLicenseFound issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            explicitlyUnlicensedItem?: {
              /**
               * @description The action to take for explicitlyUnlicensedItem issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            copyleftLicense?: {
              /**
               * @description The action to take for copyleftLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            nonpermissiveLicense?: {
              /**
               * @description The action to take for nonpermissiveLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            ambiguousClassifier?: {
              /**
               * @description The action to take for ambiguousClassifier issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            invalidPackageJSON?: {
              /**
               * @description The action to take for invalidPackageJSON issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            httpDependency?: {
              /**
               * @description The action to take for httpDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            gitDependency?: {
              /**
               * @description The action to take for gitDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            gitHubDependency?: {
              /**
               * @description The action to take for gitHubDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            fileDependency?: {
              /**
               * @description The action to take for fileDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noTests?: {
              /**
               * @description The action to take for noTests issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noRepository?: {
              /**
               * @description The action to take for noRepository issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            badSemver?: {
              /**
               * @description The action to take for badSemver issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            badSemverDependency?: {
              /**
               * @description The action to take for badSemverDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noV1?: {
              /**
               * @description The action to take for noV1 issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noWebsite?: {
              /**
               * @description The action to take for noWebsite issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noBugTracker?: {
              /**
               * @description The action to take for noBugTracker issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noAuthorData?: {
              /**
               * @description The action to take for noAuthorData issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            typeModuleCompatibility?: {
              /**
               * @description The action to take for typeModuleCompatibility issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            floatingDependency?: {
              /**
               * @description The action to take for floatingDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            manifestConfusion?: {
              /**
               * @description The action to take for manifestConfusion issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            malware?: {
              /**
               * @description The action to take for malware issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            telemetry?: {
              /**
               * @description The action to take for telemetry issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            troll?: {
              /**
               * @description The action to take for troll issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            deprecated?: {
              /**
               * @description The action to take for deprecated issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            chronoAnomaly?: {
              /**
               * @description The action to take for chronoAnomaly issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            compromisedSSHKey?: {
              /**
               * @description The action to take for compromisedSSHKey issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            semverAnomaly?: {
              /**
               * @description The action to take for semverAnomaly issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            newAuthor?: {
              /**
               * @description The action to take for newAuthor issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unstableOwnership?: {
              /**
               * @description The action to take for unstableOwnership issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            missingAuthor?: {
              /**
               * @description The action to take for missingAuthor issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unmaintained?: {
              /**
               * @description The action to take for unmaintained issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unpublished?: {
              /**
               * @description The action to take for unpublished issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            majorRefactor?: {
              /**
               * @description The action to take for majorRefactor issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            missingTarball?: {
              /**
               * @description The action to take for missingTarball issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            suspiciousStarActivity?: {
              /**
               * @description The action to take for suspiciousStarActivity issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unpopularPackage?: {
              /**
               * @description The action to take for unpopularPackage issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            socketUpgradeAvailable?: {
              /**
               * @description The action to take for socketUpgradeAvailable issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            longStrings?: {
              /**
               * @description The action to take for longStrings issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            highEntropyStrings?: {
              /**
               * @description The action to take for highEntropyStrings issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            urlStrings?: {
              /**
               * @description The action to take for urlStrings issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            usesEval?: {
              /**
               * @description The action to take for usesEval issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            dynamicRequire?: {
              /**
               * @description The action to take for dynamicRequire issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            envVars?: {
              /**
               * @description The action to take for envVars issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            missingDependency?: {
              /**
               * @description The action to take for missingDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unusedDependency?: {
              /**
               * @description The action to take for unusedDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            peerDependency?: {
              /**
               * @description The action to take for peerDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            uncaughtOptionalDependency?: {
              /**
               * @description The action to take for uncaughtOptionalDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unresolvedRequire?: {
              /**
               * @description The action to take for unresolvedRequire issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            extraneousDependency?: {
              /**
               * @description The action to take for extraneousDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            obfuscatedRequire?: {
              /**
               * @description The action to take for obfuscatedRequire issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            obfuscatedFile?: {
              /**
               * @description The action to take for obfuscatedFile issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            minifiedFile?: {
              /**
               * @description The action to take for minifiedFile issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            installScripts?: {
              /**
               * @description The action to take for installScripts issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            hasNativeCode?: {
              /**
               * @description The action to take for hasNativeCode issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            binScriptConfusion?: {
              /**
               * @description The action to take for binScriptConfusion issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            shellScriptOverride?: {
              /**
               * @description The action to take for shellScriptOverride issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            didYouMean?: {
              /**
               * @description The action to take for didYouMean issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            gptDidYouMean?: {
              /**
               * @description The action to take for gptDidYouMean issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            bidi?: {
              /**
               * @description The action to take for bidi issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            zeroWidth?: {
              /**
               * @description The action to take for zeroWidth issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            badEncoding?: {
              /**
               * @description The action to take for badEncoding issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            homoglyphs?: {
              /**
               * @description The action to take for homoglyphs issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            invisibleChars?: {
              /**
               * @description The action to take for invisibleChars issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            suspiciousString?: {
              /**
               * @description The action to take for suspiciousString issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            potentialVulnerability?: {
              /**
               * @description The action to take for potentialVulnerability issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxProposedApiUsage?: {
              /**
               * @description The action to take for vsxProposedApiUsage issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxActivationWildcard?: {
              /**
               * @description The action to take for vsxActivationWildcard issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxWorkspaceContainsActivation?: {
              /**
               * @description The action to take for vsxWorkspaceContainsActivation issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxUntrustedWorkspaceSupported?: {
              /**
               * @description The action to take for vsxUntrustedWorkspaceSupported issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxVirtualWorkspaceSupported?: {
              /**
               * @description The action to take for vsxVirtualWorkspaceSupported issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxWebviewContribution?: {
              /**
               * @description The action to take for vsxWebviewContribution issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxDebuggerContribution?: {
              /**
               * @description The action to take for vsxDebuggerContribution issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxExtensionDependency?: {
              /**
               * @description The action to take for vsxExtensionDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxExtensionPack?: {
              /**
               * @description The action to take for vsxExtensionPack issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
          }
          /**
           * @description The default security policy for the repository label
           * @default medium
           * @enum {string}
           */
          issueRulesPolicyDefault?:
            | 'default'
            | 'low'
            | 'medium'
            | 'high'
            | undefined
          licensePolicy?:
            | components['schemas']['LicenseAllowListRequest']
            | undefined
        }
      }
    }
    responses: {
      /** @description Success */
      200: {
        content: {
          'application/json': {
            /** @default ok */
            status: string
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Delete repository label setting (beta)
   * @description Delete the setting (e.g. security/license policy) for a repository label.
   *
   *
   * Note that repository label settings currently only support `issueRules`
   * and `issueRulesPolicyDefault`. A policy is considered "active" for
   * a given repository label if the `issueRulesPolicyDefault` is set,
   * and inactive when not set. `issueRules` can be used to further
   * refine the alert triage strategy.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo-label:update
   */
  deleteOrgRepoLabelSetting: {
    parameters: {
      query: {
        /** @description Setting key to delete from the repository label. Valid values include issueRules, issueRulesPolicyDefault, and licensePolicy */
        setting_key: string
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the label */
        label_id: string
      }
    }
    responses: {
      /** @description Success */
      200: {
        content: {
          'application/json': {
            /** @default ok */
            status: string
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Disassociate repository label (beta)
   * @description Disassociate a repository label from a repository.
   *
   * Labels can be used to group and organize repositories and to apply security/license policies.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo-label:update
   */
  disassociateOrgRepoLabel: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The ID of the label */
        label_id: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The ID of the repository to disassociate from the label
           * @default
           */
          repository_id?: string | undefined
        }
      }
    }
    responses: {
      /** @description Disassociates a repository label from the specified repository. The authenticated user must be a member of the organization. */
      200: {
        content: {
          'application/json': {
            /**
             * @description Status of the operation
             * @default
             */
            status?: string | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get integration events
   * @description This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - integration:list
   */
  getIntegrationEvents: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
        /** @description The id of the integration */
        integration_id: string
      }
    }
    responses: {
      /** @description Lists events for the specified integration. The authenticated user must be a member of the organization. */
      200: {
        content: {
          'application/json': Array<{
            /** @default */
            id: string
            /** @default */
            integration_id: string
            /** @default */
            type: string
            payload: Record<string, never>
            /** @default 0 */
            status_code: number
            /** @default */
            error: string
            /** @default */
            sent_at: string
            retry_info: Array<{
              /** @default 0 */
              status_code: number
              /** @default */
              error: string
              /** @default */
              sent_at: string
            }>
            /** @default */
            created_at: string
            /** @default */
            updated_at: string
          }>
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get Organization Security Policy
   * @description Retrieve the security policy of an organization.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - security-policy:read
   */
  getOrgSecurityPolicy: {
    parameters: {
      query?: {
        /** @description Return only customized security policy rules. */
        custom_rules_only?: boolean | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description Retrieved security policy details */
      200: {
        content: {
          'application/json': {
            securityPolicyRules?: {
              gptSecurity?: {
                /**
                 * @description The action to take for gptSecurity issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gptAnomaly?: {
                /**
                 * @description The action to take for gptAnomaly issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gptMalware?: {
                /**
                 * @description The action to take for gptMalware issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              filesystemAccess?: {
                /**
                 * @description The action to take for filesystemAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              networkAccess?: {
                /**
                 * @description The action to take for networkAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              shellAccess?: {
                /**
                 * @description The action to take for shellAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              debugAccess?: {
                /**
                 * @description The action to take for debugAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromePermission?: {
                /**
                 * @description The action to take for chromePermission issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromeHostPermission?: {
                /**
                 * @description The action to take for chromeHostPermission issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromeWildcardHostPermission?: {
                /**
                 * @description The action to take for chromeWildcardHostPermission issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromeContentScript?: {
                /**
                 * @description The action to take for chromeContentScript issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              criticalCVE?: {
                /**
                 * @description The action to take for criticalCVE issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              cve?: {
                /**
                 * @description The action to take for cve issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              mediumCVE?: {
                /**
                 * @description The action to take for mediumCVE issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              mildCVE?: {
                /**
                 * @description The action to take for mildCVE issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              emptyPackage?: {
                /**
                 * @description The action to take for emptyPackage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              trivialPackage?: {
                /**
                 * @description The action to take for trivialPackage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noREADME?: {
                /**
                 * @description The action to take for noREADME issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              shrinkwrap?: {
                /**
                 * @description The action to take for shrinkwrap issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              generic?: {
                /**
                 * @description The action to take for generic issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              licenseSpdxDisj?: {
                /**
                 * @description The action to take for licenseSpdxDisj issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unsafeCopyright?: {
                /**
                 * @description The action to take for unsafeCopyright issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              licenseChange?: {
                /**
                 * @description The action to take for licenseChange issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              nonOSILicense?: {
                /**
                 * @description The action to take for nonOSILicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              deprecatedLicense?: {
                /**
                 * @description The action to take for deprecatedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingLicense?: {
                /**
                 * @description The action to take for missingLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              nonSPDXLicense?: {
                /**
                 * @description The action to take for nonSPDXLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unclearLicense?: {
                /**
                 * @description The action to take for unclearLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              mixedLicense?: {
                /**
                 * @description The action to take for mixedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              notice?: {
                /**
                 * @description The action to take for notice issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              modifiedLicense?: {
                /**
                 * @description The action to take for modifiedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              modifiedException?: {
                /**
                 * @description The action to take for modifiedException issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              licenseException?: {
                /**
                 * @description The action to take for licenseException issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              deprecatedException?: {
                /**
                 * @description The action to take for deprecatedException issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              miscLicenseIssues?: {
                /**
                 * @description The action to take for miscLicenseIssues issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unidentifiedLicense?: {
                /**
                 * @description The action to take for unidentifiedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noLicenseFound?: {
                /**
                 * @description The action to take for noLicenseFound issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              explicitlyUnlicensedItem?: {
                /**
                 * @description The action to take for explicitlyUnlicensedItem issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              copyleftLicense?: {
                /**
                 * @description The action to take for copyleftLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              nonpermissiveLicense?: {
                /**
                 * @description The action to take for nonpermissiveLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              ambiguousClassifier?: {
                /**
                 * @description The action to take for ambiguousClassifier issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              invalidPackageJSON?: {
                /**
                 * @description The action to take for invalidPackageJSON issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              httpDependency?: {
                /**
                 * @description The action to take for httpDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gitDependency?: {
                /**
                 * @description The action to take for gitDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gitHubDependency?: {
                /**
                 * @description The action to take for gitHubDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              fileDependency?: {
                /**
                 * @description The action to take for fileDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noTests?: {
                /**
                 * @description The action to take for noTests issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noRepository?: {
                /**
                 * @description The action to take for noRepository issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              badSemver?: {
                /**
                 * @description The action to take for badSemver issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              badSemverDependency?: {
                /**
                 * @description The action to take for badSemverDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noV1?: {
                /**
                 * @description The action to take for noV1 issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noWebsite?: {
                /**
                 * @description The action to take for noWebsite issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noBugTracker?: {
                /**
                 * @description The action to take for noBugTracker issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noAuthorData?: {
                /**
                 * @description The action to take for noAuthorData issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              typeModuleCompatibility?: {
                /**
                 * @description The action to take for typeModuleCompatibility issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              floatingDependency?: {
                /**
                 * @description The action to take for floatingDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              manifestConfusion?: {
                /**
                 * @description The action to take for manifestConfusion issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              malware?: {
                /**
                 * @description The action to take for malware issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              telemetry?: {
                /**
                 * @description The action to take for telemetry issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              troll?: {
                /**
                 * @description The action to take for troll issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              deprecated?: {
                /**
                 * @description The action to take for deprecated issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chronoAnomaly?: {
                /**
                 * @description The action to take for chronoAnomaly issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              compromisedSSHKey?: {
                /**
                 * @description The action to take for compromisedSSHKey issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              semverAnomaly?: {
                /**
                 * @description The action to take for semverAnomaly issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              newAuthor?: {
                /**
                 * @description The action to take for newAuthor issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unstableOwnership?: {
                /**
                 * @description The action to take for unstableOwnership issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingAuthor?: {
                /**
                 * @description The action to take for missingAuthor issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unmaintained?: {
                /**
                 * @description The action to take for unmaintained issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unpublished?: {
                /**
                 * @description The action to take for unpublished issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              majorRefactor?: {
                /**
                 * @description The action to take for majorRefactor issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingTarball?: {
                /**
                 * @description The action to take for missingTarball issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              suspiciousStarActivity?: {
                /**
                 * @description The action to take for suspiciousStarActivity issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unpopularPackage?: {
                /**
                 * @description The action to take for unpopularPackage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              socketUpgradeAvailable?: {
                /**
                 * @description The action to take for socketUpgradeAvailable issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              longStrings?: {
                /**
                 * @description The action to take for longStrings issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              highEntropyStrings?: {
                /**
                 * @description The action to take for highEntropyStrings issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              urlStrings?: {
                /**
                 * @description The action to take for urlStrings issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              usesEval?: {
                /**
                 * @description The action to take for usesEval issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              dynamicRequire?: {
                /**
                 * @description The action to take for dynamicRequire issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              envVars?: {
                /**
                 * @description The action to take for envVars issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingDependency?: {
                /**
                 * @description The action to take for missingDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unusedDependency?: {
                /**
                 * @description The action to take for unusedDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              peerDependency?: {
                /**
                 * @description The action to take for peerDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              uncaughtOptionalDependency?: {
                /**
                 * @description The action to take for uncaughtOptionalDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unresolvedRequire?: {
                /**
                 * @description The action to take for unresolvedRequire issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              extraneousDependency?: {
                /**
                 * @description The action to take for extraneousDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              obfuscatedRequire?: {
                /**
                 * @description The action to take for obfuscatedRequire issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              obfuscatedFile?: {
                /**
                 * @description The action to take for obfuscatedFile issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              minifiedFile?: {
                /**
                 * @description The action to take for minifiedFile issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              installScripts?: {
                /**
                 * @description The action to take for installScripts issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              hasNativeCode?: {
                /**
                 * @description The action to take for hasNativeCode issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              binScriptConfusion?: {
                /**
                 * @description The action to take for binScriptConfusion issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              shellScriptOverride?: {
                /**
                 * @description The action to take for shellScriptOverride issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              didYouMean?: {
                /**
                 * @description The action to take for didYouMean issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gptDidYouMean?: {
                /**
                 * @description The action to take for gptDidYouMean issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              bidi?: {
                /**
                 * @description The action to take for bidi issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              zeroWidth?: {
                /**
                 * @description The action to take for zeroWidth issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              badEncoding?: {
                /**
                 * @description The action to take for badEncoding issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              homoglyphs?: {
                /**
                 * @description The action to take for homoglyphs issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              invisibleChars?: {
                /**
                 * @description The action to take for invisibleChars issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              suspiciousString?: {
                /**
                 * @description The action to take for suspiciousString issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              potentialVulnerability?: {
                /**
                 * @description The action to take for potentialVulnerability issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxProposedApiUsage?: {
                /**
                 * @description The action to take for vsxProposedApiUsage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxActivationWildcard?: {
                /**
                 * @description The action to take for vsxActivationWildcard issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxWorkspaceContainsActivation?: {
                /**
                 * @description The action to take for vsxWorkspaceContainsActivation issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxUntrustedWorkspaceSupported?: {
                /**
                 * @description The action to take for vsxUntrustedWorkspaceSupported issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxVirtualWorkspaceSupported?: {
                /**
                 * @description The action to take for vsxVirtualWorkspaceSupported issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxWebviewContribution?: {
                /**
                 * @description The action to take for vsxWebviewContribution issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxDebuggerContribution?: {
                /**
                 * @description The action to take for vsxDebuggerContribution issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxExtensionDependency?: {
                /**
                 * @description The action to take for vsxExtensionDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxExtensionPack?: {
                /**
                 * @description The action to take for vsxExtensionPack issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
            }
            /**
             * @description The default security policy for the organization
             * @default default
             * @enum {string}
             */
            securityPolicyDefault?:
              | 'default'
              | 'low'
              | 'medium'
              | 'high'
              | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Update Security Policy
   * @description Update the security policy of an organization.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - security-policy:update
   */
  updateOrgSecurityPolicy: {
    parameters: {
      query?: {
        /** @description Return only customized security policy rules in the response. */
        custom_rules_only?: boolean | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    requestBody?: {
      content: {
        'application/json': {
          /**
           * @description The default security policy for the organization
           * @enum {string}
           */
          policyDefault?: 'default' | 'low' | 'medium' | 'high' | undefined
          policyRules?: {
            gptSecurity?: {
              /**
               * @description The action to take for gptSecurity issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            gptAnomaly?: {
              /**
               * @description The action to take for gptAnomaly issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            gptMalware?: {
              /**
               * @description The action to take for gptMalware issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            filesystemAccess?: {
              /**
               * @description The action to take for filesystemAccess issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            networkAccess?: {
              /**
               * @description The action to take for networkAccess issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            shellAccess?: {
              /**
               * @description The action to take for shellAccess issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            debugAccess?: {
              /**
               * @description The action to take for debugAccess issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            chromePermission?: {
              /**
               * @description The action to take for chromePermission issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            chromeHostPermission?: {
              /**
               * @description The action to take for chromeHostPermission issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            chromeWildcardHostPermission?: {
              /**
               * @description The action to take for chromeWildcardHostPermission issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            chromeContentScript?: {
              /**
               * @description The action to take for chromeContentScript issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            criticalCVE?: {
              /**
               * @description The action to take for criticalCVE issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            cve?: {
              /**
               * @description The action to take for cve issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            mediumCVE?: {
              /**
               * @description The action to take for mediumCVE issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            mildCVE?: {
              /**
               * @description The action to take for mildCVE issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            emptyPackage?: {
              /**
               * @description The action to take for emptyPackage issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            trivialPackage?: {
              /**
               * @description The action to take for trivialPackage issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noREADME?: {
              /**
               * @description The action to take for noREADME issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            shrinkwrap?: {
              /**
               * @description The action to take for shrinkwrap issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            generic?: {
              /**
               * @description The action to take for generic issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            licenseSpdxDisj?: {
              /**
               * @description The action to take for licenseSpdxDisj issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unsafeCopyright?: {
              /**
               * @description The action to take for unsafeCopyright issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            licenseChange?: {
              /**
               * @description The action to take for licenseChange issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            nonOSILicense?: {
              /**
               * @description The action to take for nonOSILicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            deprecatedLicense?: {
              /**
               * @description The action to take for deprecatedLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            missingLicense?: {
              /**
               * @description The action to take for missingLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            nonSPDXLicense?: {
              /**
               * @description The action to take for nonSPDXLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unclearLicense?: {
              /**
               * @description The action to take for unclearLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            mixedLicense?: {
              /**
               * @description The action to take for mixedLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            notice?: {
              /**
               * @description The action to take for notice issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            modifiedLicense?: {
              /**
               * @description The action to take for modifiedLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            modifiedException?: {
              /**
               * @description The action to take for modifiedException issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            licenseException?: {
              /**
               * @description The action to take for licenseException issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            deprecatedException?: {
              /**
               * @description The action to take for deprecatedException issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            miscLicenseIssues?: {
              /**
               * @description The action to take for miscLicenseIssues issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unidentifiedLicense?: {
              /**
               * @description The action to take for unidentifiedLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noLicenseFound?: {
              /**
               * @description The action to take for noLicenseFound issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            explicitlyUnlicensedItem?: {
              /**
               * @description The action to take for explicitlyUnlicensedItem issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            copyleftLicense?: {
              /**
               * @description The action to take for copyleftLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            nonpermissiveLicense?: {
              /**
               * @description The action to take for nonpermissiveLicense issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            ambiguousClassifier?: {
              /**
               * @description The action to take for ambiguousClassifier issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            invalidPackageJSON?: {
              /**
               * @description The action to take for invalidPackageJSON issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            httpDependency?: {
              /**
               * @description The action to take for httpDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            gitDependency?: {
              /**
               * @description The action to take for gitDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            gitHubDependency?: {
              /**
               * @description The action to take for gitHubDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            fileDependency?: {
              /**
               * @description The action to take for fileDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noTests?: {
              /**
               * @description The action to take for noTests issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noRepository?: {
              /**
               * @description The action to take for noRepository issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            badSemver?: {
              /**
               * @description The action to take for badSemver issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            badSemverDependency?: {
              /**
               * @description The action to take for badSemverDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noV1?: {
              /**
               * @description The action to take for noV1 issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noWebsite?: {
              /**
               * @description The action to take for noWebsite issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noBugTracker?: {
              /**
               * @description The action to take for noBugTracker issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            noAuthorData?: {
              /**
               * @description The action to take for noAuthorData issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            typeModuleCompatibility?: {
              /**
               * @description The action to take for typeModuleCompatibility issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            floatingDependency?: {
              /**
               * @description The action to take for floatingDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            manifestConfusion?: {
              /**
               * @description The action to take for manifestConfusion issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            malware?: {
              /**
               * @description The action to take for malware issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            telemetry?: {
              /**
               * @description The action to take for telemetry issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            troll?: {
              /**
               * @description The action to take for troll issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            deprecated?: {
              /**
               * @description The action to take for deprecated issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            chronoAnomaly?: {
              /**
               * @description The action to take for chronoAnomaly issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            compromisedSSHKey?: {
              /**
               * @description The action to take for compromisedSSHKey issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            semverAnomaly?: {
              /**
               * @description The action to take for semverAnomaly issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            newAuthor?: {
              /**
               * @description The action to take for newAuthor issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unstableOwnership?: {
              /**
               * @description The action to take for unstableOwnership issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            missingAuthor?: {
              /**
               * @description The action to take for missingAuthor issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unmaintained?: {
              /**
               * @description The action to take for unmaintained issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unpublished?: {
              /**
               * @description The action to take for unpublished issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            majorRefactor?: {
              /**
               * @description The action to take for majorRefactor issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            missingTarball?: {
              /**
               * @description The action to take for missingTarball issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            suspiciousStarActivity?: {
              /**
               * @description The action to take for suspiciousStarActivity issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unpopularPackage?: {
              /**
               * @description The action to take for unpopularPackage issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            socketUpgradeAvailable?: {
              /**
               * @description The action to take for socketUpgradeAvailable issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            longStrings?: {
              /**
               * @description The action to take for longStrings issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            highEntropyStrings?: {
              /**
               * @description The action to take for highEntropyStrings issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            urlStrings?: {
              /**
               * @description The action to take for urlStrings issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            usesEval?: {
              /**
               * @description The action to take for usesEval issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            dynamicRequire?: {
              /**
               * @description The action to take for dynamicRequire issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            envVars?: {
              /**
               * @description The action to take for envVars issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            missingDependency?: {
              /**
               * @description The action to take for missingDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unusedDependency?: {
              /**
               * @description The action to take for unusedDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            peerDependency?: {
              /**
               * @description The action to take for peerDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            uncaughtOptionalDependency?: {
              /**
               * @description The action to take for uncaughtOptionalDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            unresolvedRequire?: {
              /**
               * @description The action to take for unresolvedRequire issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            extraneousDependency?: {
              /**
               * @description The action to take for extraneousDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            obfuscatedRequire?: {
              /**
               * @description The action to take for obfuscatedRequire issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            obfuscatedFile?: {
              /**
               * @description The action to take for obfuscatedFile issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            minifiedFile?: {
              /**
               * @description The action to take for minifiedFile issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            installScripts?: {
              /**
               * @description The action to take for installScripts issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            hasNativeCode?: {
              /**
               * @description The action to take for hasNativeCode issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            binScriptConfusion?: {
              /**
               * @description The action to take for binScriptConfusion issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            shellScriptOverride?: {
              /**
               * @description The action to take for shellScriptOverride issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            didYouMean?: {
              /**
               * @description The action to take for didYouMean issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            gptDidYouMean?: {
              /**
               * @description The action to take for gptDidYouMean issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            bidi?: {
              /**
               * @description The action to take for bidi issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            zeroWidth?: {
              /**
               * @description The action to take for zeroWidth issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            badEncoding?: {
              /**
               * @description The action to take for badEncoding issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            homoglyphs?: {
              /**
               * @description The action to take for homoglyphs issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            invisibleChars?: {
              /**
               * @description The action to take for invisibleChars issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            suspiciousString?: {
              /**
               * @description The action to take for suspiciousString issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            potentialVulnerability?: {
              /**
               * @description The action to take for potentialVulnerability issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxProposedApiUsage?: {
              /**
               * @description The action to take for vsxProposedApiUsage issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxActivationWildcard?: {
              /**
               * @description The action to take for vsxActivationWildcard issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxWorkspaceContainsActivation?: {
              /**
               * @description The action to take for vsxWorkspaceContainsActivation issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxUntrustedWorkspaceSupported?: {
              /**
               * @description The action to take for vsxUntrustedWorkspaceSupported issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxVirtualWorkspaceSupported?: {
              /**
               * @description The action to take for vsxVirtualWorkspaceSupported issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxWebviewContribution?: {
              /**
               * @description The action to take for vsxWebviewContribution issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxDebuggerContribution?: {
              /**
               * @description The action to take for vsxDebuggerContribution issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxExtensionDependency?: {
              /**
               * @description The action to take for vsxExtensionDependency issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
            vsxExtensionPack?: {
              /**
               * @description The action to take for vsxExtensionPack issues.
               * @enum {string}
               */
              action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
            }
          }
          /**
           * @description Reset the policy rules to the default. When set to true, do not include any policyRules updates.
           * @default false
           */
          resetPolicyRules?: boolean | undefined
        }
      }
    }
    responses: {
      /** @description Updated repository details */
      200: {
        content: {
          'application/json': {
            securityPolicyRules?: {
              gptSecurity?: {
                /**
                 * @description The action to take for gptSecurity issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gptAnomaly?: {
                /**
                 * @description The action to take for gptAnomaly issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gptMalware?: {
                /**
                 * @description The action to take for gptMalware issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              filesystemAccess?: {
                /**
                 * @description The action to take for filesystemAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              networkAccess?: {
                /**
                 * @description The action to take for networkAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              shellAccess?: {
                /**
                 * @description The action to take for shellAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              debugAccess?: {
                /**
                 * @description The action to take for debugAccess issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromePermission?: {
                /**
                 * @description The action to take for chromePermission issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromeHostPermission?: {
                /**
                 * @description The action to take for chromeHostPermission issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromeWildcardHostPermission?: {
                /**
                 * @description The action to take for chromeWildcardHostPermission issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chromeContentScript?: {
                /**
                 * @description The action to take for chromeContentScript issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              criticalCVE?: {
                /**
                 * @description The action to take for criticalCVE issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              cve?: {
                /**
                 * @description The action to take for cve issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              mediumCVE?: {
                /**
                 * @description The action to take for mediumCVE issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              mildCVE?: {
                /**
                 * @description The action to take for mildCVE issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              emptyPackage?: {
                /**
                 * @description The action to take for emptyPackage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              trivialPackage?: {
                /**
                 * @description The action to take for trivialPackage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noREADME?: {
                /**
                 * @description The action to take for noREADME issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              shrinkwrap?: {
                /**
                 * @description The action to take for shrinkwrap issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              generic?: {
                /**
                 * @description The action to take for generic issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              licenseSpdxDisj?: {
                /**
                 * @description The action to take for licenseSpdxDisj issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unsafeCopyright?: {
                /**
                 * @description The action to take for unsafeCopyright issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              licenseChange?: {
                /**
                 * @description The action to take for licenseChange issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              nonOSILicense?: {
                /**
                 * @description The action to take for nonOSILicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              deprecatedLicense?: {
                /**
                 * @description The action to take for deprecatedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingLicense?: {
                /**
                 * @description The action to take for missingLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              nonSPDXLicense?: {
                /**
                 * @description The action to take for nonSPDXLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unclearLicense?: {
                /**
                 * @description The action to take for unclearLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              mixedLicense?: {
                /**
                 * @description The action to take for mixedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              notice?: {
                /**
                 * @description The action to take for notice issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              modifiedLicense?: {
                /**
                 * @description The action to take for modifiedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              modifiedException?: {
                /**
                 * @description The action to take for modifiedException issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              licenseException?: {
                /**
                 * @description The action to take for licenseException issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              deprecatedException?: {
                /**
                 * @description The action to take for deprecatedException issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              miscLicenseIssues?: {
                /**
                 * @description The action to take for miscLicenseIssues issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unidentifiedLicense?: {
                /**
                 * @description The action to take for unidentifiedLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noLicenseFound?: {
                /**
                 * @description The action to take for noLicenseFound issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              explicitlyUnlicensedItem?: {
                /**
                 * @description The action to take for explicitlyUnlicensedItem issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              copyleftLicense?: {
                /**
                 * @description The action to take for copyleftLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              nonpermissiveLicense?: {
                /**
                 * @description The action to take for nonpermissiveLicense issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              ambiguousClassifier?: {
                /**
                 * @description The action to take for ambiguousClassifier issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              invalidPackageJSON?: {
                /**
                 * @description The action to take for invalidPackageJSON issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              httpDependency?: {
                /**
                 * @description The action to take for httpDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gitDependency?: {
                /**
                 * @description The action to take for gitDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gitHubDependency?: {
                /**
                 * @description The action to take for gitHubDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              fileDependency?: {
                /**
                 * @description The action to take for fileDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noTests?: {
                /**
                 * @description The action to take for noTests issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noRepository?: {
                /**
                 * @description The action to take for noRepository issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              badSemver?: {
                /**
                 * @description The action to take for badSemver issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              badSemverDependency?: {
                /**
                 * @description The action to take for badSemverDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noV1?: {
                /**
                 * @description The action to take for noV1 issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noWebsite?: {
                /**
                 * @description The action to take for noWebsite issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noBugTracker?: {
                /**
                 * @description The action to take for noBugTracker issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              noAuthorData?: {
                /**
                 * @description The action to take for noAuthorData issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              typeModuleCompatibility?: {
                /**
                 * @description The action to take for typeModuleCompatibility issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              floatingDependency?: {
                /**
                 * @description The action to take for floatingDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              manifestConfusion?: {
                /**
                 * @description The action to take for manifestConfusion issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              malware?: {
                /**
                 * @description The action to take for malware issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              telemetry?: {
                /**
                 * @description The action to take for telemetry issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              troll?: {
                /**
                 * @description The action to take for troll issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              deprecated?: {
                /**
                 * @description The action to take for deprecated issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              chronoAnomaly?: {
                /**
                 * @description The action to take for chronoAnomaly issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              compromisedSSHKey?: {
                /**
                 * @description The action to take for compromisedSSHKey issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              semverAnomaly?: {
                /**
                 * @description The action to take for semverAnomaly issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              newAuthor?: {
                /**
                 * @description The action to take for newAuthor issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unstableOwnership?: {
                /**
                 * @description The action to take for unstableOwnership issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingAuthor?: {
                /**
                 * @description The action to take for missingAuthor issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unmaintained?: {
                /**
                 * @description The action to take for unmaintained issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unpublished?: {
                /**
                 * @description The action to take for unpublished issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              majorRefactor?: {
                /**
                 * @description The action to take for majorRefactor issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingTarball?: {
                /**
                 * @description The action to take for missingTarball issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              suspiciousStarActivity?: {
                /**
                 * @description The action to take for suspiciousStarActivity issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unpopularPackage?: {
                /**
                 * @description The action to take for unpopularPackage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              socketUpgradeAvailable?: {
                /**
                 * @description The action to take for socketUpgradeAvailable issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              longStrings?: {
                /**
                 * @description The action to take for longStrings issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              highEntropyStrings?: {
                /**
                 * @description The action to take for highEntropyStrings issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              urlStrings?: {
                /**
                 * @description The action to take for urlStrings issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              usesEval?: {
                /**
                 * @description The action to take for usesEval issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              dynamicRequire?: {
                /**
                 * @description The action to take for dynamicRequire issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              envVars?: {
                /**
                 * @description The action to take for envVars issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              missingDependency?: {
                /**
                 * @description The action to take for missingDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unusedDependency?: {
                /**
                 * @description The action to take for unusedDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              peerDependency?: {
                /**
                 * @description The action to take for peerDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              uncaughtOptionalDependency?: {
                /**
                 * @description The action to take for uncaughtOptionalDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              unresolvedRequire?: {
                /**
                 * @description The action to take for unresolvedRequire issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              extraneousDependency?: {
                /**
                 * @description The action to take for extraneousDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              obfuscatedRequire?: {
                /**
                 * @description The action to take for obfuscatedRequire issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              obfuscatedFile?: {
                /**
                 * @description The action to take for obfuscatedFile issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              minifiedFile?: {
                /**
                 * @description The action to take for minifiedFile issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              installScripts?: {
                /**
                 * @description The action to take for installScripts issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              hasNativeCode?: {
                /**
                 * @description The action to take for hasNativeCode issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              binScriptConfusion?: {
                /**
                 * @description The action to take for binScriptConfusion issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              shellScriptOverride?: {
                /**
                 * @description The action to take for shellScriptOverride issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              didYouMean?: {
                /**
                 * @description The action to take for didYouMean issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              gptDidYouMean?: {
                /**
                 * @description The action to take for gptDidYouMean issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              bidi?: {
                /**
                 * @description The action to take for bidi issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              zeroWidth?: {
                /**
                 * @description The action to take for zeroWidth issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              badEncoding?: {
                /**
                 * @description The action to take for badEncoding issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              homoglyphs?: {
                /**
                 * @description The action to take for homoglyphs issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              invisibleChars?: {
                /**
                 * @description The action to take for invisibleChars issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              suspiciousString?: {
                /**
                 * @description The action to take for suspiciousString issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              potentialVulnerability?: {
                /**
                 * @description The action to take for potentialVulnerability issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxProposedApiUsage?: {
                /**
                 * @description The action to take for vsxProposedApiUsage issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxActivationWildcard?: {
                /**
                 * @description The action to take for vsxActivationWildcard issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxWorkspaceContainsActivation?: {
                /**
                 * @description The action to take for vsxWorkspaceContainsActivation issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxUntrustedWorkspaceSupported?: {
                /**
                 * @description The action to take for vsxUntrustedWorkspaceSupported issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxVirtualWorkspaceSupported?: {
                /**
                 * @description The action to take for vsxVirtualWorkspaceSupported issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxWebviewContribution?: {
                /**
                 * @description The action to take for vsxWebviewContribution issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxDebuggerContribution?: {
                /**
                 * @description The action to take for vsxDebuggerContribution issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxExtensionDependency?: {
                /**
                 * @description The action to take for vsxExtensionDependency issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
              vsxExtensionPack?: {
                /**
                 * @description The action to take for vsxExtensionPack issues.
                 * @enum {string}
                 */
                action: 'defer' | 'error' | 'warn' | 'monitor' | 'ignore'
              }
            }
            /**
             * @description The default security policy for the organization
             * @default default
             * @enum {string}
             */
            securityPolicyDefault?:
              | 'default'
              | 'low'
              | 'medium'
              | 'high'
              | undefined
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get Organization License Policy
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/viewlicensepolicy) instead.
   *
   * Retrieve the license policy of an organization.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - license-policy:read
   */
  getOrgLicensePolicy: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description Retrieved license policy details */
      200: {
        content: {
          'application/json': Record<string, never>
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Update License Policy
   * @description Set the organization's license policy
   *
   *       ## License policy schema
   *
   * ```json
   * {
   *   allow?: Array<string>
   *   warn?: Array<string>
   *   options?: Array<string>
   * }
   * ```
   *
   * Elements of the `allow` and `warn` arrays strings representing items which should be allowed, or which should trigger a warning; license data found in package which not present in either array will produce a license violation (effectively a "hard" error). For example, to allow Apache-2.0 and MIT to the allow list, simply add the strings "Apache-2.0" and "MIT" to the `allow` array. Strings appearing in these arrays are generally "what you see is what you get", with two important exceptions: strings which are recognized as license classes and strings which are recognized as PURLs are handled differently to allow for more flexible license policy creation.
   *
   * ## License Classes
   *
   * Strings which are license classes will expand to a list of licenses known to be in that particular license class. Recognized license classes are:
   *   'permissive',
   *   'permissive (model)',
   *   'permissive (gold)',
   *   'permissive (silver)',
   *   'permissive (bronze)',
   *   'permissive (lead)',
   *   'copyleft',
   *   'maximal copyleft',
   *   'network copyleft',
   *   'strong copyleft',
   *   'weak copyleft',
   *   'contributor license agreement',
   *   'public domain',
   *   'proprietary free',
   *   'source available',
   *   'proprietary',
   *   'commercial',
   *   'patent'
   *
   * Users can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.
   *
   *
   * ## PURLs
   *
   * Users may also modify their license policy's allow and warn lists by using [package URLs](https://github.com/package-url/purl-spec) (aka PURLs), which support glob patterns to allow a range of versions, files and directories, etc.
   *
   * purl qualifiers which support globs are `filename`, `version_glob`, `artifact_id` and `license_provenance` (primarily used for allowing data from registry metadata).
   *
   * ### Examples:
   * Allow all license data found in a specific version of a package 4.14.1: `pkg:npm/lodash@4.14.1`
   * Allow all license data found in a version range of a package: `pkg:npm/lodash?version_glob=15.*`
   * Allow all license data in the test directory of a given package for certain version ranges: `pkg:npm/lodash@15.*.*?file_name=lodash/test/*`
   * Allow all license data taken from the package registry for a package and version range: `pkg:npm/lodash?version_glob=*&license_provenance=registry_metadata`
   *
   * ## Available options
   *
   * `toplevelOnly`: only apply the license policy to "top level" license data in a package, which includes registry metadata, LICENSE files, and manifest files which are closest to the root of the package.
   *
   * `applyToUnidentified`: Apply license policy to found but unidentified license data. If enabled, the license policy will be applied to license data which could not be affirmatively identified as a known license (this will effectively merge the license policy violation and unidentified license alerts). If disabled, license policy alerts will only be shown for license data which is positively identified as something not allowed or set to warn by the license policy.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - license-policy:update
   */
  updateOrgLicensePolicy: {
    parameters: {
      query: {
        /** @description Merge the policy update with the existing policy. Default is true. If false, the existing policy will be replaced with the new policy. */
        merge_update: boolean
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    requestBody?: {
      content: {
        'application/json': Record<string, never>
      }
    }
    responses: {
      /** @description Updated repository details */
      200: {
        content: {
          'application/json': Record<string, never>
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get License Policy (Beta)
   * @description Returns an organization's license policy
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - license-policy:read
   */
  viewLicensePolicy: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description Saturated License Allow List */
      200: {
        content: {
          'application/json': components['schemas']['SStoredLicensePolicy']
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
      500: components['responses']['SocketInternalServerError']
    }
  }
  /**
   * Get Socket Basics configuration, including toggles for the various tools it supports.
   * @description Socket Basics is a CI/CD security scanning suite that runs on your source code, designed to complement Socket SCA and provide full coverage.
   *
   * - **SAST** - Find issues and risks with your code via static analysis using best in class Open Source tools
   * - **Secret Scanning** - Detected potentially leaked secrets and credentials within your code
   * - **Container Security** - Docker image and Dockerfile vulnerability scanning
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - socket-basics:read
   */
  getSocketBasicsConfig: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description Socket Basics settings */
      200: {
        content: {
          'application/json': {
            /**
             * @description Run a SAST Scan on your source code as part of the Socket Basics scan
             * @default false
             */
            pythonSastEnabled?: boolean | undefined
            /**
             * @description Run a SAST Scan on your source code as part of the Socket Basics scan
             * @default false
             */
            golangSastEnabled?: boolean | undefined
            /**
             * @description Run a SAST Scan on your source code as part of the Socket Basics scan
             * @default false
             */
            javascriptSastEnabled?: boolean | undefined
            /**
             * @description Scan for hardcoded secrets and credentials in your code as part of the Socket Basics scan
             * @default false
             */
            secretScanningEnabled?: boolean | undefined
            /**
             * @description Run a vulnerability scan on your Docker images as part of the Socket Basics scan
             * @default false
             */
            trivyImageEnabled?: boolean | undefined
            /**
             * @description Run a vulnerability scan on your Dockerfiles as part of the Socket Basics scan
             * @default false
             */
            trivyDockerfileEnabled?: boolean | undefined
            /**
             * @description Scan dependencies for security vulnerabilities and issues as part of the Socket Basics scan
             * @default false
             */
            socketScanningEnabled?: boolean | undefined
            /**
             * @description Enables or disable running a Socket SCA Scan as part of the Socket Basics scan. If you have Socket already enabled via the Github App this is not needed. Socket SCA provides 0 day protection of Open Source Supply Chain packages, CVE Reachability, and operational risk of packages.
             * @default false
             */
            socketScaEnabled?: boolean | undefined
            /**
             * Format: Additional configuration for Socket Basics, includes support for experimental and custom tooling.
             * @default
             */
            additionalParameters?: string | undefined
          }
        }
      }
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * List historical alerts (Beta)
   * @description List historical alerts.
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - historical:alerts-list
   */
  historicalAlertsList: {
    parameters: {
      query?: {
        /** @description The UTC date in YYYY-MM-DD format for which to fetch alerts */
        date?: string | undefined
        /** @description The number of days of data to fetch as an offset from input date (e.g. "-7d" or "7d") or use "latest" to query for latest alerts for each repo */
        range?: string | undefined
        /** @description Specify the maximum number of results to return per page (intermediate pages may have fewer than this limit and callers should always check "endCursor" in response body to know if there are more pages) */
        per_page?: number | undefined
        /** @description The pagination cursor that was returned as the "endCursor" property in previous request */
        startAfterCursor?: string | undefined
        /** @description Comma-separated list of alert severities ("low", "medium", "high", or "critical") that should be included */
        'filters.alertSeverity'?: string
        /** @description Comma-separated list of alert severities ("low", "medium", "high", or "critical") that should be excluded */
        'filters.alertSeverity.notIn'?: string
        /** @description Comma-separated list of repo slugs that should be included */
        'filters.repoSlug'?: string
        /** @description Comma-separated list of repo slugs that should be excluded */
        'filters.repoSlug.notIn'?: string
        /** @description Comma-separated list of repo labels that should be included. Use "" to filter for repositories with no labels. */
        'filters.repoLabels'?: string
        /** @description Comma-separated list of repo labels that should be excluded. Use "" to filter for repositories with no labels. */
        'filters.repoLabels.notIn'?: string
        /** @description Comma-separated list of alert types (e.g. "usesEval", "unmaintained", etc.) that should be included */
        'filters.alertType'?: string
        /** @description Comma-separated list of alert types (e.g. "usesEval", "unmaintained", etc.) that should be excluded */
        'filters.alertType.notIn'?: string
        /** @description Name of artifact */
        'filters.artifactName'?: string
        /** @description Name of artifact */
        'filters.artifactName.notIn'?: string
        /** @description Comma-separated list of artifact types (e.g. "npm", "pypi", "gem", "maven", "golang", etc.) that should be included */
        'filters.artifactType'?: string
        /** @description Comma-separated list of artifact types (e.g. "npm", "pypi", "gem", "maven", "golang", etc.) that should be excluded */
        'filters.artifactType.notIn'?: string
        /** @description Comma-separated list of alert actions ("error", "warn", "monitor", or "ignore) that should be included */
        'filters.alertAction'?: string
        /** @description Comma-separated list of alert actions ("error", "warn", "monitor", or "ignore) that should be excluded */
        'filters.alertAction.notIn'?: string
        /** @description Comma-separated list of alert action source types ("fallback", "injected-alert", "org-policy", "reachability", "repo-label-policy", "socket-yml", or "triage") that should be included */
        'filters.alertActionSourceType'?: string
        /** @description Comma-separated list of alert action source types ("fallback", "injected-alert", "org-policy", "reachability", "repo-label-policy", "socket-yml", or "triage") that should be excluded */
        'filters.alertActionSourceType.notIn'?: string
        /** @description Comma-separated list of alert fix types ("upgrade", "cve", or "remove") that should be included */
        'filters.alertFixType'?: string
        /** @description Comma-separated list of alert fix types ("upgrade", "cve", or "remove") that should be excluded */
        'filters.alertFixType.notIn'?: string
        /** @description Comma-separated list of alert categories ("supplyChainRisk", "maintenance", "quality", "license", or "vulnerability") that should be included */
        'filters.alertCategory'?: string
        /** @description Comma-separated list of alert categories ("supplyChainRisk", "maintenance", "quality", "license", or "vulnerability") that should be excluded */
        'filters.alertCategory.notIn'?: string
        /** @description CVE ID */
        'filters.alertCveId'?: string
        /** @description CVE ID */
        'filters.alertCveId.notIn'?: string
        /** @description CVE title */
        'filters.alertCveTitle'?: string
        /** @description CVE title */
        'filters.alertCveTitle.notIn'?: string
        /** @description CWE ID */
        'filters.alertCweId'?: string
        /** @description CWE ID */
        'filters.alertCweId.notIn'?: string
        /** @description CWE name */
        'filters.alertCweName'?: string
        /** @description CWE name */
        'filters.alertCweName.notIn'?: string
        /** @description Comma-separated list of alert CVE reachability types ("direct_dependency", "error", "maybe_reachable", "missing_support", "pending", "reachable", "undeterminable_reachability", "unknown", or "unreachable") that should be included */
        'filters.alertReachabilityType'?: string
        /** @description Comma-separated list of alert CVE reachability types ("direct_dependency", "error", "maybe_reachable", "missing_support", "pending", "reachable", "undeterminable_reachability", "unknown", or "unreachable") that should be excluded */
        'filters.alertReachabilityType.notIn'?: string
        /** @description Alert priority ("low", "medium", or "high") */
        'filters.alertPriority'?: string
        /** @description Alert priority ("low", "medium", or "high") */
        'filters.alertPriority.notIn'?: string
        /** @description Direct/transitive dependency filter flag */
        'filters.dependencyDirect'?: boolean
        /** @description Direct/transitive dependency filter flag */
        'filters.dependencyDirect.notIn'?: boolean
        /** @description Development/production dependency filter flag */
        'filters.dependencyDev'?: boolean
        /** @description Development/production dependency filter flag */
        'filters.dependencyDev.notIn'?: boolean
        /** @description Dead/reachable dependency filter flag */
        'filters.dependencyDead'?: boolean
        /** @description Dead/reachable dependency filter flag */
        'filters.dependencyDead.notIn'?: boolean
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description The paginated array of API tokens for the organization, and related metadata. */
      200: {
        content: {
          'application/json': {
            /** @default */
            endCursor: string | null
            items: Array<{
              /** @default */
              repoId: string | null
              /** @default */
              repoSlug: string
              repoLabels: string[]
              repoLabelIds: string[]
              /** @default */
              branch: string
              /** @default false */
              defaultBranch: boolean
              /** @default */
              fullScanId: string
              /** @default */
              scannedAt: string
              artifact: {
                /** @default */
                id: string | null
                /** @default */
                license: string | null
                /** @default */
                name: string
                /** @default */
                namespace: string | null
                /** @default */
                type: string
                /** @default */
                version: string
                /** @default */
                artifact_id?: string | undefined
                /** @default */
                artifactId?: string | undefined
                /** @default */
                author?: string | undefined
                capabilities?: components['schemas']['Capabilities'] | undefined
                qualifiers?: components['schemas']['Qualifiers'] | undefined
                scores?: components['schemas']['SocketScore'] | undefined
                /** @default 0 */
                size?: number | undefined
                /** @default */
                subpath?: string | undefined
              }
              alert: {
                /** @default */
                key: string
                /** @default */
                type: string
                /** @default 0 */
                severity: number
                /** @default */
                severityName: string
                /** @default */
                action: string
                /** @default */
                category: string
                /** @default */
                file?: string | null | undefined
                /** @default null */
                props?: Record<string, unknown> | null | undefined
                /** @default 0 */
                start?: number | null | undefined
                /** @default 0 */
                end?: number | null | undefined
                fix?: {
                  /** @default */
                  type: string
                  /** @default */
                  description: string
                } | null
              }
              dependency: {
                /** @default false */
                direct: boolean
                /** @default false */
                dev: boolean
                /** @default false */
                dead: boolean
                manifestFiles?: Array<
                  components['schemas']['SocketManifestReference']
                >
                topLevelAncestors?:
                  | Array<components['schemas']['SocketId']>
                  | undefined
                dependencies?:
                  | Array<components['schemas']['SocketId']>
                  | undefined
              }
            }>
            meta: {
              /** @default */
              organizationId: string
              /** @default 0 */
              queryStartTimestamp: number
              /** @default */
              startDateInclusive: string
              /** @default */
              endDateInclusive: string
              /** @default false */
              includeLatestAlertsOnly: boolean
              filters: {
                /** @description Comma-separated list of alert severities ("low", "medium", "high", or "critical") that should be excluded */
                alertSeverity?: string[] | undefined
                /** @description Comma-separated list of repo slugs that should be excluded */
                repoSlug?: string[] | undefined
                /** @description Comma-separated list of repo labels that should be excluded. Use "" to filter for repositories with no labels. */
                repoLabels?: string[] | undefined
                /** @description Comma-separated list of alert types (e.g. "usesEval", "unmaintained", etc.) that should be excluded */
                alertType?: string[] | undefined
                /** @description Name of artifact */
                artifactName?: string[] | undefined
                /** @description Comma-separated list of artifact types (e.g. "npm", "pypi", "gem", "maven", "golang", etc.) that should be excluded */
                artifactType?: string[] | undefined
                /** @description Comma-separated list of alert actions ("error", "warn", "monitor", or "ignore) that should be excluded */
                alertAction?: string[] | undefined
                /** @description Comma-separated list of alert action source types ("fallback", "injected-alert", "org-policy", "reachability", "repo-label-policy", "socket-yml", or "triage") that should be excluded */
                alertActionSourceType?: string[] | undefined
                /** @description Comma-separated list of alert fix types ("upgrade", "cve", or "remove") that should be excluded */
                alertFixType?: string[] | undefined
                /** @description Comma-separated list of alert categories ("supplyChainRisk", "maintenance", "quality", "license", or "vulnerability") that should be excluded */
                alertCategory?: string[] | undefined
                /** @description CVE ID */
                alertCveId?: string[] | undefined
                /** @description CVE title */
                alertCveTitle?: string[] | undefined
                /** @description CWE ID */
                alertCweId?: string[] | undefined
                /** @description CWE name */
                alertCweName?: string[] | undefined
                /** @description Comma-separated list of alert CVE reachability types ("direct_dependency", "error", "maybe_reachable", "missing_support", "pending", "reachable", "undeterminable_reachability", "unknown", or "unreachable") that should be excluded */
                alertReachabilityType?: string[] | undefined
                /** @description Alert priority ("low", "medium", or "high") */
                alertPriority?: string[] | undefined
                /** @description Direct/transitive dependency filter flag */
                dependencyDirect?: boolean[] | undefined
                /** @description Development/production dependency filter flag */
                dependencyDev?: boolean[] | undefined
                /** @description Dead/reachable dependency filter flag */
                dependencyDead?: boolean[] | undefined
              }
            }
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Trend of historical alerts (Beta)
   * @description Trend analytics of historical alerts.
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - historical:alerts-trend
   */
  historicalAlertsTrend: {
    parameters: {
      query?: {
        /** @description The UTC date in YYYY-MM-DD format for which to fetch alerts */
        date?: string | undefined
        /** @description The number of days of data to fetch as an offset from input date */
        range?: string | undefined
        /** @description Comma-separated list of fields that should be used for count aggregation (allowed: alertSeverity,repoSlug,repoLabels,alertType,artifactType,alertAction,alertActionSourceType,alertFixType,alertCategory,alertCveId,alertCveTitle,alertCweId,alertCweName,alertReachabilityType,alertPriority,dependencyDirect,dependencyDev,dependencyDead) */
        'aggregation.fields'?: string
        /** @description Comma-separated list of alert severities ("low", "medium", "high", or "critical") that should be included */
        'filters.alertSeverity'?: string
        /** @description Comma-separated list of alert severities ("low", "medium", "high", or "critical") that should be excluded */
        'filters.alertSeverity.notIn'?: string
        /** @description Comma-separated list of repo slugs that should be included */
        'filters.repoSlug'?: string
        /** @description Comma-separated list of repo slugs that should be excluded */
        'filters.repoSlug.notIn'?: string
        /** @description Comma-separated list of repo labels that should be included. Use "" to filter for repositories with no labels. */
        'filters.repoLabels'?: string
        /** @description Comma-separated list of repo labels that should be excluded. Use "" to filter for repositories with no labels. */
        'filters.repoLabels.notIn'?: string
        /** @description Comma-separated list of alert types (e.g. "usesEval", "unmaintained", etc.) that should be included */
        'filters.alertType'?: string
        /** @description Comma-separated list of alert types (e.g. "usesEval", "unmaintained", etc.) that should be excluded */
        'filters.alertType.notIn'?: string
        /** @description Name of artifact */
        'filters.artifactName'?: string
        /** @description Name of artifact */
        'filters.artifactName.notIn'?: string
        /** @description Comma-separated list of artifact types (e.g. "npm", "pypi", "gem", "maven", "golang", etc.) that should be included */
        'filters.artifactType'?: string
        /** @description Comma-separated list of artifact types (e.g. "npm", "pypi", "gem", "maven", "golang", etc.) that should be excluded */
        'filters.artifactType.notIn'?: string
        /** @description Comma-separated list of alert actions ("error", "warn", "monitor", or "ignore) that should be included */
        'filters.alertAction'?: string
        /** @description Comma-separated list of alert actions ("error", "warn", "monitor", or "ignore) that should be excluded */
        'filters.alertAction.notIn'?: string
        /** @description Comma-separated list of alert action source types ("fallback", "injected-alert", "org-policy", "reachability", "repo-label-policy", "socket-yml", or "triage") that should be included */
        'filters.alertActionSourceType'?: string
        /** @description Comma-separated list of alert action source types ("fallback", "injected-alert", "org-policy", "reachability", "repo-label-policy", "socket-yml", or "triage") that should be excluded */
        'filters.alertActionSourceType.notIn'?: string
        /** @description Comma-separated list of alert fix types ("upgrade", "cve", or "remove") that should be included */
        'filters.alertFixType'?: string
        /** @description Comma-separated list of alert fix types ("upgrade", "cve", or "remove") that should be excluded */
        'filters.alertFixType.notIn'?: string
        /** @description Comma-separated list of alert categories ("supplyChainRisk", "maintenance", "quality", "license", or "vulnerability") that should be included */
        'filters.alertCategory'?: string
        /** @description Comma-separated list of alert categories ("supplyChainRisk", "maintenance", "quality", "license", or "vulnerability") that should be excluded */
        'filters.alertCategory.notIn'?: string
        /** @description CVE ID */
        'filters.alertCveId'?: string
        /** @description CVE ID */
        'filters.alertCveId.notIn'?: string
        /** @description CVE title */
        'filters.alertCveTitle'?: string
        /** @description CVE title */
        'filters.alertCveTitle.notIn'?: string
        /** @description CWE ID */
        'filters.alertCweId'?: string
        /** @description CWE ID */
        'filters.alertCweId.notIn'?: string
        /** @description CWE name */
        'filters.alertCweName'?: string
        /** @description CWE name */
        'filters.alertCweName.notIn'?: string
        /** @description Comma-separated list of alert CVE reachability types ("direct_dependency", "error", "maybe_reachable", "missing_support", "pending", "reachable", "undeterminable_reachability", "unknown", or "unreachable") that should be included */
        'filters.alertReachabilityType'?: string
        /** @description Comma-separated list of alert CVE reachability types ("direct_dependency", "error", "maybe_reachable", "missing_support", "pending", "reachable", "undeterminable_reachability", "unknown", or "unreachable") that should be excluded */
        'filters.alertReachabilityType.notIn'?: string
        /** @description Alert priority ("low", "medium", or "high") */
        'filters.alertPriority'?: string
        /** @description Alert priority ("low", "medium", or "high") */
        'filters.alertPriority.notIn'?: string
        /** @description Direct/transitive dependency filter flag */
        'filters.dependencyDirect'?: boolean
        /** @description Direct/transitive dependency filter flag */
        'filters.dependencyDirect.notIn'?: boolean
        /** @description Development/production dependency filter flag */
        'filters.dependencyDev'?: boolean
        /** @description Development/production dependency filter flag */
        'filters.dependencyDev.notIn'?: boolean
        /** @description Dead/reachable dependency filter flag */
        'filters.dependencyDead'?: boolean
        /** @description Dead/reachable dependency filter flag */
        'filters.dependencyDead.notIn'?: boolean
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description The trend data */
      200: {
        content: {
          'application/json': {
            meta: {
              /** @default */
              organizationId: string
              /** @default */
              startDateInclusive: string
              /** @default */
              endDateInclusive: string
              /** @default */
              interval: string
              aggregation: {
                fields: string[]
                groups: string[][]
              }
              filters: {
                /** @description Comma-separated list of alert severities ("low", "medium", "high", or "critical") that should be excluded */
                alertSeverity?: string[] | undefined
                /** @description Comma-separated list of repo slugs that should be excluded */
                repoSlug?: string[] | undefined
                /** @description Comma-separated list of repo labels that should be excluded. Use "" to filter for repositories with no labels. */
                repoLabels?: string[] | undefined
                /** @description Comma-separated list of alert types (e.g. "usesEval", "unmaintained", etc.) that should be excluded */
                alertType?: string[] | undefined
                /** @description Name of artifact */
                artifactName?: string[] | undefined
                /** @description Comma-separated list of artifact types (e.g. "npm", "pypi", "gem", "maven", "golang", etc.) that should be excluded */
                artifactType?: string[] | undefined
                /** @description Comma-separated list of alert actions ("error", "warn", "monitor", or "ignore) that should be excluded */
                alertAction?: string[] | undefined
                /** @description Comma-separated list of alert action source types ("fallback", "injected-alert", "org-policy", "reachability", "repo-label-policy", "socket-yml", or "triage") that should be excluded */
                alertActionSourceType?: string[] | undefined
                /** @description Comma-separated list of alert fix types ("upgrade", "cve", or "remove") that should be excluded */
                alertFixType?: string[] | undefined
                /** @description Comma-separated list of alert categories ("supplyChainRisk", "maintenance", "quality", "license", or "vulnerability") that should be excluded */
                alertCategory?: string[] | undefined
                /** @description CVE ID */
                alertCveId?: string[] | undefined
                /** @description CVE title */
                alertCveTitle?: string[] | undefined
                /** @description CWE ID */
                alertCweId?: string[] | undefined
                /** @description CWE name */
                alertCweName?: string[] | undefined
                /** @description Comma-separated list of alert CVE reachability types ("direct_dependency", "error", "maybe_reachable", "missing_support", "pending", "reachable", "undeterminable_reachability", "unknown", or "unreachable") that should be excluded */
                alertReachabilityType?: string[] | undefined
                /** @description Alert priority ("low", "medium", or "high") */
                alertPriority?: string[] | undefined
                /** @description Direct/transitive dependency filter flag */
                dependencyDirect?: boolean[] | undefined
                /** @description Development/production dependency filter flag */
                dependencyDev?: boolean[] | undefined
                /** @description Dead/reachable dependency filter flag */
                dependencyDead?: boolean[] | undefined
              }
            }
            items: Array<{
              /** @default */
              date: string
              /** @default 0 */
              startOfDayTimestamp: number
              dataPoints: Array<{
                aggregationGroup: string[]
                /** @default 0 */
                count: number
                /** @default 0 */
                countDelta: number
              }>
            }>
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Trend of historical dependencies (Beta)
   * @description Trend analytics of historical dependencies.
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - historical:dependencies-trend
   */
  historicalDependenciesTrend: {
    parameters: {
      query?: {
        /** @description The UTC date in YYYY-MM-DD format for which to fetch dependencies */
        date?: string | undefined
        /** @description The number of days of data to fetch as an offset from input date */
        range?: string | undefined
        /** @description Comma-separated list of repo slugs that should be included */
        repoSlug?: string | undefined
        /** @description Comma-separated list of repo labels that should be included */
        repoLabels?: string | undefined
        /** @description Comma-separated list of artifact types (e.g. "npm", "pypi", "gem", "maven", "golang", etc.) that should be included */
        artifactType?: string | undefined
        /** @description Direct/transitive dependency filter flag */
        dependencyDirect?: boolean | undefined
        /** @description Development/production dependency filter flag */
        dependencyDev?: boolean | undefined
        /** @description Dead/reachable dependency filter flag */
        dependencyDead?: boolean | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description The trend data */
      200: {
        content: {
          'application/json': {
            meta: {
              /** @default */
              organizationId: string
              /** @default */
              startDateInclusive: string
              /** @default */
              endDateInclusive: string
              /** @default */
              interval: string
              aggregation: {
                fields: string[]
                groups: string[][]
              }
              filters: {
                /** @description Comma-separated list of repo slugs that should be included */
                repoSlug?: string[] | undefined
                /** @description Comma-separated list of repo labels that should be included */
                repoLabels?: string[] | undefined
                /** @description Comma-separated list of artifact types (e.g. "npm", "pypi", "gem", "maven", "golang", etc.) that should be included */
                artifactType?: string[] | undefined
                /** @description Direct/transitive dependency filter flag */
                dependencyDirect?: boolean[] | undefined
                /** @description Development/production dependency filter flag */
                dependencyDev?: boolean[] | undefined
                /** @description Dead/reachable dependency filter flag */
                dependencyDead?: boolean[] | undefined
              }
            }
            items: Array<{
              /** @default */
              date: string
              /** @default 0 */
              startOfDayTimestamp: number
              dataPoints: Array<{
                aggregationGroup: string[]
                /** @default 0 */
                count: number
                /** @default 0 */
                countDelta: number
                /** @default 0 */
                countDirect: number
                /** @default 0 */
                countDirectDelta: number
                /** @default 0 */
                countIndirect: number
                /** @default 0 */
                countIndirectDelta: number
                countsBySeverity: {
                  low: {
                    /** @default 0 */
                    count: number
                    /** @default 0 */
                    countDelta: number
                    /** @default 0 */
                    countDirect: number
                    /** @default 0 */
                    countDirectDelta: number
                    /** @default 0 */
                    countIndirect: number
                    /** @default 0 */
                    countIndirectDelta: number
                  }
                  medium: {
                    /** @default 0 */
                    count: number
                    /** @default 0 */
                    countDelta: number
                    /** @default 0 */
                    countDirect: number
                    /** @default 0 */
                    countDirectDelta: number
                    /** @default 0 */
                    countIndirect: number
                    /** @default 0 */
                    countIndirectDelta: number
                  }
                  high: {
                    /** @default 0 */
                    count: number
                    /** @default 0 */
                    countDelta: number
                    /** @default 0 */
                    countDirect: number
                    /** @default 0 */
                    countDirectDelta: number
                    /** @default 0 */
                    countIndirect: number
                    /** @default 0 */
                    countIndirectDelta: number
                  }
                  critical: {
                    /** @default 0 */
                    count: number
                    /** @default 0 */
                    countDelta: number
                    /** @default 0 */
                    countDirect: number
                    /** @default 0 */
                    countDirectDelta: number
                    /** @default 0 */
                    countIndirect: number
                    /** @default 0 */
                    countIndirectDelta: number
                  }
                }
              }>
            }>
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * List details of periodic historical data snapshots (Beta)
   * @description This API endpoint is used to list the details of historical snapshots.
   * Snapshots of organization data are taken periodically, and each historical snapshot record contains high-level overview metrics about the data that was collected.
   * Other [Historical Data Endpoints](/reference/historical-data-endpoints) can be used to fetch the raw data associated with each snapshot.
   *
   * Historical snapshots contain details and raw data for the following resources:
   *
   * - Repositories
   * - Alerts
   * - Dependencies
   * - Artifacts
   * - Users
   * - Settings
   *
   * Daily snapshot data is bucketed to the nearest day which is described in more detail at: [Historical Data Endpoints](/reference/historical-data-endpoints)
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - historical:snapshots-list
   */
  historicalSnapshotsList: {
    parameters: {
      query?: {
        /** @description The UTC date in YYYY-MM-DD format for which to fetch snapshots */
        date?: string | undefined
        /** @description The number of days of data to fetch as an offset from input date (e.g. "-7d" or "7d") or use "latest" to query for latest snapshots for each repo */
        range?: string | undefined
        /** @description Specify the maximum number of results to return per page (intermediate pages may have fewer than this limit and callers should always check "endCursor" in response body to know if there are more pages) */
        per_page?: number | undefined
        /** @description The pagination cursor that was returned as the "endCursor" property in previous request */
        startAfterCursor?: string | undefined
        /** @description Comma-separated list of historical snapshot statuses that should be included (allowed: "in-progress", "success", "failure", "timeout", "skipped") */
        'filters.status'?: string
        /** @description Comma-separated list of requestId values that were used to start the historical snapshot job */
        'filters.requestId'?: string
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description The historical snapshots. */
      200: {
        content: {
          'application/json': {
            meta: {
              /** @default */
              organizationId: string
              /** @default 0 */
              queryStartTimestamp: number
              /** @default */
              startDateInclusive: string
              /** @default */
              endDateInclusive: string
              filters: {
                status?: string[] | undefined
                requestId?: string[] | undefined
              }
            }
            items: Array<{
              /** @default */
              id: string
              /** @default */
              requestId: string
              /** @default */
              requestedBy: string
              /** @default */
              requestedAt: string
              /** @default */
              startedAt: string
              /** @default */
              finishedAt: string | null
              /** @default 0 */
              durationMs: number
              /** @default */
              status: string
              /** @default 0 */
              numReposScanned: number
              /** @default 0 */
              numSbomsScanned: number
              /** @default 0 */
              numLowAlerts: number
              /** @default 0 */
              numHighAlerts: number
              /** @default 0 */
              numMediumAlerts: number
              /** @default 0 */
              numCriticalAlerts: number
              /** @default 0 */
              numIgnoredLowAlerts: number
              /** @default 0 */
              numIgnoredHighAlerts: number
              /** @default 0 */
              numIgnoredMediumAlerts: number
              /** @default 0 */
              numIgnoredCriticalAlerts: number
            }>
            /** @default */
            endCursor: string | null
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Start historical data snapshot job (Beta)
   * @description This API endpoint is used to start a historical snapshot job.
   * While snapshots are typically taken at least once a day, this endpoint can be used to start an "on demand" snapshot job to ensure the latest data is collected and stored for historical purposes.
   *
   * An historical snapshot will contain details and raw data for the following resources:
   *
   * - Repositories
   * - Alerts
   * - Dependencies
   * - Artifacts
   * - Users
   * - Settings
   *
   * Historical snapshot data is bucketed to the nearest day which is described in more detail at: [Historical Data Endpoints](/reference/historical-data-endpoints)
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - historical:snapshots-start
   */
  historicalSnapshotsStart: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description The details of the snapshot job request. */
      200: {
        content: {
          'application/json': {
            /** @default */
            requestId: string
            /** @default */
            requestedBy: string
            /** @default */
            requestedAt: string
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get Audit Log Events
   * @description Paginated list of audit log events.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - audit-log:list
   */
  getAuditLogEvents: {
    parameters: {
      query?: {
        /** @description Filter audit log events by type. Omit for all types. */
        type?:
          | 'AddLicenseOverlayNote'
          | 'AssociateLabel'
          | 'CancelInvitation'
          | 'ChangeMemberRole'
          | 'ChangePlanSubscriptionSeats'
          | 'CreateApiToken'
          | 'CreateLabel'
          | 'CreateWebhook'
          | 'DeleteFullScan'
          | 'DeleteLabel'
          | 'DeleteLabelSetting'
          | 'DeleteReport'
          | 'DeleteRepository'
          | 'DeleteWebhook'
          | 'DisassociateLabel'
          | 'DowngradeOrganizationPlan'
          | 'JoinOrganization'
          | 'RemoveLicenseOverlay'
          | 'RemoveMember'
          | 'ResetInvitationLink'
          | 'ResetOrganizationSettingToDefault'
          | 'RevokeApiToken'
          | 'RotateApiToken'
          | 'SendInvitation'
          | 'SetLabelSettingToDefault'
          | 'SyncOrganization'
          | 'TransferOwnership'
          | 'UpdateAlertTriage'
          | 'UpdateApiTokenCommitter'
          | 'UpdateApiTokenMaxQuota'
          | 'UpdateApiTokenName'
          | 'UpdateApiTokenScopes'
          | 'UpdateApiTokenVisibility'
          | 'UpdateAutopatchCurated'
          | 'UpdateLabel'
          | 'UpdateLabelSetting'
          | 'UpdateOrganizationSetting'
          | 'UpdateWebhook'
          | 'UpgradeOrganizationPlan'
        /** @description Number of events per page */
        per_page?: number | undefined
        /** @description Page token */
        page?: string | undefined
        /** @description A Unix timestamp in seconds to filter results prior to this date. */
        from?: string | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description The paginated list of events in an organizations audit log and the next page querystring token. */
      200: {
        content: {
          'application/json': {
            results: Array<{
              /** @default */
              event_id?: string | undefined
              /** @default */
              created_at?: string | undefined
              /** @default */
              updated_at?: string | undefined
              /** @default */
              country_code?: string | null | undefined
              /** @default */
              organization_id?: string | null | undefined
              /** @default */
              ip_address?: string | null | undefined
              /** @default null */
              payload?: Record<string, unknown> | null | undefined
              /** @default 0 */
              status_code?: number | null | undefined
              /** @default */
              type?: string | undefined
              /** @default */
              user_agent?: string | null | undefined
              /** @default */
              user_id?: string | null | undefined
              /** @default */
              user_email?: string | undefined
              /** @default */
              user_image?: string | undefined
              /** @default */
              organization_name?: string | undefined
            }>
            /** @default */
            nextPage: string | null
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * List API Tokens
   * @description List all API Tokens.
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - api-tokens:list
   */
  getAPITokens: {
    parameters: {
      query?: {
        /** @description Specify Sort order. */
        sort?: 'created_at' | undefined
        /** @description Specify sort direction. */
        direction?: 'asc' | 'desc' | undefined
        /** @description Specify the maximum number of results to return per page. */
        per_page?: number | undefined
        /** @description The token specifying which page to return. */
        page?: number | undefined
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description The paginated array of API tokens for the organization, and related metadata. */
      200: {
        content: {
          'application/json': {
            tokens: Array<{
              committers: Array<{
                /** @default */
                email?: string | undefined
                /**
                 * @default api
                 * @enum {string}
                 */
                provider?:
                  | 'api'
                  | 'azure'
                  | 'bitbucket'
                  | 'github'
                  | 'gitlab'
                  | undefined
                /** @default */
                providerLoginName?: string | undefined
                /** @default */
                providerUserId?: string | undefined
              }>
              /**
               * Format: date
               * @default
               */
              created_at: string
              /**
               * @description The ID of the API Token
               * @default
               */
              id: string
              /**
               * Format: date
               * @default
               */
              last_used_at: string
              /** @default 1000 */
              max_quota: number
              /**
               * @description Name for the API Token
               * @default api token
               */
              name: string | null
              scopes: Array<
                | 'alerts'
                | 'alerts:list'
                | 'alerts:trend'
                | 'api-tokens'
                | 'api-tokens:create'
                | 'api-tokens:update'
                | 'api-tokens:revoke'
                | 'api-tokens:rotate'
                | 'api-tokens:list'
                | 'audit-log'
                | 'audit-log:list'
                | 'dependencies'
                | 'dependencies:list'
                | 'dependencies:trend'
                | 'full-scans'
                | 'full-scans:list'
                | 'full-scans:create'
                | 'full-scans:delete'
                | 'diff-scans'
                | 'diff-scans:list'
                | 'diff-scans:create'
                | 'diff-scans:delete'
                | 'entitlements'
                | 'entitlements:list'
                | 'historical'
                | 'historical:snapshots-list'
                | 'historical:snapshots-start'
                | 'historical:alerts-list'
                | 'historical:alerts-trend'
                | 'historical:dependencies-list'
                | 'historical:dependencies-trend'
                | 'integration'
                | 'integration:list'
                | 'integration:create'
                | 'integration:update'
                | 'integration:delete'
                | 'license-policy'
                | 'license-policy:update'
                | 'license-policy:read'
                | 'packages'
                | 'packages:list'
                | 'report'
                | 'report:list'
                | 'report:read'
                | 'report:write'
                | 'repo'
                | 'repo:list'
                | 'repo:create'
                | 'repo:update'
                | 'repo:delete'
                | 'repo-label'
                | 'repo-label:list'
                | 'repo-label:create'
                | 'repo-label:update'
                | 'repo-label:delete'
                | 'security-policy'
                | 'security-policy:update'
                | 'security-policy:read'
                | 'socket-basics'
                | 'socket-basics:read'
                | 'threat-feed'
                | 'threat-feed:list'
                | 'triage'
                | 'triage:alerts-list'
                | 'triage:alerts-update'
              >
              /**
               * @description The obfuscated token of the API Token
               * @default
               */
              token: string
              /**
               * @description The visibility of the API Token. Warning: this field is deprecated and will be removed in the future.
               * @default organization
               * @enum {string}
               */
              visibility: 'admin' | 'organization'
            }>
            /** @default 0 */
            nextPage: number | null
          }
        }
      }
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Create API Token
   * @description Create an API Token. The API Token created must use a subset of permissions the API token creating them.
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - api-tokens:create
   */
  postAPIToken: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    /** @description The settings to create the api token with. */
    requestBody?: {
      content: {
        'application/json': {
          /** @default 1000 */
          max_quota: number
          scopes: Array<
            | 'alerts'
            | 'alerts:list'
            | 'alerts:trend'
            | 'api-tokens'
            | 'api-tokens:create'
            | 'api-tokens:update'
            | 'api-tokens:revoke'
            | 'api-tokens:rotate'
            | 'api-tokens:list'
            | 'audit-log'
            | 'audit-log:list'
            | 'dependencies'
            | 'dependencies:list'
            | 'dependencies:trend'
            | 'full-scans'
            | 'full-scans:list'
            | 'full-scans:create'
            | 'full-scans:delete'
            | 'diff-scans'
            | 'diff-scans:list'
            | 'diff-scans:create'
            | 'diff-scans:delete'
            | 'entitlements'
            | 'entitlements:list'
            | 'historical'
            | 'historical:snapshots-list'
            | 'historical:snapshots-start'
            | 'historical:alerts-list'
            | 'historical:alerts-trend'
            | 'historical:dependencies-list'
            | 'historical:dependencies-trend'
            | 'integration'
            | 'integration:list'
            | 'integration:create'
            | 'integration:update'
            | 'integration:delete'
            | 'license-policy'
            | 'license-policy:update'
            | 'license-policy:read'
            | 'packages'
            | 'packages:list'
            | 'report'
            | 'report:list'
            | 'report:read'
            | 'report:write'
            | 'repo'
            | 'repo:list'
            | 'repo:create'
            | 'repo:update'
            | 'repo:delete'
            | 'repo-label'
            | 'repo-label:list'
            | 'repo-label:create'
            | 'repo-label:update'
            | 'repo-label:delete'
            | 'security-policy'
            | 'security-policy:update'
            | 'security-policy:read'
            | 'socket-basics'
            | 'socket-basics:read'
            | 'threat-feed'
            | 'threat-feed:list'
            | 'triage'
            | 'triage:alerts-list'
            | 'triage:alerts-update'
          >
          /**
           * @description The visibility of the API Token. Warning: this field is deprecated and will be removed in the future.
           * @default organization
           * @enum {string}
           */
          visibility: 'admin' | 'organization'
          committer: {
            /** @default */
            email?: string | undefined
            /**
             * @default api
             * @enum {string}
             */
            provider?:
              | 'api'
              | 'azure'
              | 'bitbucket'
              | 'github'
              | 'gitlab'
              | undefined
            /** @default */
            providerLoginName?: string | undefined
            /** @default */
            providerUserId?: string | undefined
          }
          /**
           * @description Name for the API Token
           * @default api token
           */
          name?: string | undefined
        }
      }
    }
    responses: {
      /** @description The newly created api token. */
      200: {
        content: {
          'application/json': {
            /** @default */
            token: string
          }
        }
      }
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Update API Token
   * @description Update an API Token. The API Token created must use a subset of permissions the API token creating them.
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - api-tokens:create
   */
  postAPITokenUpdate: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    /** @description The token and properties to update on the token. */
    requestBody?: {
      content: {
        'application/json': {
          /** @default 1000 */
          max_quota: number
          scopes: Array<
            | 'alerts'
            | 'alerts:list'
            | 'alerts:trend'
            | 'api-tokens'
            | 'api-tokens:create'
            | 'api-tokens:update'
            | 'api-tokens:revoke'
            | 'api-tokens:rotate'
            | 'api-tokens:list'
            | 'audit-log'
            | 'audit-log:list'
            | 'dependencies'
            | 'dependencies:list'
            | 'dependencies:trend'
            | 'full-scans'
            | 'full-scans:list'
            | 'full-scans:create'
            | 'full-scans:delete'
            | 'diff-scans'
            | 'diff-scans:list'
            | 'diff-scans:create'
            | 'diff-scans:delete'
            | 'entitlements'
            | 'entitlements:list'
            | 'historical'
            | 'historical:snapshots-list'
            | 'historical:snapshots-start'
            | 'historical:alerts-list'
            | 'historical:alerts-trend'
            | 'historical:dependencies-list'
            | 'historical:dependencies-trend'
            | 'integration'
            | 'integration:list'
            | 'integration:create'
            | 'integration:update'
            | 'integration:delete'
            | 'license-policy'
            | 'license-policy:update'
            | 'license-policy:read'
            | 'packages'
            | 'packages:list'
            | 'report'
            | 'report:list'
            | 'report:read'
            | 'report:write'
            | 'repo'
            | 'repo:list'
            | 'repo:create'
            | 'repo:update'
            | 'repo:delete'
            | 'repo-label'
            | 'repo-label:list'
            | 'repo-label:create'
            | 'repo-label:update'
            | 'repo-label:delete'
            | 'security-policy'
            | 'security-policy:update'
            | 'security-policy:read'
            | 'socket-basics'
            | 'socket-basics:read'
            | 'threat-feed'
            | 'threat-feed:list'
            | 'triage'
            | 'triage:alerts-list'
            | 'triage:alerts-update'
          >
          /** @default */
          token: string
          /**
           * @description The visibility of the API Token. Warning: this field is deprecated and will be removed in the future.
           * @default organization
           * @enum {string}
           */
          visibility: 'admin' | 'organization'
          committer: {
            /** @default */
            email?: string | undefined
            /**
             * @default api
             * @enum {string}
             */
            provider?:
              | 'api'
              | 'azure'
              | 'bitbucket'
              | 'github'
              | 'gitlab'
              | undefined
            /** @default */
            providerLoginName?: string | undefined
            /** @default */
            providerUserId?: string | undefined
          }
          /**
           * @description Name for the API Token
           * @default api token
           */
          name?: string | undefined
        }
      }
    }
    responses: {
      /** @description The updated token. */
      200: {
        content: {
          'application/json': {
            /** @default */
            token: string
          }
        }
      }
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Rotate API Token
   * @description Rotate an API Token
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - api-tokens:rotate
   */
  postAPITokensRotate: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    /** @description The API Token to rotate */
    requestBody?: {
      content: {
        'application/json': {
          /** @default */
          token: string
        }
      }
    }
    responses: {
      /** @description The replacement API Token */
      200: {
        content: {
          'application/json': {
            /** @default */
            token: string
          }
        }
      }
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Revoke API Token
   * @description Revoke an API Token
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - api-tokens:revoke
   */
  postAPITokensRevoke: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    /** @description The token to revoke. */
    requestBody?: {
      content: {
        'application/json': {
          /** @default */
          token: string
        }
      }
    }
    responses: {
      /** @description Response body */
      200: {
        content: {
          'application/json': {
            /**
             * Format: The status of the token
             * @default revoked
             */
            status: string
          }
        }
      }
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get supported file types
   * @description Get a list of supported files for full scan generation.
   * Files are categorized first by environment (e.g. NPM or PyPI), then by name.
   *
   * Files whose names match the patterns returned by this endpoint can be uploaded for report generation.
   * Examples of supported filenames include `package.json`, `package-lock.json`, and `yarn.lock`.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - No Scopes Required, but authentication is required
   */
  getSupportedFiles: {
    parameters: {
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description Glob patterns used to match supported files */
      200: {
        content: {
          'application/json': {
            [key: string]: {
              [key: string]: {
                /** @default */
                pattern: string
              }
            }
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get Threat Feed Items (Deprecated)
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/getorgthreatfeeditems) instead.
   *
   * Paginated list of threat feed items.
   *
   * This endpoint requires an Enterprise Plan with Threat Feed add-on. [Contact](https://socket.dev/demo?utm_source=api-docs&utm_medium=referral&utm_campaign=tracking) our sales team for more details.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - threat-feed:list
   */
  getThreatFeedItems: {
    parameters: {
      query?: {
        /** @description Number of threats per page */
        per_page?: number | undefined
        /** @description Page token */
        page?: string | undefined
        /** @description Sort sort the threat feed by ID or createdAt attribute. */
        sort?: 'id' | 'created_at' | undefined
        /** @description Filter results by discovery period */
        discovery_period?:
          | '1h'
          | '6h'
          | '1d'
          | '7d'
          | '30d'
          | '90d'
          | '365d'
          | undefined
        /** @description Ordering direction of the sort attribute */
        direction?: 'desc' | 'asc' | undefined
        /** @description Filter what type of threats to return */
        filter?:
          | 'u'
          | 'c'
          | 'fp'
          | 'tp'
          | 'mal'
          | 'vuln'
          | 'anom'
          | 'joke'
          | 'spy'
          | 'typo'
          | 'secret'
          | 'obf'
          | 'dual'
        /** @description Filter threats by package name */
        name?: string | undefined
        /** @description Filter threats by package version */
        version?: string | undefined
        /** @description Only return threats which have been human-reviewed */
        is_human_reviewed?: boolean | undefined
        /** @description Filter threats by package ecosystem type */
        ecosystem?:
          | 'github'
          | 'cargo'
          | 'chrome'
          | 'golang'
          | 'huggingface'
          | 'maven'
          | 'npm'
          | 'nuget'
          | 'pypi'
          | 'gem'
      }
    }
    responses: {
      /** @description The paginated list of threats in the feed and the next page querystring token. */
      200: {
        content: {
          'application/json': {
            results: Array<{
              /** @default */
              createdAt?: string | undefined
              /** @default */
              updatedAt?: string | undefined
              /** @default */
              description?: string | undefined
              /** @default 0 */
              id?: number | undefined
              /** @default */
              locationHtmlUrl?: string | undefined
              /** @default */
              packageHtmlUrl?: string | undefined
              /** @default */
              purl?: string | undefined
              /** @default */
              removedAt?: string | null | undefined
              /** @default */
              threatType?: string | undefined
              /**
               * @description Whether the threat still is in need of human review by the threat research team
               * @default false
               */
              needsHumanReview?: boolean | undefined
            }>
            /** @default */
            nextPage: string | null
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get Threat Feed Items (Beta)
   * @description Paginated list of threats, sorted by updated_at by default. Set updated_after to the unix timestamp of your last sync while sorting by updated_at to synchronize all new or updated threats in the feed.
   *
   * This endpoint requires an Enterprise Plan with Threat Feed add-on. [Contact](https://socket.dev/demo?utm_source=api-docs&utm_medium=referral&utm_campaign=tracking) our sales team for more details.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - threat-feed:list
   */
  getOrgThreatFeedItems: {
    parameters: {
      query?: {
        /** @description Number of threats per page */
        per_page?: number | undefined
        /** @description Page cursor token. Pass the returned nextPageCursor to this query string to fetch the next page of the threat feed. */
        page_cursor?: string | undefined
        /** @description Set the sort order for the threat feed items. Default is descending order by updated_at, which includes all new and updated threat feed items. */
        sort?: 'id' | 'created_at' | 'updated_at' | undefined
        /** @description A Unix timestamp in seconds that filters results to items only updated after the timestamp. */
        updated_after?: string | undefined
        /** @description A Unix timestamp in seconds that filters results to items only created after the date. */
        created_after?: string | undefined
        /** @description Order direction of the provided sort field. */
        direction?: 'desc' | 'asc' | undefined
        /** @description Filter what type of threats to return */
        filter?:
          | 'u'
          | 'c'
          | 'fp'
          | 'tp'
          | 'mal'
          | 'vuln'
          | 'anom'
          | 'joke'
          | 'spy'
          | 'typo'
          | 'secret'
          | 'obf'
          | 'dual'
        /** @description Filter threats by package name */
        name?: string | undefined
        /** @description Filter threats by package version. */
        version?: string | undefined
        /** @description Only return threats which have been human-reviewed */
        is_human_reviewed?: boolean | undefined
        /** @description Filter threats by package ecosystem type */
        ecosystem?:
          | 'github'
          | 'cargo'
          | 'chrome'
          | 'golang'
          | 'huggingface'
          | 'maven'
          | 'npm'
          | 'nuget'
          | 'pypi'
          | 'gem'
      }
      path: {
        /** @description The slug of the organization */
        org_slug: string
      }
    }
    responses: {
      /** @description The paginated list of items in the threat feed and the next page cursor. */
      200: {
        content: {
          'application/json': {
            results: Array<{
              /** @default */
              createdAt?: string | undefined
              /** @default */
              updatedAt?: string | undefined
              /** @default */
              description?: string | undefined
              /** @default 0 */
              id?: number | undefined
              /** @default */
              locationHtmlUrl?: string | undefined
              /** @default */
              packageHtmlUrl?: string | undefined
              /** @default */
              purl?: string | undefined
              /** @default */
              removedAt?: string | null | undefined
              /** @default */
              threatType?: string | undefined
              /**
               * @description Whether the threat still is in need of human review by the threat research team
               * @default false
               */
              needsHumanReview?: boolean | undefined
            }>
            /** @default */
            nextPageCursor: string | null
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * License Policy (Beta)
   * @description Compare the license data found for a list of packages (given as PURL strings) with the contents of a configurable license policy,
   *     returning information about license data which does not comply with the license allow list.
   *
   *     ## Example request body:
   *
   *     ```json
   *     {
   *       "components": [
   *         {
   *           "purl": "pkg:npm/lodash@4.17.21"
   *         },
   *         {
   *           "purl": "pkg:npm/lodash@4.14.1"
   *         }
   *       ],
   *       "allow": [
   *         "permissive",
   *         "pkg:npm/lodash?file_name=foo/test/*&version_glob=4.17.*"
   *       ],
   *       "warn": [
   *         "copyleft",
   *         "pkg:npm/lodash?file_name=foo/prod/*&version_glob=4.14.*"
   *       ],
   *       "options": ["toplevelOnly"]
   *     }
   *     ```
   *
   *
   *     ## Return value
   *
   *     For each requested PURL, an array is returned. Each array contains a list of license policy violations
   *     detected for the requested PURL.
   *
   *     Violations are accompanied by a string identifying the offending license data as `spdxAtomOrExtraData`,
   *     a message describing why the license data is believed to be incompatible with the license policy, and a list
   *     of locations (by filepath or other provenance information) where the offending license data may be found.
   *
   *     ```json
   *     Array<
   *       Array<{
   *         filepathOrProvenance: Array<string>,
   *         level: "warning" | "violation",
   *         purl: string,
   *         spdxAtomOrExtraData: string,
   *         violationExplanation: string
   *       }>
   *     >
   *     ```
   *
   *     ## License policy schema
   *
   * ```json
   * {
   *   allow?: Array<string>
   *   warn?: Array<string>
   *   options?: Array<string>
   * }
   * ```
   *
   * Elements of the `allow` and `warn` arrays strings representing items which should be allowed, or which should trigger a warning; license data found in package which not present in either array will produce a license violation (effectively a "hard" error). For example, to allow Apache-2.0 and MIT to the allow list, simply add the strings "Apache-2.0" and "MIT" to the `allow` array. Strings appearing in these arrays are generally "what you see is what you get", with two important exceptions: strings which are recognized as license classes and strings which are recognized as PURLs are handled differently to allow for more flexible license policy creation.
   *
   * ## License Classes
   *
   * Strings which are license classes will expand to a list of licenses known to be in that particular license class. Recognized license classes are:
   *   'permissive',
   *   'permissive (model)',
   *   'permissive (gold)',
   *   'permissive (silver)',
   *   'permissive (bronze)',
   *   'permissive (lead)',
   *   'copyleft',
   *   'maximal copyleft',
   *   'network copyleft',
   *   'strong copyleft',
   *   'weak copyleft',
   *   'contributor license agreement',
   *   'public domain',
   *   'proprietary free',
   *   'source available',
   *   'proprietary',
   *   'commercial',
   *   'patent'
   *
   * Users can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.
   *
   *
   * ## PURLs
   *
   * Users may also modify their license policy's allow and warn lists by using [package URLs](https://github.com/package-url/purl-spec) (aka PURLs), which support glob patterns to allow a range of versions, files and directories, etc.
   *
   * purl qualifiers which support globs are `filename`, `version_glob`, `artifact_id` and `license_provenance` (primarily used for allowing data from registry metadata).
   *
   * ### Examples:
   * Allow all license data found in a specific version of a package 4.14.1: `pkg:npm/lodash@4.14.1`
   * Allow all license data found in a version range of a package: `pkg:npm/lodash?version_glob=15.*`
   * Allow all license data in the test directory of a given package for certain version ranges: `pkg:npm/lodash@15.*.*?file_name=lodash/test/*`
   * Allow all license data taken from the package registry for a package and version range: `pkg:npm/lodash?version_glob=*&license_provenance=registry_metadata`
   *
   * ## Available options
   *
   * `toplevelOnly`: only apply the license policy to "top level" license data in a package, which includes registry metadata, LICENSE files, and manifest files which are closest to the root of the package.
   *
   * `applyToUnidentified`: Apply license policy to found but unidentified license data. If enabled, the license policy will be applied to license data which could not be affirmatively identified as a known license (this will effectively merge the license policy violation and unidentified license alerts). If disabled, license policy alerts will only be shown for license data which is positively identified as something not allowed or set to warn by the license policy.
   *
   * This endpoint consumes 100 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   *       - packages:list
   * - license-policy:read
   */
  licensePolicy: {
    requestBody?: {
      content: {
        'application/json': components['schemas']['LicenseAllowListRequest']
      }
    }
    responses: {
      /** @description Data about license policy violations, if any exist */
      200: {
        content: {
          'application/x-ndjson': Array<{
            filepathOrProvenance: string[]
            /** @default */
            level: string
            /** @default */
            purl: string
            /** @default */
            spdxAtomOrExtraData: string
            /** @default */
            violationExplanation: string
          }>
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
      500: components['responses']['SocketInternalServerError']
    }
  }
  /**
   * Saturate License Policy (Legacy)
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/updateorglicensepolicy) instead.
   *
   * Get the "saturated" version of a license policy's allow list, filling in the entire set of allowed
   * license data. For example, the saturated form of a license allow list which only specifies that
   * licenses in the tier "maximal copyleft" are allowed is shown below (note the expanded `allowedStrings` property):
   *
   * ```json
   * {
   *   "allowedApprovalSources": [],
   *   "allowedFamilies": [],
   *   "allowedTiers": [
   *     "maximal copyleft"
   *   ],
   *   "allowedStrings": [
   *     "Parity-6.0.0",
   *     "QPL-1.0-INRIA-2004",
   *     "QPL-1.0",
   *     "RPL-1.1",
   *     "RPL-1.5"
   *   ],
   *   "allowedPURLs": [],
   *   "focusAlertsHere": false
   * }
   * ```
   *
   * This may be helpful for users who want to compose more complex sets of allowed license data via
   * the "allowedStrings" property, or for users who want to know more about the contents of a particular
   * license group (family, tier, or approval source).
   *
   * ## Allow List Schema
   *
   * ```json
   * ```
   *
   * where
   *
   * PermissiveTier ::= "model permissive" | "gold" | "silver" | "bronze" | "lead"
   * CopyleftTier ::= "maximal copyleft" | "network copyleft" | "strong copyleft" | "weak copyleft"
   *
   * ## Return Value
   *
   * The returned value has the same shape as a license allow list:
   *
   * ```json
   * {
   *   allowedApprovalSources?: Array<"fsf" | "osi">,
   *   allowedFamilies?: Array<"copyleft" | "permissive">,
   *   allowedTiers?: Array<PermissiveTier | CopyleftTier>,
   *   allowedStrings?: Array<string>
   *   allowedPURLs?: Array<string>
   *   focusAlertsHere?: boolean
   * }
   * ```
   *
   * where
   *
   * PermissiveTier ::= "model permissive" | "gold" | "silver" | "bronze" | "lead"
   * CopyleftTier ::= "maximal copyleft" | "network copyleft" | "strong copyleft" | "weak copyleft"
   *
   * readers can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.
   *
   * ### Example request bodies:
   * ```json
   * {
   *   "allowedApprovalSources": ["fsf"],
   *   "allowedPURLs": [],
   *   "allowedFamilies": ["copyleft"],
   *   "allowedTiers": ["model permissive"],
   *   "allowedStrings": ["License :: OSI Approved :: BSD License"],
   *   "focusAlertsHere": false
   * }
   * ```
   *
   * This endpoint consumes 100 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - packages:list
   */
  saturateLicensePolicy: {
    requestBody?: {
      content: {
        'application/json': {
          allow: components['schemas']['LicenseAllowList']
          warn: components['schemas']['LicenseAllowList']
          monitor: components['schemas']['LicenseAllowList']
          allowedApprovalSources: string[] | null
          allowedFamilies: string[] | null
          allowedTiers: string[] | null
          allowedStrings: string[] | null
          allowedPURLs: string[] | null
          /** @default false */
          focusAlertsHere: boolean | null
        }
      }
    }
    responses: {
      /** @description Saturated License Allow List */
      200: {
        content: {
          'application/json': components['schemas']['LicensePolicy']
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
      500: components['responses']['SocketInternalServerError']
    }
  }
  /**
   * License Metadata
   * @description For an array of license identifiers or names (short form SPDX identifiers, or long form license names),
   *     returns an array of metadata for the corresponding license, if the license is recognized. If the query
   *     parameter `includetext=true` is set, the returned metadata will also include the license text.
   *
   *
   *     ## Example request body:
   *
   *     ```json
   *     [
   *       "Apache-2.0",
   *       "BSD Zero Clause License"
   *     ]
   *     ```
   *
   *
   *     ## Return value
   *
   *     ```json
   *     // Response schema:
   *     Array<{
   *       licenseId: string,
   *       name?: string,
   *       deprecated?: string,
   *       crossref?: string
   *       classes: Array<string>
   *       text?: string
   *     }>
   *
   *     // Example response:
   *     [
   *       {
   *         "licenseId": "Apache-2.0",
   *         "name": "Apache License 2.0",
   *         "deprecated": false,
   *         "crossref": "https://spdx.org/licenses/Apache-2.0.html",
   *         "classes": [
   *           "fsf libre",
   *           "osi approved",
   *           "permissive (silver)"
   *         ]
   *       },
   *       {
   *         "licenseId": "0BSD",
   *         "name": "BSD Zero Clause License",
   *         "deprecated": false,
   *         "crossref": "https://spdx.org/licenses/0BSD.html",
   *         "classes": [
   *           "osi approved",
   *           "permissive (bronze)"
   *         ]
   *       }
   *     ]
   *     ```
   *
   *     ## License policy schema
   *
   * ```json
   * {
   *   allow?: Array<string>
   *   warn?: Array<string>
   *   options?: Array<string>
   * }
   * ```
   *
   * Elements of the `allow` and `warn` arrays strings representing items which should be allowed, or which should trigger a warning; license data found in package which not present in either array will produce a license violation (effectively a "hard" error). For example, to allow Apache-2.0 and MIT to the allow list, simply add the strings "Apache-2.0" and "MIT" to the `allow` array. Strings appearing in these arrays are generally "what you see is what you get", with two important exceptions: strings which are recognized as license classes and strings which are recognized as PURLs are handled differently to allow for more flexible license policy creation.
   *
   * ## License Classes
   *
   * Strings which are license classes will expand to a list of licenses known to be in that particular license class. Recognized license classes are:
   *   'permissive',
   *   'permissive (model)',
   *   'permissive (gold)',
   *   'permissive (silver)',
   *   'permissive (bronze)',
   *   'permissive (lead)',
   *   'copyleft',
   *   'maximal copyleft',
   *   'network copyleft',
   *   'strong copyleft',
   *   'weak copyleft',
   *   'contributor license agreement',
   *   'public domain',
   *   'proprietary free',
   *   'source available',
   *   'proprietary',
   *   'commercial',
   *   'patent'
   *
   * Users can learn more about [copyleft tiers](https://blueoakcouncil.org/copyleft) and [permissive tiers](https://blueoakcouncil.org/list) by reading the linked resources.
   *
   *
   * ## PURLs
   *
   * Users may also modify their license policy's allow and warn lists by using [package URLs](https://github.com/package-url/purl-spec) (aka PURLs), which support glob patterns to allow a range of versions, files and directories, etc.
   *
   * purl qualifiers which support globs are `filename`, `version_glob`, `artifact_id` and `license_provenance` (primarily used for allowing data from registry metadata).
   *
   * ### Examples:
   * Allow all license data found in a specific version of a package 4.14.1: `pkg:npm/lodash@4.14.1`
   * Allow all license data found in a version range of a package: `pkg:npm/lodash?version_glob=15.*`
   * Allow all license data in the test directory of a given package for certain version ranges: `pkg:npm/lodash@15.*.*?file_name=lodash/test/*`
   * Allow all license data taken from the package registry for a package and version range: `pkg:npm/lodash?version_glob=*&license_provenance=registry_metadata`
   *
   * ## Available options
   *
   * `toplevelOnly`: only apply the license policy to "top level" license data in a package, which includes registry metadata, LICENSE files, and manifest files which are closest to the root of the package.
   *
   * `applyToUnidentified`: Apply license policy to found but unidentified license data. If enabled, the license policy will be applied to license data which could not be affirmatively identified as a known license (this will effectively merge the license policy violation and unidentified license alerts). If disabled, license policy alerts will only be shown for license data which is positively identified as something not allowed or set to warn by the license policy.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   */
  licenseMetadata: {
    parameters: {
      query?: {
        /** @description If `true`, the response will include the full text of the requested licenses */
        includetext?: boolean | undefined
      }
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['SLicenseMetaReq']
      }
    }
    responses: {
      /** @description Metadata for the requested licenses */
      200: {
        content: {
          'application/json': components['schemas']['SLicenseMetaRes']
        }
      }
      400: components['responses']['SocketBadRequest']
    }
  }
  /**
   * Alert Types Metadata
   * @description For an array of alert type identifiers, returns metadata for each alert type. Optionally, specify a language via the 'language' query parameter.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   */
  alertTypes: {
    parameters: {
      query?: {
        /** @description Language for alert metadata */
        language?:
          | 'ach-UG'
          | 'de-DE'
          | 'en-US'
          | 'es-ES'
          | 'fr-FR'
          | 'it-IT'
          | undefined
      }
    }
    requestBody?: {
      content: {
        'application/json': string[]
      }
    }
    responses: {
      /** @description Metadata for the requested alert types */
      200: {
        content: {
          'application/json': Array<{
            /** @default */
            type: string
            /** @default */
            title: string
            /** @default */
            description: string
            /** @default */
            suggestion: string
            /** @default */
            emoji: string
            /** @default */
            nextStepTitle: string
            props: {
              [key: string]: string
            } | null
          }>
        }
      }
      400: components['responses']['SocketBadRequest']
    }
  }
  /**
   * Returns the OpenAPI definition
   * @description Retrieve the API specification in an Openapi JSON format.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   */
  getOpenAPI: {
    responses: {
      /** @description OpenAPI specification */
      200: {
        content: {
          'application/json': unknown
        }
      }
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Returns the OpenAPI definition
   * @description Retrieve the API specification in an Openapi JSON format.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   */
  getOpenAPIJSON: {
    responses: {
      /** @description OpenAPI specification */
      200: {
        content: {
          'application/json': unknown
        }
      }
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get quota
   * @description Get your current API quota. You can use this endpoint to prevent doing requests that might spend all your quota.
   *
   * This endpoint consumes 0 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - No Scopes Required, but authentication is required
   */
  getQuota: {
    responses: {
      /** @description Quota amount */
      200: {
        content: {
          'application/json': {
            /** @default 0 */
            quota: number
          }
        }
      }
      401: components['responses']['SocketUnauthorized']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * List organizations
   * @description Get information on the current organizations associated with the API token.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - No Scopes Required, but authentication is required
   */
  getOrganizations: {
    responses: {
      /** @description Organizations information */
      200: {
        content: {
          'application/json': {
            organizations: {
              [key: string]: {
                /** @default */
                id: string
                /** @default */
                name: string | null
                /** @default */
                image: string | null
                /** @default */
                plan: string
                /** @default */
                slug: string
              }
            }
          }
        }
      }
      401: components['responses']['SocketUnauthorized']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Calculate settings
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/updateorgsecuritypolicy) instead.
   *
   * Get current settings for the requested organizations and default settings to allow deferrals.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - No Scopes Required, but authentication is required
   */
  postSettings: {
    /** @description Array of organization selector objects (with `organization` field holding the organization ID) to get settings for */
    requestBody?: {
      content: {
        'application/json': Array<{
          /** @default */
          organization?: string | undefined
        }>
      }
    }
    responses: {
      /** @description Organization settings. Returned object contains default issue rules and an array of entries, with each entry representing an organization's settings. */
      200: {
        content: {
          'application/json': {
            defaults: {
              issueRules: {
                [key: string]: {
                  /** @enum {string} */
                  action?: 'error' | 'ignore' | 'warn' | undefined
                }
              }
            }
            entries: Array<{
              /** @default */
              start: string | null
              settings: {
                [key: string]: {
                  deferTo: string | null
                  issueRules: {
                    [key: string]: {
                      /** @enum {string} */
                      action: 'defer' | 'error' | 'ignore' | 'warn' | 'monitor'
                    }
                  }
                }
              }
            }>
          }
        }
      }
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get supported files for report
   * @deprecated
   * @description **This endpoint is deprecated.** Deprecated since 2023-01-15. Use the [successor version](https://docs.socket.dev/reference/getsupportedfiles) instead.
   *
   * This route has been moved to the `orgs/{org_slug}/supported-files` endpoint.
   *
   * Get a list of supported files for project report generation.
   * Files are categorized first by environment (e.g. NPM or PyPI), then by name.
   *
   * Files whose names match the patterns returned by this endpoint can be uploaded for report generation.
   * Examples of supported filenames include `package.json`, `package-lock.json`, and `yarn.lock`.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   */
  getReportSupportedFiles: {
    responses: {
      /** @description Glob patterns used to match supported files */
      200: {
        content: {
          'application/json': {
            [key: string]: {
              [key: string]: {
                /** @default */
                pattern: string
              }
            }
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Delete a report
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference) instead.
   *
   * Deprecated: Use `/orgs/{org_slug}/full-scans` instead. Delete a specific project report generated with the GitHub app.
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - report:write
   */
  deleteReport: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** @description Success */
      200: {
        content: {
          'application/json': {
            /** @default ok */
            status: string
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get list of reports
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference) instead.
   *
   * Deprecated: Use `/orgs/{org_slug}/full-scans` instead. Get all your project reports generated with the GitHub app.
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - report:list
   */
  getReportList: {
    parameters: {
      query?: {
        /** @description A Unix timestamp in seconds to filter results prior to this date. */
        from?: string | undefined
        /** @description When defined, returns only reports for the associated repository slug. */
        repo?: string | undefined
      }
    }
    responses: {
      /** @description List of project reports */
      200: {
        content: {
          'application/json': Array<{
            /** @default */
            id: string
            /** @default */
            url: string
            /** @default */
            repo: string
            /** @default */
            branch: string
            /** @default null */
            pull_requests: Record<string, never>
            /** @default */
            commit: string
            /** @default */
            owner: string
            /** @default */
            created_at: string
          }>
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Create a report
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/createorgfullscan) instead.
   *
   * Deprecated: Use `/orgs/{org_slug}/full-scans` instead.
   *
   * Upload a lockfile to get your project analyzed by Socket.
   * You can upload multiple lockfiles in the same request, but each filename must be unique.
   *
   * The name of the file must be in the supported list.
   *
   * For example, these are valid filenames: `package.json`, `folder/package.json` and `deep/nested/folder/package.json`.
   *
   * This endpoint consumes 100 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - report:write
   */
  createReport: {
    requestBody?: {
      content: {
        'multipart/form-data': {
          issueRules?: {
            [key: string]: boolean
          }
          [key: string]: undefined
        }
      }
    }
    responses: {
      /** @description ID and URL of the project report */
      200: {
        content: {
          'application/json': {
            /** @default */
            id: string
            /** @default */
            url: string
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * View a report
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/getorgfullscan) instead.
   *
   * Deprecated: Use `/orgs/{org_slug}/full-scans` instead. Get all the issues, packages, and scores related to an specific project report.
   *
   * This endpoint consumes 10 units of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - report:read
   */
  getReport: {
    parameters: {
      path: {
        id: string
      }
    }
    responses: {
      /** @description Socket report */
      200: {
        content: {
          'application/json': components['schemas']['SocketReport']
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      410: components['responses']['SocketGone']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * List GitHub repositories
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/getorgrepolist) instead.
   *
   * Deprecated: Use `/orgs/{org_slug}/repos` instead. Get all GitHub repositories associated with a Socket org.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - repo:list
   */
  getRepoList: {
    parameters: {
      query?: {
        pageToken?: string | undefined
      }
    }
    responses: {
      /** @description List of GitHub repositories associated with the organization. */
      200: {
        content: {
          'application/json': {
            results: Array<{
              /** @default */
              id: string
              /** @default */
              created_at: string
              /** @default */
              updated_at: string
              /** @default */
              github_install_id: string
              /** @default */
              github_repo_id: string
              /** @default */
              name: string
              /** @default */
              github_full_name: string
              /** @default */
              organization_id: string | null
              latest_project_report?: {
                /** @default */
                id: string
                /** @default */
                created_at: string
              }
            }>
          }
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get issues by package
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference) instead.
   *
   * Get all the issues related with a particular npm package version.
   * This endpoint returns the issue type, location, and additional details related to each issue in the `props` attribute.
   *
   * You can [see here](https://socket.dev/alerts) the full list of issues.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - No Scopes Required, but authentication is required
   */
  getIssuesByNPMPackage: {
    parameters: {
      path: {
        package: string
        version: string
      }
    }
    responses: {
      /** @description Socket issue lists */
      200: {
        content: {
          'application/json': components['schemas']['SocketIssueList']
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get score by package
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/batchpackagefetch) instead.
   *
   * Get all the scores and metrics by category that are used to evaluate the package version.
   *
   * - depscore: The average of all score factors. (0-1)
   * - supplyChainRisk: Score factors relating to supply chain security (0-1)
   * - downloadCount: The number of downloads for the package. Higher downloads contribute to a higher score.
   * - supplyChainRiskIssueLow/Mid/High/Critical: The number of supply chain risk issues of varying severity. Lower numbers contribute to a higher score.
   * - dependencyCount: The number of production dependencies. Lower count contributes to a higher score.
   * - devDependencyCount: The number of development dependencies. Lower count contributes to a higher score.
   * - transitiveDependencyCount: The number of transitive dependencies. Lower count contributes to a higher score.
   * - totalDependencyCount: The total number of dependencies (production + development + transitive). Lower count contributes to a higher score.
   * - quality: Score factors relating to code quality (0-1)
   * - qualityIssueLow/Mid/High/Critical: The number of code quality issues of varying severity. Lower numbers contribute to a higher score.
   * - linesOfCode: The number of lines of code in the package. Lower count contributes to a higher score.
   * - readmeLength: The length of the package's README file. Longer READMEs contribute to a higher score.
   * - maintenance: Score factors relating to package maintenance (0-1)
   * - maintainerCount: The number of maintainers for the package. More maintainers contribute to a higher score.
   * - versionsLastWeek/Month/TwoMonths/Year: The number of versions released in different time periods. More recent releases contribute to a higher score.
   * - versionCount: The total number of versions released. Higher count contributes to a higher score.
   * - maintenanceIssueLow/Mid/High/Critical: The number of maintenance issues of varying severity. Lower numbers contribute to a higher score.
   * - vulnerability: Score factors relating to package vulnerabilities (0-1)
   * - vulnerabilityIssueLow/Mid/High/Critical: The number of vulnerability issues of varying severity. Lower numbers contribute to a higher score.
   * - dependencyVulnerabilityCount: The number of vulnerabilities in the package's dependencies. Lower count contributes to a higher score.
   * - vulnerabilityCount: The number of vulnerabilities in the package itself. Lower count contributes to a higher score.
   * - license: Score factors relating to package licensing (0-1)
   * - licenseIssueLow/Mid/High/Critical: The number of license issues of varying severity. Lower numbers contribute to a higher score.
   * - licenseQuality: A score indicating the quality/permissiveness of the package's license. Higher quality contributes to a higher score.
   * - miscellaneous: Miscellaneous metadata about the package version.
   * - versionAuthorName/Email: The name and email of the version author.
   * - fileCount: The number of files in the package.
   * - byteCount: The total size in bytes of the package.
   * - typeModule: Whether the package declares a "type": "module" field.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - No Scopes Required, but authentication is required
   */
  getScoreByNPMPackage: {
    parameters: {
      path: {
        package: string
        version: string
      }
    }
    responses: {
      /** @description Socket package scores */
      200: {
        content: {
          'application/json': components['schemas']['SocketPackageScore']
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get organization analytics (unstable)
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/historicalalertstrend) instead.
   *
   * Please implement against the [Historical dependencies](/reference/historicaldependenciestrend) or [Historical alerts](/reference/historicalalertstrend) endpoints.
   *
   * Get analytics data regarding the number of alerts found across all active repositories.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - report:write
   */
  getOrgAnalytics: {
    parameters: {
      path: {
        filter: string
      }
    }
    responses: {
      /** @description Socket analytics - organization-level data */
      200: {
        content: {
          'application/json': Array<{
            /** @default 0 */
            id: number
            /** @default */
            created_at: string
            /** @default */
            repository_id: string
            /** @default 0 */
            organization_id: number
            /** @default */
            repository_name: string
            /** @default 0 */
            total_critical_alerts: number
            /** @default 0 */
            total_high_alerts: number
            /** @default 0 */
            total_medium_alerts: number
            /** @default 0 */
            total_low_alerts: number
            /** @default 0 */
            total_critical_added: number
            /** @default 0 */
            total_high_added: number
            /** @default 0 */
            total_medium_added: number
            /** @default 0 */
            total_low_added: number
            /** @default 0 */
            total_critical_prevented: number
            /** @default 0 */
            total_high_prevented: number
            /** @default 0 */
            total_medium_prevented: number
            /** @default 0 */
            total_low_prevented: number
            /** @default {} */
            top_five_alert_types: Record<string, never>
          }>
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
  /**
   * Get repository analytics
   * @deprecated
   * @description **This endpoint is deprecated.** Use the [successor version](https://docs.socket.dev/reference/historicalalertstrend) instead.
   *
   * Please implement against the [Historical dependencies](/reference/historicaldependenciestrend) or [Historical alerts](/reference/historicalalertstrend) endpoints.
   *
   * Get analytics data regarding the number of alerts found in a single repository.
   *
   * This endpoint consumes 1 unit of your quota.
   *
   * This endpoint requires the following org token scopes:
   * - report:write
   */
  getRepoAnalytics: {
    parameters: {
      path: {
        name: string
        filter: string
      }
    }
    responses: {
      /** @description Socket analytics - repo-level data */
      200: {
        content: {
          'application/json': Array<{
            /** @default 0 */
            id: number
            /** @default */
            repository_id: string
            /** @default */
            created_at: string
            /** @default 0 */
            organization_id: number
            /** @default */
            repository_name: string
            /** @default 0 */
            total_critical_alerts: number
            /** @default 0 */
            total_high_alerts: number
            /** @default 0 */
            total_medium_alerts: number
            /** @default 0 */
            total_low_alerts: number
            /** @default 0 */
            total_critical_added: number
            /** @default 0 */
            total_high_added: number
            /** @default 0 */
            total_medium_added: number
            /** @default 0 */
            total_low_added: number
            /** @default 0 */
            total_critical_prevented: number
            /** @default 0 */
            total_high_prevented: number
            /** @default 0 */
            total_medium_prevented: number
            /** @default 0 */
            total_low_prevented: number
            /** @default {} */
            top_five_alert_types: Record<string, never>
          }>
        }
      }
      400: components['responses']['SocketBadRequest']
      401: components['responses']['SocketUnauthorized']
      403: components['responses']['SocketForbidden']
      404: components['responses']['SocketNotFoundResponse']
      429: components['responses']['SocketTooManyRequestsResponse']
    }
  }
}
